var GTExMiniBrowser=function(t){"use strict";var n={},e={},r=34,i=10,u=13;function o(t){return new Function("d","return {"+t.map(function(t,n){return JSON.stringify(t)+": d["+n+"]"}).join(",")+"}")}var a=function(t){var a=new RegExp('["'+t+"\n\r]"),c=t.charCodeAt(0);function s(t,o){var a,s=[],l=t.length,f=0,h=0,g=l<=0,p=!1;function d(){if(g)return e;if(p)return p=!1,n;var o,a,s=f;if(t.charCodeAt(s)===r){for(;f++<l&&t.charCodeAt(f)!==r||t.charCodeAt(++f)===r;);return(o=f)>=l?g=!0:(a=t.charCodeAt(f++))===i?p=!0:a===u&&(p=!0,t.charCodeAt(f)===i&&++f),t.slice(s+1,o-1).replace(/""/g,'"')}for(;f<l;){if((a=t.charCodeAt(o=f++))===i)p=!0;else if(a===u)p=!0,t.charCodeAt(f)===i&&++f;else if(a!==c)continue;return t.slice(s,o)}return g=!0,t.slice(s,l)}for(t.charCodeAt(l-1)===i&&--l,t.charCodeAt(l-1)===u&&--l;(a=d())!==e;){for(var m=[];a!==n&&a!==e;)m.push(a),a=d();o&&null==(m=o(m,h++))||s.push(m)}return s}function l(n){return n.map(f).join(t)}function f(t){return null==t?"":a.test(t+="")?'"'+t.replace(/"/g,'""')+'"':t}return{parse:function(t,n){var e,r,i=s(t,function(t,i){if(e)return e(t,i-1);r=t,e=n?function(t,n){var e=o(t);return function(r,i){return n(e(r),i,t)}}(t,n):o(t)});return i.columns=r||[],i},parseRows:s,format:function(n,e){return null==e&&(e=function(t){var n=Object.create(null),e=[];return t.forEach(function(t){for(var r in t)r in n||e.push(n[r]=r)}),e}(n)),[e.map(f).join(t)].concat(n.map(function(n){return e.map(function(t){return f(n[t])}).join(t)})).join("\n")},formatRows:function(t){return t.map(l).join("\n")}}},c=a(",").parse,s=a("\t").parse;function l(t){if(!t.ok)throw new Error(t.status+" "+t.statusText);return t.text()}var f=function(t,n){return fetch(t,n).then(l)};function h(t){return function(n,e,r){return 2===arguments.length&&"function"==typeof e&&(r=e,e=void 0),f(n,e).then(function(n){return t(n,r)})}}h(c);var g=h(s),p=function(t,n){return t<n?-1:t>n?1:t>=n?0:NaN};var d,m,y=(1===(d=p).length&&(m=d,d=function(t,n){return p(m(t),n)}),{left:function(t,n,e,r){for(null==e&&(e=0),null==r&&(r=t.length);e<r;){var i=e+r>>>1;d(t[i],n)<0?e=i+1:r=i}return e},right:function(t,n,e,r){for(null==e&&(e=0),null==r&&(r=t.length);e<r;){var i=e+r>>>1;d(t[i],n)>0?r=i:e=i+1}return e}}).right,v=Math.sqrt(50),w=Math.sqrt(10),M=Math.sqrt(2),b=function(t,n,e){var r,i,u,o,a=-1;if(e=+e,(t=+t)===(n=+n)&&e>0)return[t];if((r=n<t)&&(i=t,t=n,n=i),0===(o=x(t,n,e))||!isFinite(o))return[];if(o>0)for(t=Math.ceil(t/o),n=Math.floor(n/o),u=new Array(i=Math.ceil(n-t+1));++a<i;)u[a]=(t+a)*o;else for(t=Math.floor(t*o),n=Math.ceil(n*o),u=new Array(i=Math.ceil(t-n+1));++a<i;)u[a]=(t-a)/o;return r&&u.reverse(),u};function x(t,n,e){var r=(n-t)/Math.max(0,e),i=Math.floor(Math.log(r)/Math.LN10),u=r/Math.pow(10,i);return i>=0?(u>=v?10:u>=w?5:u>=M?2:1)*Math.pow(10,i):-Math.pow(10,-i)/(u>=v?10:u>=w?5:u>=M?2:1)}var _=Array.prototype,T=_.map,C=_.slice,A=function(t,n,e){t.prototype=n.prototype=e,e.constructor=t};function N(t,n){var e=Object.create(t.prototype);for(var r in n)e[r]=n[r];return e}function U(){}var D="\\s*([+-]?\\d+)\\s*",S="\\s*([+-]?\\d*\\.?\\d+(?:[eE][+-]?\\d+)?)\\s*",k="\\s*([+-]?\\d*\\.?\\d+(?:[eE][+-]?\\d+)?)%\\s*",F=/^#([0-9a-f]{3})$/,L=/^#([0-9a-f]{6})$/,E=new RegExp("^rgb\\("+[D,D,D]+"\\)$"),Y=new RegExp("^rgb\\("+[k,k,k]+"\\)$"),H=new RegExp("^rgba\\("+[D,D,D,S]+"\\)$"),I=new RegExp("^rgba\\("+[k,k,k,S]+"\\)$"),j=new RegExp("^hsl\\("+[S,k,k]+"\\)$"),q=new RegExp("^hsla\\("+[S,k,k,S]+"\\)$"),O={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074};function P(t){var n;return t=(t+"").trim().toLowerCase(),(n=F.exec(t))?new V((n=parseInt(n[1],16))>>8&15|n>>4&240,n>>4&15|240&n,(15&n)<<4|15&n,1):(n=L.exec(t))?R(parseInt(n[1],16)):(n=E.exec(t))?new V(n[1],n[2],n[3],1):(n=Y.exec(t))?new V(255*n[1]/100,255*n[2]/100,255*n[3]/100,1):(n=H.exec(t))?z(n[1],n[2],n[3],n[4]):(n=I.exec(t))?z(255*n[1]/100,255*n[2]/100,255*n[3]/100,n[4]):(n=j.exec(t))?Q(n[1],n[2]/100,n[3]/100,1):(n=q.exec(t))?Q(n[1],n[2]/100,n[3]/100,n[4]):O.hasOwnProperty(t)?R(O[t]):"transparent"===t?new V(NaN,NaN,NaN,0):null}function R(t){return new V(t>>16&255,t>>8&255,255&t,1)}function z(t,n,e,r){return r<=0&&(t=n=e=NaN),new V(t,n,e,r)}function B(t){return t instanceof U||(t=P(t)),t?new V((t=t.rgb()).r,t.g,t.b,t.opacity):new V}function Z(t,n,e,r){return 1===arguments.length?B(t):new V(t,n,e,null==r?1:r)}function V(t,n,e,r){this.r=+t,this.g=+n,this.b=+e,this.opacity=+r}function W(t){return((t=Math.max(0,Math.min(255,Math.round(t)||0)))<16?"0":"")+t.toString(16)}function Q(t,n,e,r){return r<=0?t=n=e=NaN:e<=0||e>=1?t=n=NaN:n<=0&&(t=NaN),new X(t,n,e,r)}function X(t,n,e,r){this.h=+t,this.s=+n,this.l=+e,this.opacity=+r}function J(t,n,e){return 255*(t<60?n+(e-n)*t/60:t<180?e:t<240?n+(e-n)*(240-t)/60:n)}A(U,P,{displayable:function(){return this.rgb().displayable()},hex:function(){return this.rgb().hex()},toString:function(){return this.rgb()+""}}),A(V,Z,N(U,{brighter:function(t){return t=null==t?1/.7:Math.pow(1/.7,t),new V(this.r*t,this.g*t,this.b*t,this.opacity)},darker:function(t){return t=null==t?.7:Math.pow(.7,t),new V(this.r*t,this.g*t,this.b*t,this.opacity)},rgb:function(){return this},displayable:function(){return 0<=this.r&&this.r<=255&&0<=this.g&&this.g<=255&&0<=this.b&&this.b<=255&&0<=this.opacity&&this.opacity<=1},hex:function(){return"#"+W(this.r)+W(this.g)+W(this.b)},toString:function(){var t=this.opacity;return(1===(t=isNaN(t)?1:Math.max(0,Math.min(1,t)))?"rgb(":"rgba(")+Math.max(0,Math.min(255,Math.round(this.r)||0))+", "+Math.max(0,Math.min(255,Math.round(this.g)||0))+", "+Math.max(0,Math.min(255,Math.round(this.b)||0))+(1===t?")":", "+t+")")}})),A(X,function(t,n,e,r){return 1===arguments.length?function(t){if(t instanceof X)return new X(t.h,t.s,t.l,t.opacity);if(t instanceof U||(t=P(t)),!t)return new X;if(t instanceof X)return t;var n=(t=t.rgb()).r/255,e=t.g/255,r=t.b/255,i=Math.min(n,e,r),u=Math.max(n,e,r),o=NaN,a=u-i,c=(u+i)/2;return a?(o=n===u?(e-r)/a+6*(e<r):e===u?(r-n)/a+2:(n-e)/a+4,a/=c<.5?u+i:2-u-i,o*=60):a=c>0&&c<1?0:o,new X(o,a,c,t.opacity)}(t):new X(t,n,e,null==r?1:r)},N(U,{brighter:function(t){return t=null==t?1/.7:Math.pow(1/.7,t),new X(this.h,this.s,this.l*t,this.opacity)},darker:function(t){return t=null==t?.7:Math.pow(.7,t),new X(this.h,this.s,this.l*t,this.opacity)},rgb:function(){var t=this.h%360+360*(this.h<0),n=isNaN(t)||isNaN(this.s)?0:this.s,e=this.l,r=e+(e<.5?e:1-e)*n,i=2*e-r;return new V(J(t>=240?t-240:t+120,i,r),J(t,i,r),J(t<120?t+240:t-120,i,r),this.opacity)},displayable:function(){return(0<=this.s&&this.s<=1||isNaN(this.s))&&0<=this.l&&this.l<=1&&0<=this.opacity&&this.opacity<=1}}));var G=Math.PI/180,K=180/Math.PI,tt=.96422,nt=1,et=.82521,rt=4/29,it=6/29,ut=3*it*it,ot=it*it*it;function at(t){if(t instanceof ct)return new ct(t.l,t.a,t.b,t.opacity);if(t instanceof gt){if(isNaN(t.h))return new ct(t.l,0,0,t.opacity);var n=t.h*G;return new ct(t.l,Math.cos(n)*t.c,Math.sin(n)*t.c,t.opacity)}t instanceof V||(t=B(t));var e,r,i=ht(t.r),u=ht(t.g),o=ht(t.b),a=st((.2225045*i+.7168786*u+.0606169*o)/nt);return i===u&&u===o?e=r=a:(e=st((.4360747*i+.3850649*u+.1430804*o)/tt),r=st((.0139322*i+.0971045*u+.7141733*o)/et)),new ct(116*a-16,500*(e-a),200*(a-r),t.opacity)}function ct(t,n,e,r){this.l=+t,this.a=+n,this.b=+e,this.opacity=+r}function st(t){return t>ot?Math.pow(t,1/3):t/ut+rt}function lt(t){return t>it?t*t*t:ut*(t-rt)}function ft(t){return 255*(t<=.0031308?12.92*t:1.055*Math.pow(t,1/2.4)-.055)}function ht(t){return(t/=255)<=.04045?t/12.92:Math.pow((t+.055)/1.055,2.4)}function gt(t,n,e,r){this.h=+t,this.c=+n,this.l=+e,this.opacity=+r}A(ct,function(t,n,e,r){return 1===arguments.length?at(t):new ct(t,n,e,null==r?1:r)},N(U,{brighter:function(t){return new ct(this.l+18*(null==t?1:t),this.a,this.b,this.opacity)},darker:function(t){return new ct(this.l-18*(null==t?1:t),this.a,this.b,this.opacity)},rgb:function(){var t=(this.l+16)/116,n=isNaN(this.a)?t:t+this.a/500,e=isNaN(this.b)?t:t-this.b/200;return new V(ft(3.1338561*(n=tt*lt(n))-1.6168667*(t=nt*lt(t))-.4906146*(e=et*lt(e))),ft(-.9787684*n+1.9161415*t+.033454*e),ft(.0719453*n-.2289914*t+1.4052427*e),this.opacity)}})),A(gt,function(t,n,e,r){return 1===arguments.length?function(t){if(t instanceof gt)return new gt(t.h,t.c,t.l,t.opacity);if(t instanceof ct||(t=at(t)),0===t.a&&0===t.b)return new gt(NaN,0,t.l,t.opacity);var n=Math.atan2(t.b,t.a)*K;return new gt(n<0?n+360:n,Math.sqrt(t.a*t.a+t.b*t.b),t.l,t.opacity)}(t):new gt(t,n,e,null==r?1:r)},N(U,{brighter:function(t){return new gt(this.h,this.c,this.l+18*(null==t?1:t),this.opacity)},darker:function(t){return new gt(this.h,this.c,this.l-18*(null==t?1:t),this.opacity)},rgb:function(){return at(this).rgb()}}));var pt=-.14861,dt=1.78277,mt=-.29227,yt=-.90649,vt=1.97294,wt=vt*yt,Mt=vt*dt,bt=dt*mt-yt*pt;function xt(t,n,e,r){this.h=+t,this.s=+n,this.l=+e,this.opacity=+r}A(xt,function(t,n,e,r){return 1===arguments.length?function(t){if(t instanceof xt)return new xt(t.h,t.s,t.l,t.opacity);t instanceof V||(t=B(t));var n=t.r/255,e=t.g/255,r=t.b/255,i=(bt*r+wt*n-Mt*e)/(bt+wt-Mt),u=r-i,o=(vt*(e-i)-mt*u)/yt,a=Math.sqrt(o*o+u*u)/(vt*i*(1-i)),c=a?Math.atan2(o,u)*K-120:NaN;return new xt(c<0?c+360:c,a,i,t.opacity)}(t):new xt(t,n,e,null==r?1:r)},N(U,{brighter:function(t){return t=null==t?1/.7:Math.pow(1/.7,t),new xt(this.h,this.s,this.l*t,this.opacity)},darker:function(t){return t=null==t?.7:Math.pow(.7,t),new xt(this.h,this.s,this.l*t,this.opacity)},rgb:function(){var t=isNaN(this.h)?0:(this.h+120)*G,n=+this.l,e=isNaN(this.s)?0:this.s*n*(1-n),r=Math.cos(t),i=Math.sin(t);return new V(255*(n+e*(pt*r+dt*i)),255*(n+e*(mt*r+yt*i)),255*(n+e*(vt*r)),this.opacity)}}));var _t=function(t){return function(){return t}};function Tt(t){return 1==(t=+t)?Ct:function(n,e){return e-n?function(t,n,e){return t=Math.pow(t,e),n=Math.pow(n,e)-t,e=1/e,function(r){return Math.pow(t+r*n,e)}}(n,e,t):_t(isNaN(n)?e:n)}}function Ct(t,n){var e=n-t;return e?function(t,n){return function(e){return t+e*n}}(t,e):_t(isNaN(t)?n:t)}var At=function t(n){var e=Tt(n);function r(t,n){var r=e((t=Z(t)).r,(n=Z(n)).r),i=e(t.g,n.g),u=e(t.b,n.b),o=Ct(t.opacity,n.opacity);return function(n){return t.r=r(n),t.g=i(n),t.b=u(n),t.opacity=o(n),t+""}}return r.gamma=t,r}(1),Nt=function(t,n){return n-=t=+t,function(e){return t+n*e}},Ut=/[-+]?(?:\d+\.?\d*|\.?\d+)(?:[eE][-+]?\d+)?/g,Dt=new RegExp(Ut.source,"g");var St=function(t,n){var e,r=typeof n;return null==n||"boolean"===r?_t(n):("number"===r?Nt:"string"===r?(e=P(n))?(n=e,At):function(t,n){var e,r,i,u=Ut.lastIndex=Dt.lastIndex=0,o=-1,a=[],c=[];for(t+="",n+="";(e=Ut.exec(t))&&(r=Dt.exec(n));)(i=r.index)>u&&(i=n.slice(u,i),a[o]?a[o]+=i:a[++o]=i),(e=e[0])===(r=r[0])?a[o]?a[o]+=r:a[++o]=r:(a[++o]=null,c.push({i:o,x:Nt(e,r)})),u=Dt.lastIndex;return u<n.length&&(i=n.slice(u),a[o]?a[o]+=i:a[++o]=i),a.length<2?c[0]?function(t){return function(n){return t(n)+""}}(c[0].x):function(t){return function(){return t}}(n):(n=c.length,function(t){for(var e,r=0;r<n;++r)a[(e=c[r]).i]=e.x(t);return a.join("")})}:n instanceof P?At:n instanceof Date?function(t,n){var e=new Date;return n-=t=+t,function(r){return e.setTime(t+n*r),e}}:Array.isArray(n)?function(t,n){var e,r=n?n.length:0,i=t?Math.min(r,t.length):0,u=new Array(i),o=new Array(r);for(e=0;e<i;++e)u[e]=St(t[e],n[e]);for(;e<r;++e)o[e]=n[e];return function(t){for(e=0;e<i;++e)o[e]=u[e](t);return o}}:"function"!=typeof n.valueOf&&"function"!=typeof n.toString||isNaN(n)?function(t,n){var e,r={},i={};for(e in null!==t&&"object"==typeof t||(t={}),null!==n&&"object"==typeof n||(n={}),n)e in t?r[e]=St(t[e],n[e]):i[e]=n[e];return function(t){for(e in r)i[e]=r[e](t);return i}}:Nt)(t,n)},kt=function(t,n){return n-=t=+t,function(e){return Math.round(t+n*e)}},Ft=function(t){return function(){return t}},Lt=function(t){return+t},Et=[0,1];function Yt(t,n){return(n-=t=+t)?function(e){return(e-t)/n}:Ft(n)}function Ht(t,n,e,r){var i=t[0],u=t[1],o=n[0],a=n[1];return u<i?(i=e(u,i),o=r(a,o)):(i=e(i,u),o=r(o,a)),function(t){return o(i(t))}}function It(t,n,e,r){var i=Math.min(t.length,n.length)-1,u=new Array(i),o=new Array(i),a=-1;for(t[i]<t[0]&&(t=t.slice().reverse(),n=n.slice().reverse());++a<i;)u[a]=e(t[a],t[a+1]),o[a]=r(n[a],n[a+1]);return function(n){var e=y(t,n,1,i)-1;return o[e](u[e](n))}}var jt=function(t,n){if((e=(t=n?t.toExponential(n-1):t.toExponential()).indexOf("e"))<0)return null;var e,r=t.slice(0,e);return[r.length>1?r[0]+r.slice(2):r,+t.slice(e+1)]},qt=function(t){return(t=jt(Math.abs(t)))?t[1]:NaN},$t=/^(?:(.)?([<>=^]))?([+\-( ])?([$#])?(0)?(\d+)?(,)?(\.\d+)?(~)?([a-z%])?$/i;function Ot(t){return new Pt(t)}function Pt(t){if(!(n=$t.exec(t)))throw new Error("invalid format: "+t);var n;this.fill=n[1]||" ",this.align=n[2]||">",this.sign=n[3]||"-",this.symbol=n[4]||"",this.zero=!!n[5],this.width=n[6]&&+n[6],this.comma=!!n[7],this.precision=n[8]&&+n[8].slice(1),this.trim=!!n[9],this.type=n[10]||""}Ot.prototype=Pt.prototype,Pt.prototype.toString=function(){return this.fill+this.align+this.sign+this.symbol+(this.zero?"0":"")+(null==this.width?"":Math.max(1,0|this.width))+(this.comma?",":"")+(null==this.precision?"":"."+Math.max(0,0|this.precision))+(this.trim?"~":"")+this.type};var Rt,zt,Bt,Zt,Vt=function(t){t:for(var n,e=t.length,r=1,i=-1;r<e;++r)switch(t[r]){case".":i=n=r;break;case"0":0===i&&(i=r),n=r;break;default:if(i>0){if(!+t[r])break t;i=0}}return i>0?t.slice(0,i)+t.slice(n+1):t},Wt=function(t,n){var e=jt(t,n);if(!e)return t+"";var r=e[0],i=e[1];return i<0?"0."+new Array(-i).join("0")+r:r.length>i+1?r.slice(0,i+1)+"."+r.slice(i+1):r+new Array(i-r.length+2).join("0")},Qt={"%":function(t,n){return(100*t).toFixed(n)},b:function(t){return Math.round(t).toString(2)},c:function(t){return t+""},d:function(t){return Math.round(t).toString(10)},e:function(t,n){return t.toExponential(n)},f:function(t,n){return t.toFixed(n)},g:function(t,n){return t.toPrecision(n)},o:function(t){return Math.round(t).toString(8)},p:function(t,n){return Wt(100*t,n)},r:Wt,s:function(t,n){var e=jt(t,n);if(!e)return t+"";var r=e[0],i=e[1],u=i-(Rt=3*Math.max(-8,Math.min(8,Math.floor(i/3))))+1,o=r.length;return u===o?r:u>o?r+new Array(u-o+1).join("0"):u>0?r.slice(0,u)+"."+r.slice(u):"0."+new Array(1-u).join("0")+jt(t,Math.max(0,n+u-1))[0]},X:function(t){return Math.round(t).toString(16).toUpperCase()},x:function(t){return Math.round(t).toString(16)}},Xt=function(t){return t},Jt=["y","z","a","f","p","n","µ","m","","k","M","G","T","P","E","Z","Y"];zt=function(t){var n,e,r=t.grouping&&t.thousands?(n=t.grouping,e=t.thousands,function(t,r){for(var i=t.length,u=[],o=0,a=n[0],c=0;i>0&&a>0&&(c+a+1>r&&(a=Math.max(1,r-c)),u.push(t.substring(i-=a,i+a)),!((c+=a+1)>r));)a=n[o=(o+1)%n.length];return u.reverse().join(e)}):Xt,i=t.currency,u=t.decimal,o=t.numerals?function(t){return function(n){return n.replace(/[0-9]/g,function(n){return t[+n]})}}(t.numerals):Xt,a=t.percent||"%";function c(t){var n=(t=Ot(t)).fill,e=t.align,c=t.sign,s=t.symbol,l=t.zero,f=t.width,h=t.comma,g=t.precision,p=t.trim,d=t.type;"n"===d?(h=!0,d="g"):Qt[d]||(null==g&&(g=12),p=!0,d="g"),(l||"0"===n&&"="===e)&&(l=!0,n="0",e="=");var m="$"===s?i[0]:"#"===s&&/[boxX]/.test(d)?"0"+d.toLowerCase():"",y="$"===s?i[1]:/[%p]/.test(d)?a:"",v=Qt[d],w=/[defgprs%]/.test(d);function M(t){var i,a,s,M=m,b=y;if("c"===d)b=v(t)+b,t="";else{var x=(t=+t)<0;if(t=v(Math.abs(t),g),p&&(t=Vt(t)),x&&0==+t&&(x=!1),M=(x?"("===c?c:"-":"-"===c||"("===c?"":c)+M,b=("s"===d?Jt[8+Rt/3]:"")+b+(x&&"("===c?")":""),w)for(i=-1,a=t.length;++i<a;)if(48>(s=t.charCodeAt(i))||s>57){b=(46===s?u+t.slice(i+1):t.slice(i))+b,t=t.slice(0,i);break}}h&&!l&&(t=r(t,1/0));var _=M.length+t.length+b.length,T=_<f?new Array(f-_+1).join(n):"";switch(h&&l&&(t=r(T+t,T.length?f-b.length:1/0),T=""),e){case"<":t=M+t+b+T;break;case"=":t=M+T+t+b;break;case"^":t=T.slice(0,_=T.length>>1)+M+t+b+T.slice(_);break;default:t=T+M+t+b}return o(t)}return g=null==g?6:/[gprs]/.test(d)?Math.max(1,Math.min(21,g)):Math.max(0,Math.min(20,g)),M.toString=function(){return t+""},M}return{format:c,formatPrefix:function(t,n){var e=c(((t=Ot(t)).type="f",t)),r=3*Math.max(-8,Math.min(8,Math.floor(qt(n)/3))),i=Math.pow(10,-r),u=Jt[8+r/3];return function(t){return e(i*t)+u}}}}({decimal:".",thousands:",",grouping:[3],currency:["$",""]}),Bt=zt.format,Zt=zt.formatPrefix;var Gt=function(t,n,e){var r,i=t[0],u=t[t.length-1],o=function(t,n,e){var r=Math.abs(n-t)/Math.max(0,e),i=Math.pow(10,Math.floor(Math.log(r)/Math.LN10)),u=r/i;return u>=v?i*=10:u>=w?i*=5:u>=M&&(i*=2),n<t?-i:i}(i,u,null==n?10:n);switch((e=Ot(null==e?",f":e)).type){case"s":var a=Math.max(Math.abs(i),Math.abs(u));return null!=e.precision||isNaN(r=function(t,n){return Math.max(0,3*Math.max(-8,Math.min(8,Math.floor(qt(n)/3)))-qt(Math.abs(t)))}(o,a))||(e.precision=r),Zt(e,a);case"":case"e":case"g":case"p":case"r":null!=e.precision||isNaN(r=function(t,n){return t=Math.abs(t),n=Math.abs(n)-t,Math.max(0,qt(n)-qt(t))+1}(o,Math.max(Math.abs(i),Math.abs(u))))||(e.precision=r-("e"===e.type));break;case"f":case"%":null!=e.precision||isNaN(r=function(t){return Math.max(0,-qt(Math.abs(t)))}(o))||(e.precision=r-2*("%"===e.type))}return Bt(e)};function Kt(){var t=function(t,n){var e,r,i,u=Et,o=Et,a=St,c=!1;function s(){return e=Math.min(u.length,o.length)>2?It:Ht,r=i=null,l}function l(n){return(r||(r=e(u,o,c?function(t){return function(n,e){var r=t(n=+n,e=+e);return function(t){return t<=n?0:t>=e?1:r(t)}}}(t):t,a)))(+n)}return l.invert=function(t){return(i||(i=e(o,u,Yt,c?function(t){return function(n,e){var r=t(n=+n,e=+e);return function(t){return t<=0?n:t>=1?e:r(t)}}}(n):n)))(+t)},l.domain=function(t){return arguments.length?(u=T.call(t,Lt),s()):u.slice()},l.range=function(t){return arguments.length?(o=C.call(t),s()):o.slice()},l.rangeRound=function(t){return o=C.call(t),a=kt,s()},l.clamp=function(t){return arguments.length?(c=!!t,s()):c},l.interpolate=function(t){return arguments.length?(a=t,s()):a},s()}(Yt,Nt);return t.copy=function(){return n=t,Kt().domain(n.domain()).range(n.range()).interpolate(n.interpolate()).clamp(n.clamp());var n},function(t){var n=t.domain;return t.ticks=function(t){var e=n();return b(e[0],e[e.length-1],null==t?10:t)},t.tickFormat=function(t,e){return Gt(n(),t,e)},t.nice=function(e){null==e&&(e=10);var r,i=n(),u=0,o=i.length-1,a=i[u],c=i[o];return c<a&&(r=a,a=c,c=r,r=u,u=o,o=r),(r=x(a,c,e))>0?r=x(a=Math.floor(a/r)*r,c=Math.ceil(c/r)*r,e):r<0&&(r=x(a=Math.ceil(a*r)/r,c=Math.floor(c*r)/r,e)),r>0?(i[u]=Math.floor(a/r)*r,i[o]=Math.ceil(c/r)*r,n(i)):r<0&&(i[u]=Math.ceil(a*r)/r,i[o]=Math.floor(c*r)/r,n(i)),t},t}(t)}var tn=new Date,nn=new Date;function en(t,n,e,r){function i(n){return t(n=new Date(+n)),n}return i.floor=i,i.ceil=function(e){return t(e=new Date(e-1)),n(e,1),t(e),e},i.round=function(t){var n=i(t),e=i.ceil(t);return t-n<e-t?n:e},i.offset=function(t,e){return n(t=new Date(+t),null==e?1:Math.floor(e)),t},i.range=function(e,r,u){var o,a=[];if(e=i.ceil(e),u=null==u?1:Math.floor(u),!(e<r&&u>0))return a;do{a.push(o=new Date(+e)),n(e,u),t(e)}while(o<e&&e<r);return a},i.filter=function(e){return en(function(n){if(n>=n)for(;t(n),!e(n);)n.setTime(n-1)},function(t,r){if(t>=t)if(r<0)for(;++r<=0;)for(;n(t,-1),!e(t););else for(;--r>=0;)for(;n(t,1),!e(t););})},e&&(i.count=function(n,r){return tn.setTime(+n),nn.setTime(+r),t(tn),t(nn),Math.floor(e(tn,nn))},i.every=function(t){return t=Math.floor(t),isFinite(t)&&t>0?t>1?i.filter(r?function(n){return r(n)%t==0}:function(n){return i.count(0,n)%t==0}):i:null}),i}var rn=en(function(){},function(t,n){t.setTime(+t+n)},function(t,n){return n-t});rn.every=function(t){return t=Math.floor(t),isFinite(t)&&t>0?t>1?en(function(n){n.setTime(Math.floor(n/t)*t)},function(n,e){n.setTime(+n+e*t)},function(n,e){return(e-n)/t}):rn:null};var un=6e4,on=6048e5,an=(en(function(t){t.setTime(1e3*Math.floor(t/1e3))},function(t,n){t.setTime(+t+1e3*n)},function(t,n){return(n-t)/1e3},function(t){return t.getUTCSeconds()}),en(function(t){t.setTime(Math.floor(t/un)*un)},function(t,n){t.setTime(+t+n*un)},function(t,n){return(n-t)/un},function(t){return t.getMinutes()}),en(function(t){var n=t.getTimezoneOffset()*un%36e5;n<0&&(n+=36e5),t.setTime(36e5*Math.floor((+t-n)/36e5)+n)},function(t,n){t.setTime(+t+36e5*n)},function(t,n){return(n-t)/36e5},function(t){return t.getHours()}),en(function(t){t.setHours(0,0,0,0)},function(t,n){t.setDate(t.getDate()+n)},function(t,n){return(n-t-(n.getTimezoneOffset()-t.getTimezoneOffset())*un)/864e5},function(t){return t.getDate()-1}));function cn(t){return en(function(n){n.setDate(n.getDate()-(n.getDay()+7-t)%7),n.setHours(0,0,0,0)},function(t,n){t.setDate(t.getDate()+7*n)},function(t,n){return(n-t-(n.getTimezoneOffset()-t.getTimezoneOffset())*un)/on})}var sn=cn(0),ln=cn(1),fn=(cn(2),cn(3),cn(4)),hn=(cn(5),cn(6),en(function(t){t.setDate(1),t.setHours(0,0,0,0)},function(t,n){t.setMonth(t.getMonth()+n)},function(t,n){return n.getMonth()-t.getMonth()+12*(n.getFullYear()-t.getFullYear())},function(t){return t.getMonth()}),en(function(t){t.setMonth(0,1),t.setHours(0,0,0,0)},function(t,n){t.setFullYear(t.getFullYear()+n)},function(t,n){return n.getFullYear()-t.getFullYear()},function(t){return t.getFullYear()}));hn.every=function(t){return isFinite(t=Math.floor(t))&&t>0?en(function(n){n.setFullYear(Math.floor(n.getFullYear()/t)*t),n.setMonth(0,1),n.setHours(0,0,0,0)},function(n,e){n.setFullYear(n.getFullYear()+e*t)}):null};en(function(t){t.setUTCSeconds(0,0)},function(t,n){t.setTime(+t+n*un)},function(t,n){return(n-t)/un},function(t){return t.getUTCMinutes()}),en(function(t){t.setUTCMinutes(0,0,0)},function(t,n){t.setTime(+t+36e5*n)},function(t,n){return(n-t)/36e5},function(t){return t.getUTCHours()});var gn=en(function(t){t.setUTCHours(0,0,0,0)},function(t,n){t.setUTCDate(t.getUTCDate()+n)},function(t,n){return(n-t)/864e5},function(t){return t.getUTCDate()-1});function pn(t){return en(function(n){n.setUTCDate(n.getUTCDate()-(n.getUTCDay()+7-t)%7),n.setUTCHours(0,0,0,0)},function(t,n){t.setUTCDate(t.getUTCDate()+7*n)},function(t,n){return(n-t)/on})}var dn=pn(0),mn=pn(1),yn=(pn(2),pn(3),pn(4)),vn=(pn(5),pn(6),en(function(t){t.setUTCDate(1),t.setUTCHours(0,0,0,0)},function(t,n){t.setUTCMonth(t.getUTCMonth()+n)},function(t,n){return n.getUTCMonth()-t.getUTCMonth()+12*(n.getUTCFullYear()-t.getUTCFullYear())},function(t){return t.getUTCMonth()}),en(function(t){t.setUTCMonth(0,1),t.setUTCHours(0,0,0,0)},function(t,n){t.setUTCFullYear(t.getUTCFullYear()+n)},function(t,n){return n.getUTCFullYear()-t.getUTCFullYear()},function(t){return t.getUTCFullYear()}));function wn(t){if(0<=t.y&&t.y<100){var n=new Date(-1,t.m,t.d,t.H,t.M,t.S,t.L);return n.setFullYear(t.y),n}return new Date(t.y,t.m,t.d,t.H,t.M,t.S,t.L)}function Mn(t){if(0<=t.y&&t.y<100){var n=new Date(Date.UTC(-1,t.m,t.d,t.H,t.M,t.S,t.L));return n.setUTCFullYear(t.y),n}return new Date(Date.UTC(t.y,t.m,t.d,t.H,t.M,t.S,t.L))}function bn(t){return{y:t,m:0,d:1,H:0,M:0,S:0,L:0}}vn.every=function(t){return isFinite(t=Math.floor(t))&&t>0?en(function(n){n.setUTCFullYear(Math.floor(n.getUTCFullYear()/t)*t),n.setUTCMonth(0,1),n.setUTCHours(0,0,0,0)},function(n,e){n.setUTCFullYear(n.getUTCFullYear()+e*t)}):null};var xn,_n,Tn,Cn={"-":"",_:" ",0:"0"},An=/^\s*\d+/,Nn=/^%/,Un=/[\\^$*+?|[\]().{}]/g;function Dn(t,n,e){var r=t<0?"-":"",i=(r?-t:t)+"",u=i.length;return r+(u<e?new Array(e-u+1).join(n)+i:i)}function Sn(t){return t.replace(Un,"\\$&")}function kn(t){return new RegExp("^(?:"+t.map(Sn).join("|")+")","i")}function Fn(t){for(var n={},e=-1,r=t.length;++e<r;)n[t[e].toLowerCase()]=e;return n}function Ln(t,n,e){var r=An.exec(n.slice(e,e+1));return r?(t.w=+r[0],e+r[0].length):-1}function En(t,n,e){var r=An.exec(n.slice(e,e+1));return r?(t.u=+r[0],e+r[0].length):-1}function Yn(t,n,e){var r=An.exec(n.slice(e,e+2));return r?(t.U=+r[0],e+r[0].length):-1}function Hn(t,n,e){var r=An.exec(n.slice(e,e+2));return r?(t.V=+r[0],e+r[0].length):-1}function In(t,n,e){var r=An.exec(n.slice(e,e+2));return r?(t.W=+r[0],e+r[0].length):-1}function jn(t,n,e){var r=An.exec(n.slice(e,e+4));return r?(t.y=+r[0],e+r[0].length):-1}function qn(t,n,e){var r=An.exec(n.slice(e,e+2));return r?(t.y=+r[0]+(+r[0]>68?1900:2e3),e+r[0].length):-1}function $n(t,n,e){var r=/^(Z)|([+-]\d\d)(?::?(\d\d))?/.exec(n.slice(e,e+6));return r?(t.Z=r[1]?0:-(r[2]+(r[3]||"00")),e+r[0].length):-1}function On(t,n,e){var r=An.exec(n.slice(e,e+2));return r?(t.m=r[0]-1,e+r[0].length):-1}function Pn(t,n,e){var r=An.exec(n.slice(e,e+2));return r?(t.d=+r[0],e+r[0].length):-1}function Rn(t,n,e){var r=An.exec(n.slice(e,e+3));return r?(t.m=0,t.d=+r[0],e+r[0].length):-1}function zn(t,n,e){var r=An.exec(n.slice(e,e+2));return r?(t.H=+r[0],e+r[0].length):-1}function Bn(t,n,e){var r=An.exec(n.slice(e,e+2));return r?(t.M=+r[0],e+r[0].length):-1}function Zn(t,n,e){var r=An.exec(n.slice(e,e+2));return r?(t.S=+r[0],e+r[0].length):-1}function Vn(t,n,e){var r=An.exec(n.slice(e,e+3));return r?(t.L=+r[0],e+r[0].length):-1}function Wn(t,n,e){var r=An.exec(n.slice(e,e+6));return r?(t.L=Math.floor(r[0]/1e3),e+r[0].length):-1}function Qn(t,n,e){var r=Nn.exec(n.slice(e,e+1));return r?e+r[0].length:-1}function Xn(t,n,e){var r=An.exec(n.slice(e));return r?(t.Q=+r[0],e+r[0].length):-1}function Jn(t,n,e){var r=An.exec(n.slice(e));return r?(t.Q=1e3*+r[0],e+r[0].length):-1}function Gn(t,n){return Dn(t.getDate(),n,2)}function Kn(t,n){return Dn(t.getHours(),n,2)}function te(t,n){return Dn(t.getHours()%12||12,n,2)}function ne(t,n){return Dn(1+an.count(hn(t),t),n,3)}function ee(t,n){return Dn(t.getMilliseconds(),n,3)}function re(t,n){return ee(t,n)+"000"}function ie(t,n){return Dn(t.getMonth()+1,n,2)}function ue(t,n){return Dn(t.getMinutes(),n,2)}function oe(t,n){return Dn(t.getSeconds(),n,2)}function ae(t){var n=t.getDay();return 0===n?7:n}function ce(t,n){return Dn(sn.count(hn(t),t),n,2)}function se(t,n){var e=t.getDay();return t=e>=4||0===e?fn(t):fn.ceil(t),Dn(fn.count(hn(t),t)+(4===hn(t).getDay()),n,2)}function le(t){return t.getDay()}function fe(t,n){return Dn(ln.count(hn(t),t),n,2)}function he(t,n){return Dn(t.getFullYear()%100,n,2)}function ge(t,n){return Dn(t.getFullYear()%1e4,n,4)}function pe(t){var n=t.getTimezoneOffset();return(n>0?"-":(n*=-1,"+"))+Dn(n/60|0,"0",2)+Dn(n%60,"0",2)}function de(t,n){return Dn(t.getUTCDate(),n,2)}function me(t,n){return Dn(t.getUTCHours(),n,2)}function ye(t,n){return Dn(t.getUTCHours()%12||12,n,2)}function ve(t,n){return Dn(1+gn.count(vn(t),t),n,3)}function we(t,n){return Dn(t.getUTCMilliseconds(),n,3)}function Me(t,n){return we(t,n)+"000"}function be(t,n){return Dn(t.getUTCMonth()+1,n,2)}function xe(t,n){return Dn(t.getUTCMinutes(),n,2)}function _e(t,n){return Dn(t.getUTCSeconds(),n,2)}function Te(t){var n=t.getUTCDay();return 0===n?7:n}function Ce(t,n){return Dn(dn.count(vn(t),t),n,2)}function Ae(t,n){var e=t.getUTCDay();return t=e>=4||0===e?yn(t):yn.ceil(t),Dn(yn.count(vn(t),t)+(4===vn(t).getUTCDay()),n,2)}function Ne(t){return t.getUTCDay()}function Ue(t,n){return Dn(mn.count(vn(t),t),n,2)}function De(t,n){return Dn(t.getUTCFullYear()%100,n,2)}function Se(t,n){return Dn(t.getUTCFullYear()%1e4,n,4)}function ke(){return"+0000"}function Fe(){return"%"}function Le(t){return+t}function Ee(t){return Math.floor(+t/1e3)}!function(t){xn=function(t){var n=t.dateTime,e=t.date,r=t.time,i=t.periods,u=t.days,o=t.shortDays,a=t.months,c=t.shortMonths,s=kn(i),l=Fn(i),f=kn(u),h=Fn(u),g=kn(o),p=Fn(o),d=kn(a),m=Fn(a),y=kn(c),v=Fn(c),w={a:function(t){return o[t.getDay()]},A:function(t){return u[t.getDay()]},b:function(t){return c[t.getMonth()]},B:function(t){return a[t.getMonth()]},c:null,d:Gn,e:Gn,f:re,H:Kn,I:te,j:ne,L:ee,m:ie,M:ue,p:function(t){return i[+(t.getHours()>=12)]},Q:Le,s:Ee,S:oe,u:ae,U:ce,V:se,w:le,W:fe,x:null,X:null,y:he,Y:ge,Z:pe,"%":Fe},M={a:function(t){return o[t.getUTCDay()]},A:function(t){return u[t.getUTCDay()]},b:function(t){return c[t.getUTCMonth()]},B:function(t){return a[t.getUTCMonth()]},c:null,d:de,e:de,f:Me,H:me,I:ye,j:ve,L:we,m:be,M:xe,p:function(t){return i[+(t.getUTCHours()>=12)]},Q:Le,s:Ee,S:_e,u:Te,U:Ce,V:Ae,w:Ne,W:Ue,x:null,X:null,y:De,Y:Se,Z:ke,"%":Fe},b={a:function(t,n,e){var r=g.exec(n.slice(e));return r?(t.w=p[r[0].toLowerCase()],e+r[0].length):-1},A:function(t,n,e){var r=f.exec(n.slice(e));return r?(t.w=h[r[0].toLowerCase()],e+r[0].length):-1},b:function(t,n,e){var r=y.exec(n.slice(e));return r?(t.m=v[r[0].toLowerCase()],e+r[0].length):-1},B:function(t,n,e){var r=d.exec(n.slice(e));return r?(t.m=m[r[0].toLowerCase()],e+r[0].length):-1},c:function(t,e,r){return T(t,n,e,r)},d:Pn,e:Pn,f:Wn,H:zn,I:zn,j:Rn,L:Vn,m:On,M:Bn,p:function(t,n,e){var r=s.exec(n.slice(e));return r?(t.p=l[r[0].toLowerCase()],e+r[0].length):-1},Q:Xn,s:Jn,S:Zn,u:En,U:Yn,V:Hn,w:Ln,W:In,x:function(t,n,r){return T(t,e,n,r)},X:function(t,n,e){return T(t,r,n,e)},y:qn,Y:jn,Z:$n,"%":Qn};function x(t,n){return function(e){var r,i,u,o=[],a=-1,c=0,s=t.length;for(e instanceof Date||(e=new Date(+e));++a<s;)37===t.charCodeAt(a)&&(o.push(t.slice(c,a)),null!=(i=Cn[r=t.charAt(++a)])?r=t.charAt(++a):i="e"===r?" ":"0",(u=n[r])&&(r=u(e,i)),o.push(r),c=a+1);return o.push(t.slice(c,a)),o.join("")}}function _(t,n){return function(e){var r,i,u=bn(1900);if(T(u,t,e+="",0)!=e.length)return null;if("Q"in u)return new Date(u.Q);if("p"in u&&(u.H=u.H%12+12*u.p),"V"in u){if(u.V<1||u.V>53)return null;"w"in u||(u.w=1),"Z"in u?(r=(i=(r=Mn(bn(u.y))).getUTCDay())>4||0===i?mn.ceil(r):mn(r),r=gn.offset(r,7*(u.V-1)),u.y=r.getUTCFullYear(),u.m=r.getUTCMonth(),u.d=r.getUTCDate()+(u.w+6)%7):(r=(i=(r=n(bn(u.y))).getDay())>4||0===i?ln.ceil(r):ln(r),r=an.offset(r,7*(u.V-1)),u.y=r.getFullYear(),u.m=r.getMonth(),u.d=r.getDate()+(u.w+6)%7)}else("W"in u||"U"in u)&&("w"in u||(u.w="u"in u?u.u%7:"W"in u?1:0),i="Z"in u?Mn(bn(u.y)).getUTCDay():n(bn(u.y)).getDay(),u.m=0,u.d="W"in u?(u.w+6)%7+7*u.W-(i+5)%7:u.w+7*u.U-(i+6)%7);return"Z"in u?(u.H+=u.Z/100|0,u.M+=u.Z%100,Mn(u)):n(u)}}function T(t,n,e,r){for(var i,u,o=0,a=n.length,c=e.length;o<a;){if(r>=c)return-1;if(37===(i=n.charCodeAt(o++))){if(i=n.charAt(o++),!(u=b[i in Cn?n.charAt(o++):i])||(r=u(t,e,r))<0)return-1}else if(i!=e.charCodeAt(r++))return-1}return r}return w.x=x(e,w),w.X=x(r,w),w.c=x(n,w),M.x=x(e,M),M.X=x(r,M),M.c=x(n,M),{format:function(t){var n=x(t+="",w);return n.toString=function(){return t},n},parse:function(t){var n=_(t+="",wn);return n.toString=function(){return t},n},utcFormat:function(t){var n=x(t+="",M);return n.toString=function(){return t},n},utcParse:function(t){var n=_(t,Mn);return n.toString=function(){return t},n}}}(t),_n=xn.utcFormat,Tn=xn.utcParse}({dateTime:"%x, %X",date:"%-m/%-d/%Y",time:"%-I:%M:%S %p",periods:["AM","PM"],days:["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],shortDays:["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],months:["January","February","March","April","May","June","July","August","September","October","November","December"],shortMonths:["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"]});Date.prototype.toISOString||_n("%Y-%m-%dT%H:%M:%S.%LZ");+new Date("2000-01-01T00:00:00.000Z")||Tn("%Y-%m-%dT%H:%M:%S.%LZ");class Ye{constructor(t,n,e=1e6){this.data=t,this.center=n,this.window=e,this.scale=void 0,this.tooltip=void 0}render(t,n=1500,e=200,r=!1,i=!0,u="#0086af"){let o=[0,n],a=[this.center-this.window,this.center+this.window];this.scale=Kt().rangeRound(o).domain(a);let c=t.append("g");c.append("rect").attr("x",0).attr("y",e/2).attr("width",n).attr("height",10).style("fill",u);const s=(t,n)=>{if(0==i)return 0;let e=5;if(n>0){let r=this.data[n-1];if(r.strand!=t.strand)return e;this.scale(t.start-r.start)+1<=10&&(e=n%2?e+60:e+30)}return e};c.selectAll(".minibrowser-feature").data(this.data).enter().append("rect").attr("class","minibrowser-feature").attr("x",t=>this.scale(t.start)).attr("y",(t,n)=>{let i=e/2,u=r?Math.abs(this.scale(t.start)-this.scale(t.end)+1):0;return"+"==t.strand?i-u-s(t,n):i}).attr("width",1).attr("height",(t,n)=>{return 10+s(t,n)+(r?Math.abs(this.scale(t.start)-this.scale(t.end)+1):0)}).style("fill","#eeeeee");if(0==i)return;c.selectAll(".minibrowser-feature-label").data(this.data).enter().append("text").attr("class",(t,n)=>".minibrowser-feature-label").attr("x",0).attr("y",0).style("font-size",t=>t.start==this.center?"12px":"9px").style("fill",t=>t.start==this.center?"red":"black").attr("transform",(t,n)=>{let i="+"==t.strad?this.scale(t.start):this.scale(t.start)-5,u=e/2,o="+"==t.strand?s(t,n):s(t,n)+5,a=r?Math.abs(this.scale(t.start)-this.scale(t.end)+1):0;return`translate(${i}, ${u="+"==t.strand?u-a-o:u+10+a+o}) rotate(${"+"==t.strand?-45:45})`}).text(t=>t.featureLabel)}}var He="http://www.w3.org/1999/xhtml",Ie={svg:"http://www.w3.org/2000/svg",xhtml:He,xlink:"http://www.w3.org/1999/xlink",xml:"http://www.w3.org/XML/1998/namespace",xmlns:"http://www.w3.org/2000/xmlns/"},je=function(t){var n=t+="",e=n.indexOf(":");return e>=0&&"xmlns"!==(n=t.slice(0,e))&&(t=t.slice(e+1)),Ie.hasOwnProperty(n)?{space:Ie[n],local:t}:t};var qe=function(t){var n=je(t);return(n.local?function(t){return function(){return this.ownerDocument.createElementNS(t.space,t.local)}}:function(t){return function(){var n=this.ownerDocument,e=this.namespaceURI;return e===He&&n.documentElement.namespaceURI===He?n.createElement(t):n.createElementNS(e,t)}})(n)};function $e(){}var Oe=function(t){return null==t?$e:function(){return this.querySelector(t)}};function Pe(){return[]}var Re=function(t){return function(){return this.matches(t)}};if("undefined"!=typeof document){var ze=document.documentElement;if(!ze.matches){var Be=ze.webkitMatchesSelector||ze.msMatchesSelector||ze.mozMatchesSelector||ze.oMatchesSelector;Re=function(t){return function(){return Be.call(this,t)}}}}var Ze=Re,Ve=function(t){return new Array(t.length)};function We(t,n){this.ownerDocument=t.ownerDocument,this.namespaceURI=t.namespaceURI,this._next=null,this._parent=t,this.__data__=n}We.prototype={constructor:We,appendChild:function(t){return this._parent.insertBefore(t,this._next)},insertBefore:function(t,n){return this._parent.insertBefore(t,n)},querySelector:function(t){return this._parent.querySelector(t)},querySelectorAll:function(t){return this._parent.querySelectorAll(t)}};var Qe="$";function Xe(t,n,e,r,i,u){for(var o,a=0,c=n.length,s=u.length;a<s;++a)(o=n[a])?(o.__data__=u[a],r[a]=o):e[a]=new We(t,u[a]);for(;a<c;++a)(o=n[a])&&(i[a]=o)}function Je(t,n,e,r,i,u,o){var a,c,s,l={},f=n.length,h=u.length,g=new Array(f);for(a=0;a<f;++a)(c=n[a])&&(g[a]=s=Qe+o.call(c,c.__data__,a,n),s in l?i[a]=c:l[s]=c);for(a=0;a<h;++a)(c=l[s=Qe+o.call(t,u[a],a,u)])?(r[a]=c,c.__data__=u[a],l[s]=null):e[a]=new We(t,u[a]);for(a=0;a<f;++a)(c=n[a])&&l[g[a]]===c&&(i[a]=c)}function Ge(t,n){return t<n?-1:t>n?1:t>=n?0:NaN}var Ke=function(t){return t.ownerDocument&&t.ownerDocument.defaultView||t.document&&t||t.defaultView};function tr(t){return t.trim().split(/^|\s+/)}function nr(t){return t.classList||new er(t)}function er(t){this._node=t,this._names=tr(t.getAttribute("class")||"")}function rr(t,n){for(var e=nr(t),r=-1,i=n.length;++r<i;)e.add(n[r])}function ir(t,n){for(var e=nr(t),r=-1,i=n.length;++r<i;)e.remove(n[r])}er.prototype={add:function(t){this._names.indexOf(t)<0&&(this._names.push(t),this._node.setAttribute("class",this._names.join(" ")))},remove:function(t){var n=this._names.indexOf(t);n>=0&&(this._names.splice(n,1),this._node.setAttribute("class",this._names.join(" ")))},contains:function(t){return this._names.indexOf(t)>=0}};function ur(){this.textContent=""}function or(){this.innerHTML=""}function ar(){this.nextSibling&&this.parentNode.appendChild(this)}function cr(){this.previousSibling&&this.parentNode.insertBefore(this,this.parentNode.firstChild)}function sr(){return null}function lr(){var t=this.parentNode;t&&t.removeChild(this)}function fr(){return this.parentNode.insertBefore(this.cloneNode(!1),this.nextSibling)}function hr(){return this.parentNode.insertBefore(this.cloneNode(!0),this.nextSibling)}var gr={};"undefined"!=typeof document&&("onmouseenter"in document.documentElement||(gr={mouseenter:"mouseover",mouseleave:"mouseout"}));function pr(t,n,e){return t=dr(t,n,e),function(n){var e=n.relatedTarget;e&&(e===this||8&e.compareDocumentPosition(this))||t.call(this,n)}}function dr(t,n,e){return function(r){try{t.call(this,this.__data__,n,e)}finally{}}}function mr(t){return function(){var n=this.__on;if(n){for(var e,r=0,i=-1,u=n.length;r<u;++r)e=n[r],t.type&&e.type!==t.type||e.name!==t.name?n[++i]=e:this.removeEventListener(e.type,e.listener,e.capture);++i?n.length=i:delete this.__on}}}function yr(t,n,e){var r=gr.hasOwnProperty(t.type)?pr:dr;return function(i,u,o){var a,c=this.__on,s=r(n,u,o);if(c)for(var l=0,f=c.length;l<f;++l)if((a=c[l]).type===t.type&&a.name===t.name)return this.removeEventListener(a.type,a.listener,a.capture),this.addEventListener(a.type,a.listener=s,a.capture=e),void(a.value=n);this.addEventListener(t.type,s,e),a={type:t.type,name:t.name,value:n,listener:s,capture:e},c?c.push(a):this.__on=[a]}}function vr(t,n,e){var r=Ke(t),i=r.CustomEvent;"function"==typeof i?i=new i(n,e):(i=r.document.createEvent("Event"),e?(i.initEvent(n,e.bubbles,e.cancelable),i.detail=e.detail):i.initEvent(n,!1,!1)),t.dispatchEvent(i)}var wr=[null];function Mr(t,n){this._groups=t,this._parents=n}Mr.prototype=function(){return new Mr([[document.documentElement]],wr)}.prototype={constructor:Mr,select:function(t){"function"!=typeof t&&(t=Oe(t));for(var n=this._groups,e=n.length,r=new Array(e),i=0;i<e;++i)for(var u,o,a=n[i],c=a.length,s=r[i]=new Array(c),l=0;l<c;++l)(u=a[l])&&(o=t.call(u,u.__data__,l,a))&&("__data__"in u&&(o.__data__=u.__data__),s[l]=o);return new Mr(r,this._parents)},selectAll:function(t){var n;"function"!=typeof t&&(t=null==(n=t)?Pe:function(){return this.querySelectorAll(n)});for(var e=this._groups,r=e.length,i=[],u=[],o=0;o<r;++o)for(var a,c=e[o],s=c.length,l=0;l<s;++l)(a=c[l])&&(i.push(t.call(a,a.__data__,l,c)),u.push(a));return new Mr(i,u)},filter:function(t){"function"!=typeof t&&(t=Ze(t));for(var n=this._groups,e=n.length,r=new Array(e),i=0;i<e;++i)for(var u,o=n[i],a=o.length,c=r[i]=[],s=0;s<a;++s)(u=o[s])&&t.call(u,u.__data__,s,o)&&c.push(u);return new Mr(r,this._parents)},data:function(t,n){if(!t)return p=new Array(this.size()),l=-1,this.each(function(t){p[++l]=t}),p;var e,r=n?Je:Xe,i=this._parents,u=this._groups;"function"!=typeof t&&(e=t,t=function(){return e});for(var o=u.length,a=new Array(o),c=new Array(o),s=new Array(o),l=0;l<o;++l){var f=i[l],h=u[l],g=h.length,p=t.call(f,f&&f.__data__,l,i),d=p.length,m=c[l]=new Array(d),y=a[l]=new Array(d);r(f,h,m,y,s[l]=new Array(g),p,n);for(var v,w,M=0,b=0;M<d;++M)if(v=m[M]){for(M>=b&&(b=M+1);!(w=y[b])&&++b<d;);v._next=w||null}}return(a=new Mr(a,i))._enter=c,a._exit=s,a},enter:function(){return new Mr(this._enter||this._groups.map(Ve),this._parents)},exit:function(){return new Mr(this._exit||this._groups.map(Ve),this._parents)},merge:function(t){for(var n=this._groups,e=t._groups,r=n.length,i=e.length,u=Math.min(r,i),o=new Array(r),a=0;a<u;++a)for(var c,s=n[a],l=e[a],f=s.length,h=o[a]=new Array(f),g=0;g<f;++g)(c=s[g]||l[g])&&(h[g]=c);for(;a<r;++a)o[a]=n[a];return new Mr(o,this._parents)},order:function(){for(var t=this._groups,n=-1,e=t.length;++n<e;)for(var r,i=t[n],u=i.length-1,o=i[u];--u>=0;)(r=i[u])&&(o&&o!==r.nextSibling&&o.parentNode.insertBefore(r,o),o=r);return this},sort:function(t){function n(n,e){return n&&e?t(n.__data__,e.__data__):!n-!e}t||(t=Ge);for(var e=this._groups,r=e.length,i=new Array(r),u=0;u<r;++u){for(var o,a=e[u],c=a.length,s=i[u]=new Array(c),l=0;l<c;++l)(o=a[l])&&(s[l]=o);s.sort(n)}return new Mr(i,this._parents).order()},call:function(){var t=arguments[0];return arguments[0]=this,t.apply(null,arguments),this},nodes:function(){var t=new Array(this.size()),n=-1;return this.each(function(){t[++n]=this}),t},node:function(){for(var t=this._groups,n=0,e=t.length;n<e;++n)for(var r=t[n],i=0,u=r.length;i<u;++i){var o=r[i];if(o)return o}return null},size:function(){var t=0;return this.each(function(){++t}),t},empty:function(){return!this.node()},each:function(t){for(var n=this._groups,e=0,r=n.length;e<r;++e)for(var i,u=n[e],o=0,a=u.length;o<a;++o)(i=u[o])&&t.call(i,i.__data__,o,u);return this},attr:function(t,n){var e=je(t);if(arguments.length<2){var r=this.node();return e.local?r.getAttributeNS(e.space,e.local):r.getAttribute(e)}return this.each((null==n?e.local?function(t){return function(){this.removeAttributeNS(t.space,t.local)}}:function(t){return function(){this.removeAttribute(t)}}:"function"==typeof n?e.local?function(t,n){return function(){var e=n.apply(this,arguments);null==e?this.removeAttributeNS(t.space,t.local):this.setAttributeNS(t.space,t.local,e)}}:function(t,n){return function(){var e=n.apply(this,arguments);null==e?this.removeAttribute(t):this.setAttribute(t,e)}}:e.local?function(t,n){return function(){this.setAttributeNS(t.space,t.local,n)}}:function(t,n){return function(){this.setAttribute(t,n)}})(e,n))},style:function(t,n,e){return arguments.length>1?this.each((null==n?function(t){return function(){this.style.removeProperty(t)}}:"function"==typeof n?function(t,n,e){return function(){var r=n.apply(this,arguments);null==r?this.style.removeProperty(t):this.style.setProperty(t,r,e)}}:function(t,n,e){return function(){this.style.setProperty(t,n,e)}})(t,n,null==e?"":e)):function(t,n){return t.style.getPropertyValue(n)||Ke(t).getComputedStyle(t,null).getPropertyValue(n)}(this.node(),t)},property:function(t,n){return arguments.length>1?this.each((null==n?function(t){return function(){delete this[t]}}:"function"==typeof n?function(t,n){return function(){var e=n.apply(this,arguments);null==e?delete this[t]:this[t]=e}}:function(t,n){return function(){this[t]=n}})(t,n)):this.node()[t]},classed:function(t,n){var e=tr(t+"");if(arguments.length<2){for(var r=nr(this.node()),i=-1,u=e.length;++i<u;)if(!r.contains(e[i]))return!1;return!0}return this.each(("function"==typeof n?function(t,n){return function(){(n.apply(this,arguments)?rr:ir)(this,t)}}:n?function(t){return function(){rr(this,t)}}:function(t){return function(){ir(this,t)}})(e,n))},text:function(t){return arguments.length?this.each(null==t?ur:("function"==typeof t?function(t){return function(){var n=t.apply(this,arguments);this.textContent=null==n?"":n}}:function(t){return function(){this.textContent=t}})(t)):this.node().textContent},html:function(t){return arguments.length?this.each(null==t?or:("function"==typeof t?function(t){return function(){var n=t.apply(this,arguments);this.innerHTML=null==n?"":n}}:function(t){return function(){this.innerHTML=t}})(t)):this.node().innerHTML},raise:function(){return this.each(ar)},lower:function(){return this.each(cr)},append:function(t){var n="function"==typeof t?t:qe(t);return this.select(function(){return this.appendChild(n.apply(this,arguments))})},insert:function(t,n){var e="function"==typeof t?t:qe(t),r=null==n?sr:"function"==typeof n?n:Oe(n);return this.select(function(){return this.insertBefore(e.apply(this,arguments),r.apply(this,arguments)||null)})},remove:function(){return this.each(lr)},clone:function(t){return this.select(t?hr:fr)},datum:function(t){return arguments.length?this.property("__data__",t):this.node().__data__},on:function(t,n,e){var r,i,u=function(t){return t.trim().split(/^|\s+/).map(function(t){var n="",e=t.indexOf(".");return e>=0&&(n=t.slice(e+1),t=t.slice(0,e)),{type:t,name:n}})}(t+""),o=u.length;if(!(arguments.length<2)){for(a=n?yr:mr,null==e&&(e=!1),r=0;r<o;++r)this.each(a(u[r],n,e));return this}var a=this.node().__on;if(a)for(var c,s=0,l=a.length;s<l;++s)for(r=0,c=a[s];r<o;++r)if((i=u[r]).type===c.type&&i.name===c.name)return c.value},dispatch:function(t,n){return this.each(("function"==typeof n?function(t,n){return function(){return vr(this,t,n.apply(this,arguments))}}:function(t,n){return function(){return vr(this,t,n)}})(t,n))}};var br=function(t){return"string"==typeof t?new Mr([[document.querySelector(t)]],[document.documentElement]):new Mr([[t]],wr)};function xr(t){if(0==$(`#${t}`).length){let n=`Input Error: DOM ID ${t} is not found.`;throw console.warn(n),n}}const _r={id:"demo",data:void 0,width:1800,height:300,marginLeft:10,marginRight:10,marginTop:20,marginBottom:0,showLabels:!0,trackColor:"#848484",url:"../tempData/ACTN3.neighbor.genes.csv",center:66546395,dataParser:t=>(t.start=parseInt(t.start),t.end=parseInt(t.end),t.featureLabel=t.geneSymbol,t.featureType=t.geneType,t),dataFilter:t=>"protein coding"==t.featureType||"lincRNA"==t.featureType},Tr={id:"eQTL-browser",data:void 0,width:1800,height:20,marginLeft:10,marginRight:10,marginTop:0,marginBottom:0,url:"/tempData/ACTN3.eqtls.csv",center:66546395,showLabels:!1,trackColor:"#58c9d7",dataParser:t=>(t.chr=t.chromosome,t.start=parseInt(t.pos),t.end=t.start,t.featureType="variant",t.featureLabel=t.snpId||t.variantId,t.strand="+",t),dataFilter:t=>t},Cr={id:"sQTL-browser",data:void 0,width:1800,height:20,marginLeft:10,marginRight:10,marginTop:0,marginBottom:0,url:"/tempData/ACTN3.sqtls.csv",center:66546395,showLabels:!1,trackColor:"#00aed7",dataParser:t=>(t.chr=t.chromosome,t.start=parseInt(t.pos),t.end=t.start,t.featureType="variant",t.featureLabel=t.snpId||t.variantId,t.strand="+",t),dataFilter:t=>t};return t.demoConfig=_r,t.eqtlConfig=Tr,t.sqtlConfig=Cr,t.render=function(t,n=_r){xr(n.id);let e=n.width-(n.marginLeft+n.marginRight),r=n.height-(n.marginTop+n.marginBottom),i={top:n.marginTop,right:n.marginRight,bottom:n.marginBottom,left:n.marginLeft},u=function(t,n,e,r,i,u="relative"){return xr(t),void 0===i&&(i=`${t}-svg`),br("#"+t).append("svg").attr("width",n).attr("height",e).attr("id",i).append("g").attr("transform",`translate(${r.left}, ${r.top})`)}(n.id,n.width,n.height,i);g(n.url).then(t=>{n.data=t.map(n.dataParser).filter(n.dataFilter),n.data.sort((t,n)=>parseInt(t.start)-parseInt(n.start)),console.log(n.data),new Ye(n.data,n.center).render(u,e,r,!1,n.showLabels,n.trackColor)}).catch(t=>{console.error(t)})},t}({});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
