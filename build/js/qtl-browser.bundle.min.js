var QTLBrowser=function(e){"use strict";var t={},n={},r=34,a=10,i=13;function f(e){return new Function("d","return {"+e.map(function(e,t){return JSON.stringify(e)+": d["+t+"]"}).join(",")+"}")}var c=function(e){var c=new RegExp('["'+e+"\n\r]"),o=e.charCodeAt(0);function u(e,f){var c,u=[],l=e.length,s=0,d=0,h=l<=0,b=!1;function p(){if(h)return n;if(b)return b=!1,t;var f,c,u=s;if(e.charCodeAt(u)===r){for(;s++<l&&e.charCodeAt(s)!==r||e.charCodeAt(++s)===r;);return(f=s)>=l?h=!0:(c=e.charCodeAt(s++))===a?b=!0:c===i&&(b=!0,e.charCodeAt(s)===a&&++s),e.slice(u+1,f-1).replace(/""/g,'"')}for(;s<l;){if((c=e.charCodeAt(f=s++))===a)b=!0;else if(c===i)b=!0,e.charCodeAt(s)===a&&++s;else if(c!==o)continue;return e.slice(u,f)}return h=!0,e.slice(u,l)}for(e.charCodeAt(l-1)===a&&--l,e.charCodeAt(l-1)===i&&--l;(c=p())!==n;){for(var g=[];c!==t&&c!==n;)g.push(c),c=p();f&&null==(g=f(g,d++))||u.push(g)}return u}function l(t){return t.map(s).join(e)}function s(e){return null==e?"":c.test(e+="")?'"'+e.replace(/"/g,'""')+'"':e}return{parse:function(e,t){var n,r,a=u(e,function(e,a){if(n)return n(e,a-1);r=e,n=t?function(e,t){var n=f(e);return function(r,a){return t(n(r),a,e)}}(e,t):f(e)});return a.columns=r||[],a},parseRows:u,format:function(t,n){return null==n&&(n=function(e){var t=Object.create(null),n=[];return e.forEach(function(e){for(var r in e)r in t||n.push(t[r]=r)}),n}(t)),[n.map(s).join(e)].concat(t.map(function(t){return n.map(function(e){return s(t[e])}).join(e)})).join("\n")},formatRows:function(e){return e.map(l).join("\n")}}},o=c(",").parse,u=c("\t").parse;function l(e){if(!e.ok)throw new Error(e.status+" "+e.statusText);return e.text()}var s=function(e,t){return fetch(e,t).then(l)};function d(e){return function(t,n,r){return 2===arguments.length&&"function"==typeof n&&(r=n,n=void 0),s(t,n).then(function(t){return e(t,r)})}}d(o);var h=d(u),b=function(e,t){return e<t?-1:e>t?1:e>=t?0:NaN};var p,g,m=(1===(p=b).length&&(g=p,p=function(e,t){return b(g(e),t)}),{left:function(e,t,n,r){for(null==n&&(n=0),null==r&&(r=e.length);n<r;){var a=n+r>>>1;p(e[a],t)<0?n=a+1:r=a}return n},right:function(e,t,n,r){for(null==n&&(n=0),null==r&&(r=e.length);n<r;){var a=n+r>>>1;p(e[a],t)>0?r=a:n=a+1}return n}}).right,y=function(e,t,n){e=+e,t=+t,n=(a=arguments.length)<2?(t=e,e=0,1):a<3?1:+n;for(var r=-1,a=0|Math.max(0,Math.ceil((t-e)/n)),i=new Array(a);++r<a;)i[r]=e+r*n;return i},v=Math.sqrt(50),w=Math.sqrt(10),x=Math.sqrt(2),_=function(e,t,n){var r,a,i,f,c=-1;if(n=+n,(e=+e)===(t=+t)&&n>0)return[e];if((r=t<e)&&(a=e,e=t,t=a),0===(f=M(e,t,n))||!isFinite(f))return[];if(f>0)for(e=Math.ceil(e/f),t=Math.floor(t/f),i=new Array(a=Math.ceil(t-e+1));++c<a;)i[c]=(e+c)*f;else for(e=Math.floor(e*f),t=Math.ceil(t*f),i=new Array(a=Math.ceil(e-t+1));++c<a;)i[c]=(e-c)/f;return r&&i.reverse(),i};function M(e,t,n){var r=(t-e)/Math.max(0,n),a=Math.floor(Math.log(r)/Math.LN10),i=r/Math.pow(10,a);return a>=0?(i>=v?10:i>=w?5:i>=x?2:1)*Math.pow(10,a):-Math.pow(10,-a)/(i>=v?10:i>=w?5:i>=x?2:1)}var S=function(e,t){var n,r,a=e.length,i=-1;if(null==t){for(;++i<a;)if(null!=(n=e[i])&&n>=n)for(r=n;++i<a;)null!=(n=e[i])&&n>r&&(r=n)}else for(;++i<a;)if(null!=(n=t(e[i],i,e))&&n>=n)for(r=n;++i<a;)null!=(n=t(e[i],i,e))&&n>r&&(r=n);return r},A=function(e,t){var n,r,a=e.length,i=-1;if(null==t){for(;++i<a;)if(null!=(n=e[i])&&n>=n)for(r=n;++i<a;)null!=(n=e[i])&&r>n&&(r=n)}else for(;++i<a;)if(null!=(n=t(e[i],i,e))&&n>=n)for(r=n;++i<a;)null!=(n=t(e[i],i,e))&&r>n&&(r=n);return r};function T(){}function C(e,t){var n=new T;if(e instanceof T)e.each(function(e,t){n.set(t,e)});else if(Array.isArray(e)){var r,a=-1,i=e.length;if(null==t)for(;++a<i;)n.set(a,e[a]);else for(;++a<i;)n.set(t(r=e[a],a,e),r)}else if(e)for(var f in e)n.set(f,e[f]);return n}T.prototype=C.prototype={constructor:T,has:function(e){return"$"+e in this},get:function(e){return this["$"+e]},set:function(e,t){return this["$"+e]=t,this},remove:function(e){var t="$"+e;return t in this&&delete this[t]},clear:function(){for(var e in this)"$"===e[0]&&delete this[e]},keys:function(){var e=[];for(var t in this)"$"===t[0]&&e.push(t.slice(1));return e},values:function(){var e=[];for(var t in this)"$"===t[0]&&e.push(this[t]);return e},entries:function(){var e=[];for(var t in this)"$"===t[0]&&e.push({key:t.slice(1),value:this[t]});return e},size:function(){var e=0;for(var t in this)"$"===t[0]&&++e;return e},empty:function(){for(var e in this)if("$"===e[0])return!1;return!0},each:function(e){for(var t in this)"$"===t[0]&&e(this[t],t.slice(1),this)}};var N=function(){var e,t,n,r=[],a=[];function i(n,a,f,c){if(a>=r.length)return null!=e&&n.sort(e),null!=t?t(n):n;for(var o,u,l,s=-1,d=n.length,h=r[a++],b=C(),p=f();++s<d;)(l=b.get(o=h(u=n[s])+""))?l.push(u):b.set(o,[u]);return b.each(function(e,t){c(p,t,i(e,a,f,c))}),p}return n={object:function(e){return i(e,0,k,E)},map:function(e){return i(e,0,D,L)},entries:function(e){return function e(n,i){if(++i>r.length)return n;var f,c=a[i-1];return null!=t&&i>=r.length?f=n.entries():(f=[],n.each(function(t,n){f.push({key:n,values:e(t,i)})})),null!=c?f.sort(function(e,t){return c(e.key,t.key)}):f}(i(e,0,D,L),0)},key:function(e){return r.push(e),n},sortKeys:function(e){return a[r.length-1]=e,n},sortValues:function(t){return e=t,n},rollup:function(e){return t=e,n}}};function k(){return{}}function E(e,t,n){e[t]=n}function D(){return C()}function L(e,t,n){e.set(t,n)}var P=Array.prototype,U=P.map,Y=P.slice,F={name:"implicit"};function B(){var e,t,n=function e(t){var n=C(),r=[],a=F;function i(e){var i=e+"",f=n.get(i);if(!f){if(a!==F)return a;n.set(i,f=r.push(e))}return t[(f-1)%t.length]}return t=null==t?[]:Y.call(t),i.domain=function(e){if(!arguments.length)return r.slice();r=[],n=C();for(var t,a,f=-1,c=e.length;++f<c;)n.has(a=(t=e[f])+"")||n.set(a,r.push(t));return i},i.range=function(e){return arguments.length?(t=Y.call(e),i):t.slice()},i.unknown=function(e){return arguments.length?(a=e,i):a},i.copy=function(){return e().domain(r).range(t).unknown(a)},i}().unknown(void 0),r=n.domain,a=n.range,i=[0,1],f=!1,c=0,o=0,u=.5;function l(){var n=r().length,l=i[1]<i[0],s=i[l-0],d=i[1-l];e=(d-s)/Math.max(1,n-c+2*o),f&&(e=Math.floor(e)),s+=(d-s-e*(n-c))*u,t=e*(1-c),f&&(s=Math.round(s),t=Math.round(t));var h=y(n).map(function(t){return s+e*t});return a(l?h.reverse():h)}return delete n.unknown,n.domain=function(e){return arguments.length?(r(e),l()):r()},n.range=function(e){return arguments.length?(i=[+e[0],+e[1]],l()):i.slice()},n.rangeRound=function(e){return i=[+e[0],+e[1]],f=!0,l()},n.bandwidth=function(){return t},n.step=function(){return e},n.round=function(e){return arguments.length?(f=!!e,l()):f},n.padding=function(e){return arguments.length?(c=o=Math.max(0,Math.min(1,e)),l()):c},n.paddingInner=function(e){return arguments.length?(c=Math.max(0,Math.min(1,e)),l()):c},n.paddingOuter=function(e){return arguments.length?(o=Math.max(0,Math.min(1,e)),l()):o},n.align=function(e){return arguments.length?(u=Math.max(0,Math.min(1,e)),l()):u},n.copy=function(){return B().domain(r()).range(i).round(f).paddingInner(c).paddingOuter(o).align(u)},l()}var I=function(e,t,n){e.prototype=t.prototype=n,n.constructor=e};function j(e,t){var n=Object.create(e.prototype);for(var r in t)n[r]=t[r];return n}function O(){}var G="\\s*([+-]?\\d+)\\s*",R="\\s*([+-]?\\d*\\.?\\d+(?:[eE][+-]?\\d+)?)\\s*",z="\\s*([+-]?\\d*\\.?\\d+(?:[eE][+-]?\\d+)?)%\\s*",V=/^#([0-9a-f]{3})$/,X=/^#([0-9a-f]{6})$/,H=new RegExp("^rgb\\("+[G,G,G]+"\\)$"),q=new RegExp("^rgb\\("+[z,z,z]+"\\)$"),Q=new RegExp("^rgba\\("+[G,G,G,R]+"\\)$"),Z=new RegExp("^rgba\\("+[z,z,z,R]+"\\)$"),W=new RegExp("^hsl\\("+[R,z,z]+"\\)$"),K=new RegExp("^hsla\\("+[R,z,z,R]+"\\)$"),J={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074};function ee(e){var t;return e=(e+"").trim().toLowerCase(),(t=V.exec(e))?new ie((t=parseInt(t[1],16))>>8&15|t>>4&240,t>>4&15|240&t,(15&t)<<4|15&t,1):(t=X.exec(e))?te(parseInt(t[1],16)):(t=H.exec(e))?new ie(t[1],t[2],t[3],1):(t=q.exec(e))?new ie(255*t[1]/100,255*t[2]/100,255*t[3]/100,1):(t=Q.exec(e))?ne(t[1],t[2],t[3],t[4]):(t=Z.exec(e))?ne(255*t[1]/100,255*t[2]/100,255*t[3]/100,t[4]):(t=W.exec(e))?ce(t[1],t[2]/100,t[3]/100,1):(t=K.exec(e))?ce(t[1],t[2]/100,t[3]/100,t[4]):J.hasOwnProperty(e)?te(J[e]):"transparent"===e?new ie(NaN,NaN,NaN,0):null}function te(e){return new ie(e>>16&255,e>>8&255,255&e,1)}function ne(e,t,n,r){return r<=0&&(e=t=n=NaN),new ie(e,t,n,r)}function re(e){return e instanceof O||(e=ee(e)),e?new ie((e=e.rgb()).r,e.g,e.b,e.opacity):new ie}function ae(e,t,n,r){return 1===arguments.length?re(e):new ie(e,t,n,null==r?1:r)}function ie(e,t,n,r){this.r=+e,this.g=+t,this.b=+n,this.opacity=+r}function fe(e){return((e=Math.max(0,Math.min(255,Math.round(e)||0)))<16?"0":"")+e.toString(16)}function ce(e,t,n,r){return r<=0?e=t=n=NaN:n<=0||n>=1?e=t=NaN:t<=0&&(e=NaN),new oe(e,t,n,r)}function oe(e,t,n,r){this.h=+e,this.s=+t,this.l=+n,this.opacity=+r}function ue(e,t,n){return 255*(e<60?t+(n-t)*e/60:e<180?n:e<240?t+(n-t)*(240-e)/60:t)}I(O,ee,{displayable:function(){return this.rgb().displayable()},hex:function(){return this.rgb().hex()},toString:function(){return this.rgb()+""}}),I(ie,ae,j(O,{brighter:function(e){return e=null==e?1/.7:Math.pow(1/.7,e),new ie(this.r*e,this.g*e,this.b*e,this.opacity)},darker:function(e){return e=null==e?.7:Math.pow(.7,e),new ie(this.r*e,this.g*e,this.b*e,this.opacity)},rgb:function(){return this},displayable:function(){return 0<=this.r&&this.r<=255&&0<=this.g&&this.g<=255&&0<=this.b&&this.b<=255&&0<=this.opacity&&this.opacity<=1},hex:function(){return"#"+fe(this.r)+fe(this.g)+fe(this.b)},toString:function(){var e=this.opacity;return(1===(e=isNaN(e)?1:Math.max(0,Math.min(1,e)))?"rgb(":"rgba(")+Math.max(0,Math.min(255,Math.round(this.r)||0))+", "+Math.max(0,Math.min(255,Math.round(this.g)||0))+", "+Math.max(0,Math.min(255,Math.round(this.b)||0))+(1===e?")":", "+e+")")}})),I(oe,function(e,t,n,r){return 1===arguments.length?function(e){if(e instanceof oe)return new oe(e.h,e.s,e.l,e.opacity);if(e instanceof O||(e=ee(e)),!e)return new oe;if(e instanceof oe)return e;var t=(e=e.rgb()).r/255,n=e.g/255,r=e.b/255,a=Math.min(t,n,r),i=Math.max(t,n,r),f=NaN,c=i-a,o=(i+a)/2;return c?(f=t===i?(n-r)/c+6*(n<r):n===i?(r-t)/c+2:(t-n)/c+4,c/=o<.5?i+a:2-i-a,f*=60):c=o>0&&o<1?0:f,new oe(f,c,o,e.opacity)}(e):new oe(e,t,n,null==r?1:r)},j(O,{brighter:function(e){return e=null==e?1/.7:Math.pow(1/.7,e),new oe(this.h,this.s,this.l*e,this.opacity)},darker:function(e){return e=null==e?.7:Math.pow(.7,e),new oe(this.h,this.s,this.l*e,this.opacity)},rgb:function(){var e=this.h%360+360*(this.h<0),t=isNaN(e)||isNaN(this.s)?0:this.s,n=this.l,r=n+(n<.5?n:1-n)*t,a=2*n-r;return new ie(ue(e>=240?e-240:e+120,a,r),ue(e,a,r),ue(e<120?e+240:e-120,a,r),this.opacity)},displayable:function(){return(0<=this.s&&this.s<=1||isNaN(this.s))&&0<=this.l&&this.l<=1&&0<=this.opacity&&this.opacity<=1}}));var le=Math.PI/180,se=180/Math.PI,de=.96422,he=1,be=.82521,pe=4/29,ge=6/29,me=3*ge*ge,ye=ge*ge*ge;function ve(e){if(e instanceof we)return new we(e.l,e.a,e.b,e.opacity);if(e instanceof Ae){if(isNaN(e.h))return new we(e.l,0,0,e.opacity);var t=e.h*le;return new we(e.l,Math.cos(t)*e.c,Math.sin(t)*e.c,e.opacity)}e instanceof ie||(e=re(e));var n,r,a=Se(e.r),i=Se(e.g),f=Se(e.b),c=xe((.2225045*a+.7168786*i+.0606169*f)/he);return a===i&&i===f?n=r=c:(n=xe((.4360747*a+.3850649*i+.1430804*f)/de),r=xe((.0139322*a+.0971045*i+.7141733*f)/be)),new we(116*c-16,500*(n-c),200*(c-r),e.opacity)}function we(e,t,n,r){this.l=+e,this.a=+t,this.b=+n,this.opacity=+r}function xe(e){return e>ye?Math.pow(e,1/3):e/me+pe}function _e(e){return e>ge?e*e*e:me*(e-pe)}function Me(e){return 255*(e<=.0031308?12.92*e:1.055*Math.pow(e,1/2.4)-.055)}function Se(e){return(e/=255)<=.04045?e/12.92:Math.pow((e+.055)/1.055,2.4)}function Ae(e,t,n,r){this.h=+e,this.c=+t,this.l=+n,this.opacity=+r}I(we,function(e,t,n,r){return 1===arguments.length?ve(e):new we(e,t,n,null==r?1:r)},j(O,{brighter:function(e){return new we(this.l+18*(null==e?1:e),this.a,this.b,this.opacity)},darker:function(e){return new we(this.l-18*(null==e?1:e),this.a,this.b,this.opacity)},rgb:function(){var e=(this.l+16)/116,t=isNaN(this.a)?e:e+this.a/500,n=isNaN(this.b)?e:e-this.b/200;return new ie(Me(3.1338561*(t=de*_e(t))-1.6168667*(e=he*_e(e))-.4906146*(n=be*_e(n))),Me(-.9787684*t+1.9161415*e+.033454*n),Me(.0719453*t-.2289914*e+1.4052427*n),this.opacity)}})),I(Ae,function(e,t,n,r){return 1===arguments.length?function(e){if(e instanceof Ae)return new Ae(e.h,e.c,e.l,e.opacity);if(e instanceof we||(e=ve(e)),0===e.a&&0===e.b)return new Ae(NaN,0,e.l,e.opacity);var t=Math.atan2(e.b,e.a)*se;return new Ae(t<0?t+360:t,Math.sqrt(e.a*e.a+e.b*e.b),e.l,e.opacity)}(e):new Ae(e,t,n,null==r?1:r)},j(O,{brighter:function(e){return new Ae(this.h,this.c,this.l+18*(null==e?1:e),this.opacity)},darker:function(e){return new Ae(this.h,this.c,this.l-18*(null==e?1:e),this.opacity)},rgb:function(){return ve(this).rgb()}}));var Te=-.14861,Ce=1.78277,Ne=-.29227,ke=-.90649,Ee=1.97294,De=Ee*ke,Le=Ee*Ce,Pe=Ce*Ne-ke*Te;function Ue(e,t,n,r){return 1===arguments.length?function(e){if(e instanceof $e)return new $e(e.h,e.s,e.l,e.opacity);e instanceof ie||(e=re(e));var t=e.r/255,n=e.g/255,r=e.b/255,a=(Pe*r+De*t-Le*n)/(Pe+De-Le),i=r-a,f=(Ee*(n-a)-Ne*i)/ke,c=Math.sqrt(f*f+i*i)/(Ee*a*(1-a)),o=c?Math.atan2(f,i)*se-120:NaN;return new $e(o<0?o+360:o,c,a,e.opacity)}(e):new $e(e,t,n,null==r?1:r)}function $e(e,t,n,r){this.h=+e,this.s=+t,this.l=+n,this.opacity=+r}function Ye(e,t,n,r,a){var i=e*e,f=i*e;return((1-3*e+3*i-f)*t+(4-6*i+3*f)*n+(1+3*e+3*i-3*f)*r+f*a)/6}I($e,Ue,j(O,{brighter:function(e){return e=null==e?1/.7:Math.pow(1/.7,e),new $e(this.h,this.s,this.l*e,this.opacity)},darker:function(e){return e=null==e?.7:Math.pow(.7,e),new $e(this.h,this.s,this.l*e,this.opacity)},rgb:function(){var e=isNaN(this.h)?0:(this.h+120)*le,t=+this.l,n=isNaN(this.s)?0:this.s*t*(1-t),r=Math.cos(e),a=Math.sin(e);return new ie(255*(t+n*(Te*r+Ce*a)),255*(t+n*(Ne*r+ke*a)),255*(t+n*(Ee*r)),this.opacity)}}));var Fe=function(e){return function(){return e}};function Be(e,t){return function(n){return e+n*t}}function Ie(e){return 1==(e=+e)?je:function(t,n){return n-t?function(e,t,n){return e=Math.pow(e,n),t=Math.pow(t,n)-e,n=1/n,function(r){return Math.pow(e+r*t,n)}}(t,n,e):Fe(isNaN(t)?n:t)}}function je(e,t){var n=t-e;return n?Be(e,n):Fe(isNaN(e)?t:e)}var Oe=function e(t){var n=Ie(t);function r(e,t){var r=n((e=ae(e)).r,(t=ae(t)).r),a=n(e.g,t.g),i=n(e.b,t.b),f=je(e.opacity,t.opacity);return function(t){return e.r=r(t),e.g=a(t),e.b=i(t),e.opacity=f(t),e+""}}return r.gamma=e,r}(1);function Ge(e){return function(t){var n,r,a=t.length,i=new Array(a),f=new Array(a),c=new Array(a);for(n=0;n<a;++n)r=ae(t[n]),i[n]=r.r||0,f[n]=r.g||0,c[n]=r.b||0;return i=e(i),f=e(f),c=e(c),r.opacity=1,function(e){return r.r=i(e),r.g=f(e),r.b=c(e),r+""}}}var Re=Ge(function(e){var t=e.length-1;return function(n){var r=n<=0?n=0:n>=1?(n=1,t-1):Math.floor(n*t),a=e[r],i=e[r+1],f=r>0?e[r-1]:2*a-i,c=r<t-1?e[r+2]:2*i-a;return Ye((n-r/t)*t,f,a,i,c)}}),ze=(Ge(function(e){var t=e.length;return function(n){var r=Math.floor(((n%=1)<0?++n:n)*t),a=e[(r+t-1)%t],i=e[r%t],f=e[(r+1)%t],c=e[(r+2)%t];return Ye((n-r/t)*t,a,i,f,c)}}),function(e,t){return t-=e=+e,function(n){return e+t*n}}),Ve=/[-+]?(?:\d+\.?\d*|\.?\d+)(?:[eE][-+]?\d+)?/g,Xe=new RegExp(Ve.source,"g");var He,qe,Qe,Ze,We=function(e,t){var n,r,a,i=Ve.lastIndex=Xe.lastIndex=0,f=-1,c=[],o=[];for(e+="",t+="";(n=Ve.exec(e))&&(r=Xe.exec(t));)(a=r.index)>i&&(a=t.slice(i,a),c[f]?c[f]+=a:c[++f]=a),(n=n[0])===(r=r[0])?c[f]?c[f]+=r:c[++f]=r:(c[++f]=null,o.push({i:f,x:ze(n,r)})),i=Xe.lastIndex;return i<t.length&&(a=t.slice(i),c[f]?c[f]+=a:c[++f]=a),c.length<2?o[0]?function(e){return function(t){return e(t)+""}}(o[0].x):function(e){return function(){return e}}(t):(t=o.length,function(e){for(var n,r=0;r<t;++r)c[(n=o[r]).i]=n.x(e);return c.join("")})},Ke=function(e,t){var n,r=typeof t;return null==t||"boolean"===r?Fe(t):("number"===r?ze:"string"===r?(n=ee(t))?(t=n,Oe):We:t instanceof ee?Oe:t instanceof Date?function(e,t){var n=new Date;return t-=e=+e,function(r){return n.setTime(e+t*r),n}}:Array.isArray(t)?function(e,t){var n,r=t?t.length:0,a=e?Math.min(r,e.length):0,i=new Array(a),f=new Array(r);for(n=0;n<a;++n)i[n]=Ke(e[n],t[n]);for(;n<r;++n)f[n]=t[n];return function(e){for(n=0;n<a;++n)f[n]=i[n](e);return f}}:"function"!=typeof t.valueOf&&"function"!=typeof t.toString||isNaN(t)?function(e,t){var n,r={},a={};for(n in null!==e&&"object"==typeof e||(e={}),null!==t&&"object"==typeof t||(t={}),t)n in e?r[n]=Ke(e[n],t[n]):a[n]=t[n];return function(e){for(n in r)a[n]=r[n](e);return a}}:ze)(e,t)},Je=function(e,t){return t-=e=+e,function(n){return Math.round(e+t*n)}},et=180/Math.PI,tt={translateX:0,translateY:0,rotate:0,skewX:0,scaleX:1,scaleY:1},nt=function(e,t,n,r,a,i){var f,c,o;return(f=Math.sqrt(e*e+t*t))&&(e/=f,t/=f),(o=e*n+t*r)&&(n-=e*o,r-=t*o),(c=Math.sqrt(n*n+r*r))&&(n/=c,r/=c,o/=c),e*r<t*n&&(e=-e,t=-t,o=-o,f=-f),{translateX:a,translateY:i,rotate:Math.atan2(t,e)*et,skewX:Math.atan(o)*et,scaleX:f,scaleY:c}};function rt(e,t,n,r){function a(e){return e.length?e.pop()+" ":""}return function(i,f){var c=[],o=[];return i=e(i),f=e(f),function(e,r,a,i,f,c){if(e!==a||r!==i){var o=f.push("translate(",null,t,null,n);c.push({i:o-4,x:ze(e,a)},{i:o-2,x:ze(r,i)})}else(a||i)&&f.push("translate("+a+t+i+n)}(i.translateX,i.translateY,f.translateX,f.translateY,c,o),function(e,t,n,i){e!==t?(e-t>180?t+=360:t-e>180&&(e+=360),i.push({i:n.push(a(n)+"rotate(",null,r)-2,x:ze(e,t)})):t&&n.push(a(n)+"rotate("+t+r)}(i.rotate,f.rotate,c,o),function(e,t,n,i){e!==t?i.push({i:n.push(a(n)+"skewX(",null,r)-2,x:ze(e,t)}):t&&n.push(a(n)+"skewX("+t+r)}(i.skewX,f.skewX,c,o),function(e,t,n,r,i,f){if(e!==n||t!==r){var c=i.push(a(i)+"scale(",null,",",null,")");f.push({i:c-4,x:ze(e,n)},{i:c-2,x:ze(t,r)})}else 1===n&&1===r||i.push(a(i)+"scale("+n+","+r+")")}(i.scaleX,i.scaleY,f.scaleX,f.scaleY,c,o),i=f=null,function(e){for(var t,n=-1,r=o.length;++n<r;)c[(t=o[n]).i]=t.x(e);return c.join("")}}}var at=rt(function(e){return"none"===e?tt:(He||(He=document.createElement("DIV"),qe=document.documentElement,Qe=document.defaultView),He.style.transform=e,e=Qe.getComputedStyle(qe.appendChild(He),null).getPropertyValue("transform"),qe.removeChild(He),e=e.slice(7,-1).split(","),nt(+e[0],+e[1],+e[2],+e[3],+e[4],+e[5]))},"px, ","px)","deg)"),it=rt(function(e){return null==e?tt:(Ze||(Ze=document.createElementNS("http://www.w3.org/2000/svg","g")),Ze.setAttribute("transform",e),(e=Ze.transform.baseVal.consolidate())?(e=e.matrix,nt(e.a,e.b,e.c,e.d,e.e,e.f)):tt)},", ",")",")");function ft(e){return function t(n){function r(t,r){var a=e((t=Ue(t)).h,(r=Ue(r)).h),i=je(t.s,r.s),f=je(t.l,r.l),c=je(t.opacity,r.opacity);return function(e){return t.h=a(e),t.s=i(e),t.l=f(Math.pow(e,n)),t.opacity=c(e),t+""}}return n=+n,r.gamma=t,r}(1)}ft(function(e,t){var n=t-e;return n?Be(e,n>180||n<-180?n-360*Math.round(n/360):n):Fe(isNaN(e)?t:e)});var ct=ft(je),ot=function(e){return function(){return e}},ut=function(e){return+e},lt=[0,1];function st(e,t){return(t-=e=+e)?function(n){return(n-e)/t}:ot(t)}function dt(e,t,n,r){var a=e[0],i=e[1],f=t[0],c=t[1];return i<a?(a=n(i,a),f=r(c,f)):(a=n(a,i),f=r(f,c)),function(e){return f(a(e))}}function ht(e,t,n,r){var a=Math.min(e.length,t.length)-1,i=new Array(a),f=new Array(a),c=-1;for(e[a]<e[0]&&(e=e.slice().reverse(),t=t.slice().reverse());++c<a;)i[c]=n(e[c],e[c+1]),f[c]=r(t[c],t[c+1]);return function(t){var n=m(e,t,1,a)-1;return f[n](i[n](t))}}function bt(e,t){return t.domain(e.domain()).range(e.range()).interpolate(e.interpolate()).clamp(e.clamp())}function pt(e,t){var n,r,a,i=lt,f=lt,c=Ke,o=!1;function u(){return n=Math.min(i.length,f.length)>2?ht:dt,r=a=null,l}function l(t){return(r||(r=n(i,f,o?function(e){return function(t,n){var r=e(t=+t,n=+n);return function(e){return e<=t?0:e>=n?1:r(e)}}}(e):e,c)))(+t)}return l.invert=function(e){return(a||(a=n(f,i,st,o?function(e){return function(t,n){var r=e(t=+t,n=+n);return function(e){return e<=0?t:e>=1?n:r(e)}}}(t):t)))(+e)},l.domain=function(e){return arguments.length?(i=U.call(e,ut),u()):i.slice()},l.range=function(e){return arguments.length?(f=Y.call(e),u()):f.slice()},l.rangeRound=function(e){return f=Y.call(e),c=Je,u()},l.clamp=function(e){return arguments.length?(o=!!e,u()):o},l.interpolate=function(e){return arguments.length?(c=e,u()):c},u()}var gt=function(e,t){if((n=(e=t?e.toExponential(t-1):e.toExponential()).indexOf("e"))<0)return null;var n,r=e.slice(0,n);return[r.length>1?r[0]+r.slice(2):r,+e.slice(n+1)]},mt=function(e){return(e=gt(Math.abs(e)))?e[1]:NaN},yt=/^(?:(.)?([<>=^]))?([+\-( ])?([$#])?(0)?(\d+)?(,)?(\.\d+)?(~)?([a-z%])?$/i;function vt(e){return new wt(e)}function wt(e){if(!(t=yt.exec(e)))throw new Error("invalid format: "+e);var t;this.fill=t[1]||" ",this.align=t[2]||">",this.sign=t[3]||"-",this.symbol=t[4]||"",this.zero=!!t[5],this.width=t[6]&&+t[6],this.comma=!!t[7],this.precision=t[8]&&+t[8].slice(1),this.trim=!!t[9],this.type=t[10]||""}vt.prototype=wt.prototype,wt.prototype.toString=function(){return this.fill+this.align+this.sign+this.symbol+(this.zero?"0":"")+(null==this.width?"":Math.max(1,0|this.width))+(this.comma?",":"")+(null==this.precision?"":"."+Math.max(0,0|this.precision))+(this.trim?"~":"")+this.type};var xt,_t,Mt,St,At=function(e){e:for(var t,n=e.length,r=1,a=-1;r<n;++r)switch(e[r]){case".":a=t=r;break;case"0":0===a&&(a=r),t=r;break;default:if(a>0){if(!+e[r])break e;a=0}}return a>0?e.slice(0,a)+e.slice(t+1):e},Tt=function(e,t){var n=gt(e,t);if(!n)return e+"";var r=n[0],a=n[1];return a<0?"0."+new Array(-a).join("0")+r:r.length>a+1?r.slice(0,a+1)+"."+r.slice(a+1):r+new Array(a-r.length+2).join("0")},Ct={"%":function(e,t){return(100*e).toFixed(t)},b:function(e){return Math.round(e).toString(2)},c:function(e){return e+""},d:function(e){return Math.round(e).toString(10)},e:function(e,t){return e.toExponential(t)},f:function(e,t){return e.toFixed(t)},g:function(e,t){return e.toPrecision(t)},o:function(e){return Math.round(e).toString(8)},p:function(e,t){return Tt(100*e,t)},r:Tt,s:function(e,t){var n=gt(e,t);if(!n)return e+"";var r=n[0],a=n[1],i=a-(xt=3*Math.max(-8,Math.min(8,Math.floor(a/3))))+1,f=r.length;return i===f?r:i>f?r+new Array(i-f+1).join("0"):i>0?r.slice(0,i)+"."+r.slice(i):"0."+new Array(1-i).join("0")+gt(e,Math.max(0,t+i-1))[0]},X:function(e){return Math.round(e).toString(16).toUpperCase()},x:function(e){return Math.round(e).toString(16)}},Nt=function(e){return e},kt=["y","z","a","f","p","n","µ","m","","k","M","G","T","P","E","Z","Y"];_t=function(e){var t,n,r=e.grouping&&e.thousands?(t=e.grouping,n=e.thousands,function(e,r){for(var a=e.length,i=[],f=0,c=t[0],o=0;a>0&&c>0&&(o+c+1>r&&(c=Math.max(1,r-o)),i.push(e.substring(a-=c,a+c)),!((o+=c+1)>r));)c=t[f=(f+1)%t.length];return i.reverse().join(n)}):Nt,a=e.currency,i=e.decimal,f=e.numerals?function(e){return function(t){return t.replace(/[0-9]/g,function(t){return e[+t]})}}(e.numerals):Nt,c=e.percent||"%";function o(e){var t=(e=vt(e)).fill,n=e.align,o=e.sign,u=e.symbol,l=e.zero,s=e.width,d=e.comma,h=e.precision,b=e.trim,p=e.type;"n"===p?(d=!0,p="g"):Ct[p]||(null==h&&(h=12),b=!0,p="g"),(l||"0"===t&&"="===n)&&(l=!0,t="0",n="=");var g="$"===u?a[0]:"#"===u&&/[boxX]/.test(p)?"0"+p.toLowerCase():"",m="$"===u?a[1]:/[%p]/.test(p)?c:"",y=Ct[p],v=/[defgprs%]/.test(p);function w(e){var a,c,u,w=g,x=m;if("c"===p)x=y(e)+x,e="";else{var _=(e=+e)<0;if(e=y(Math.abs(e),h),b&&(e=At(e)),_&&0==+e&&(_=!1),w=(_?"("===o?o:"-":"-"===o||"("===o?"":o)+w,x=("s"===p?kt[8+xt/3]:"")+x+(_&&"("===o?")":""),v)for(a=-1,c=e.length;++a<c;)if(48>(u=e.charCodeAt(a))||u>57){x=(46===u?i+e.slice(a+1):e.slice(a))+x,e=e.slice(0,a);break}}d&&!l&&(e=r(e,1/0));var M=w.length+e.length+x.length,S=M<s?new Array(s-M+1).join(t):"";switch(d&&l&&(e=r(S+e,S.length?s-x.length:1/0),S=""),n){case"<":e=w+e+x+S;break;case"=":e=w+S+e+x;break;case"^":e=S.slice(0,M=S.length>>1)+w+e+x+S.slice(M);break;default:e=S+w+e+x}return f(e)}return h=null==h?6:/[gprs]/.test(p)?Math.max(1,Math.min(21,h)):Math.max(0,Math.min(20,h)),w.toString=function(){return e+""},w}return{format:o,formatPrefix:function(e,t){var n=o(((e=vt(e)).type="f",e)),r=3*Math.max(-8,Math.min(8,Math.floor(mt(t)/3))),a=Math.pow(10,-r),i=kt[8+r/3];return function(e){return n(a*e)+i}}}}({decimal:".",thousands:",",grouping:[3],currency:["$",""]}),Mt=_t.format,St=_t.formatPrefix;var Et=function(e,t,n){var r,a=e[0],i=e[e.length-1],f=function(e,t,n){var r=Math.abs(t-e)/Math.max(0,n),a=Math.pow(10,Math.floor(Math.log(r)/Math.LN10)),i=r/a;return i>=v?a*=10:i>=w?a*=5:i>=x&&(a*=2),t<e?-a:a}(a,i,null==t?10:t);switch((n=vt(null==n?",f":n)).type){case"s":var c=Math.max(Math.abs(a),Math.abs(i));return null!=n.precision||isNaN(r=function(e,t){return Math.max(0,3*Math.max(-8,Math.min(8,Math.floor(mt(t)/3)))-mt(Math.abs(e)))}(f,c))||(n.precision=r),St(n,c);case"":case"e":case"g":case"p":case"r":null!=n.precision||isNaN(r=function(e,t){return e=Math.abs(e),t=Math.abs(t)-e,Math.max(0,mt(t)-mt(e))+1}(f,Math.max(Math.abs(a),Math.abs(i))))||(n.precision=r-("e"===n.type));break;case"f":case"%":null!=n.precision||isNaN(r=function(e){return Math.max(0,-mt(Math.abs(e)))}(f))||(n.precision=r-2*("%"===n.type))}return Mt(n)};function Dt(e){var t=e.domain;return e.ticks=function(e){var n=t();return _(n[0],n[n.length-1],null==e?10:e)},e.tickFormat=function(e,n){return Et(t(),e,n)},e.nice=function(n){null==n&&(n=10);var r,a=t(),i=0,f=a.length-1,c=a[i],o=a[f];return o<c&&(r=c,c=o,o=r,r=i,i=f,f=r),(r=M(c,o,n))>0?r=M(c=Math.floor(c/r)*r,o=Math.ceil(o/r)*r,n):r<0&&(r=M(c=Math.ceil(c*r)/r,o=Math.floor(o*r)/r,n)),r>0?(a[i]=Math.floor(c/r)*r,a[f]=Math.ceil(o/r)*r,t(a)):r<0&&(a[i]=Math.ceil(c*r)/r,a[f]=Math.floor(o*r)/r,t(a)),e},e}function Lt(e,t){return e<0?-Math.pow(-e,t):Math.pow(e,t)}function Pt(){return function e(){var t=1,n=pt(function(e,n){return(n=Lt(n,t)-(e=Lt(e,t)))?function(r){return(Lt(r,t)-e)/n}:ot(n)},function(e,n){return n=Lt(n,t)-(e=Lt(e,t)),function(r){return Lt(e+n*r,1/t)}}),r=n.domain;return n.exponent=function(e){return arguments.length?(t=+e,r(r())):t},n.copy=function(){return bt(n,e().exponent(t))},Dt(n)}().exponent(.5)}var Ut=new Date,$t=new Date;function Yt(e,t,n,r){function a(t){return e(t=new Date(+t)),t}return a.floor=a,a.ceil=function(n){return e(n=new Date(n-1)),t(n,1),e(n),n},a.round=function(e){var t=a(e),n=a.ceil(e);return e-t<n-e?t:n},a.offset=function(e,n){return t(e=new Date(+e),null==n?1:Math.floor(n)),e},a.range=function(n,r,i){var f,c=[];if(n=a.ceil(n),i=null==i?1:Math.floor(i),!(n<r&&i>0))return c;do{c.push(f=new Date(+n)),t(n,i),e(n)}while(f<n&&n<r);return c},a.filter=function(n){return Yt(function(t){if(t>=t)for(;e(t),!n(t);)t.setTime(t-1)},function(e,r){if(e>=e)if(r<0)for(;++r<=0;)for(;t(e,-1),!n(e););else for(;--r>=0;)for(;t(e,1),!n(e););})},n&&(a.count=function(t,r){return Ut.setTime(+t),$t.setTime(+r),e(Ut),e($t),Math.floor(n(Ut,$t))},a.every=function(e){return e=Math.floor(e),isFinite(e)&&e>0?e>1?a.filter(r?function(t){return r(t)%e==0}:function(t){return a.count(0,t)%e==0}):a:null}),a}var Ft=Yt(function(){},function(e,t){e.setTime(+e+t)},function(e,t){return t-e});Ft.every=function(e){return e=Math.floor(e),isFinite(e)&&e>0?e>1?Yt(function(t){t.setTime(Math.floor(t/e)*e)},function(t,n){t.setTime(+t+n*e)},function(t,n){return(n-t)/e}):Ft:null};var Bt=6e4,It=6048e5,jt=(Yt(function(e){e.setTime(1e3*Math.floor(e/1e3))},function(e,t){e.setTime(+e+1e3*t)},function(e,t){return(t-e)/1e3},function(e){return e.getUTCSeconds()}),Yt(function(e){e.setTime(Math.floor(e/Bt)*Bt)},function(e,t){e.setTime(+e+t*Bt)},function(e,t){return(t-e)/Bt},function(e){return e.getMinutes()}),Yt(function(e){var t=e.getTimezoneOffset()*Bt%36e5;t<0&&(t+=36e5),e.setTime(36e5*Math.floor((+e-t)/36e5)+t)},function(e,t){e.setTime(+e+36e5*t)},function(e,t){return(t-e)/36e5},function(e){return e.getHours()}),Yt(function(e){e.setHours(0,0,0,0)},function(e,t){e.setDate(e.getDate()+t)},function(e,t){return(t-e-(t.getTimezoneOffset()-e.getTimezoneOffset())*Bt)/864e5},function(e){return e.getDate()-1}));function Ot(e){return Yt(function(t){t.setDate(t.getDate()-(t.getDay()+7-e)%7),t.setHours(0,0,0,0)},function(e,t){e.setDate(e.getDate()+7*t)},function(e,t){return(t-e-(t.getTimezoneOffset()-e.getTimezoneOffset())*Bt)/It})}var Gt=Ot(0),Rt=Ot(1),zt=(Ot(2),Ot(3),Ot(4)),Vt=(Ot(5),Ot(6),Yt(function(e){e.setDate(1),e.setHours(0,0,0,0)},function(e,t){e.setMonth(e.getMonth()+t)},function(e,t){return t.getMonth()-e.getMonth()+12*(t.getFullYear()-e.getFullYear())},function(e){return e.getMonth()}),Yt(function(e){e.setMonth(0,1),e.setHours(0,0,0,0)},function(e,t){e.setFullYear(e.getFullYear()+t)},function(e,t){return t.getFullYear()-e.getFullYear()},function(e){return e.getFullYear()}));Vt.every=function(e){return isFinite(e=Math.floor(e))&&e>0?Yt(function(t){t.setFullYear(Math.floor(t.getFullYear()/e)*e),t.setMonth(0,1),t.setHours(0,0,0,0)},function(t,n){t.setFullYear(t.getFullYear()+n*e)}):null};Yt(function(e){e.setUTCSeconds(0,0)},function(e,t){e.setTime(+e+t*Bt)},function(e,t){return(t-e)/Bt},function(e){return e.getUTCMinutes()}),Yt(function(e){e.setUTCMinutes(0,0,0)},function(e,t){e.setTime(+e+36e5*t)},function(e,t){return(t-e)/36e5},function(e){return e.getUTCHours()});var Xt=Yt(function(e){e.setUTCHours(0,0,0,0)},function(e,t){e.setUTCDate(e.getUTCDate()+t)},function(e,t){return(t-e)/864e5},function(e){return e.getUTCDate()-1});function Ht(e){return Yt(function(t){t.setUTCDate(t.getUTCDate()-(t.getUTCDay()+7-e)%7),t.setUTCHours(0,0,0,0)},function(e,t){e.setUTCDate(e.getUTCDate()+7*t)},function(e,t){return(t-e)/It})}var qt=Ht(0),Qt=Ht(1),Zt=(Ht(2),Ht(3),Ht(4)),Wt=(Ht(5),Ht(6),Yt(function(e){e.setUTCDate(1),e.setUTCHours(0,0,0,0)},function(e,t){e.setUTCMonth(e.getUTCMonth()+t)},function(e,t){return t.getUTCMonth()-e.getUTCMonth()+12*(t.getUTCFullYear()-e.getUTCFullYear())},function(e){return e.getUTCMonth()}),Yt(function(e){e.setUTCMonth(0,1),e.setUTCHours(0,0,0,0)},function(e,t){e.setUTCFullYear(e.getUTCFullYear()+t)},function(e,t){return t.getUTCFullYear()-e.getUTCFullYear()},function(e){return e.getUTCFullYear()}));function Kt(e){if(0<=e.y&&e.y<100){var t=new Date(-1,e.m,e.d,e.H,e.M,e.S,e.L);return t.setFullYear(e.y),t}return new Date(e.y,e.m,e.d,e.H,e.M,e.S,e.L)}function Jt(e){if(0<=e.y&&e.y<100){var t=new Date(Date.UTC(-1,e.m,e.d,e.H,e.M,e.S,e.L));return t.setUTCFullYear(e.y),t}return new Date(Date.UTC(e.y,e.m,e.d,e.H,e.M,e.S,e.L))}function en(e){return{y:e,m:0,d:1,H:0,M:0,S:0,L:0}}Wt.every=function(e){return isFinite(e=Math.floor(e))&&e>0?Yt(function(t){t.setUTCFullYear(Math.floor(t.getUTCFullYear()/e)*e),t.setUTCMonth(0,1),t.setUTCHours(0,0,0,0)},function(t,n){t.setUTCFullYear(t.getUTCFullYear()+n*e)}):null};var tn,nn,rn,an={"-":"",_:" ",0:"0"},fn=/^\s*\d+/,cn=/^%/,on=/[\\^$*+?|[\]().{}]/g;function un(e,t,n){var r=e<0?"-":"",a=(r?-e:e)+"",i=a.length;return r+(i<n?new Array(n-i+1).join(t)+a:a)}function ln(e){return e.replace(on,"\\$&")}function sn(e){return new RegExp("^(?:"+e.map(ln).join("|")+")","i")}function dn(e){for(var t={},n=-1,r=e.length;++n<r;)t[e[n].toLowerCase()]=n;return t}function hn(e,t,n){var r=fn.exec(t.slice(n,n+1));return r?(e.w=+r[0],n+r[0].length):-1}function bn(e,t,n){var r=fn.exec(t.slice(n,n+1));return r?(e.u=+r[0],n+r[0].length):-1}function pn(e,t,n){var r=fn.exec(t.slice(n,n+2));return r?(e.U=+r[0],n+r[0].length):-1}function gn(e,t,n){var r=fn.exec(t.slice(n,n+2));return r?(e.V=+r[0],n+r[0].length):-1}function mn(e,t,n){var r=fn.exec(t.slice(n,n+2));return r?(e.W=+r[0],n+r[0].length):-1}function yn(e,t,n){var r=fn.exec(t.slice(n,n+4));return r?(e.y=+r[0],n+r[0].length):-1}function vn(e,t,n){var r=fn.exec(t.slice(n,n+2));return r?(e.y=+r[0]+(+r[0]>68?1900:2e3),n+r[0].length):-1}function wn(e,t,n){var r=/^(Z)|([+-]\d\d)(?::?(\d\d))?/.exec(t.slice(n,n+6));return r?(e.Z=r[1]?0:-(r[2]+(r[3]||"00")),n+r[0].length):-1}function xn(e,t,n){var r=fn.exec(t.slice(n,n+2));return r?(e.m=r[0]-1,n+r[0].length):-1}function _n(e,t,n){var r=fn.exec(t.slice(n,n+2));return r?(e.d=+r[0],n+r[0].length):-1}function Mn(e,t,n){var r=fn.exec(t.slice(n,n+3));return r?(e.m=0,e.d=+r[0],n+r[0].length):-1}function Sn(e,t,n){var r=fn.exec(t.slice(n,n+2));return r?(e.H=+r[0],n+r[0].length):-1}function An(e,t,n){var r=fn.exec(t.slice(n,n+2));return r?(e.M=+r[0],n+r[0].length):-1}function Tn(e,t,n){var r=fn.exec(t.slice(n,n+2));return r?(e.S=+r[0],n+r[0].length):-1}function Cn(e,t,n){var r=fn.exec(t.slice(n,n+3));return r?(e.L=+r[0],n+r[0].length):-1}function Nn(e,t,n){var r=fn.exec(t.slice(n,n+6));return r?(e.L=Math.floor(r[0]/1e3),n+r[0].length):-1}function kn(e,t,n){var r=cn.exec(t.slice(n,n+1));return r?n+r[0].length:-1}function En(e,t,n){var r=fn.exec(t.slice(n));return r?(e.Q=+r[0],n+r[0].length):-1}function Dn(e,t,n){var r=fn.exec(t.slice(n));return r?(e.Q=1e3*+r[0],n+r[0].length):-1}function Ln(e,t){return un(e.getDate(),t,2)}function Pn(e,t){return un(e.getHours(),t,2)}function Un(e,t){return un(e.getHours()%12||12,t,2)}function $n(e,t){return un(1+jt.count(Vt(e),e),t,3)}function Yn(e,t){return un(e.getMilliseconds(),t,3)}function Fn(e,t){return Yn(e,t)+"000"}function Bn(e,t){return un(e.getMonth()+1,t,2)}function In(e,t){return un(e.getMinutes(),t,2)}function jn(e,t){return un(e.getSeconds(),t,2)}function On(e){var t=e.getDay();return 0===t?7:t}function Gn(e,t){return un(Gt.count(Vt(e),e),t,2)}function Rn(e,t){var n=e.getDay();return e=n>=4||0===n?zt(e):zt.ceil(e),un(zt.count(Vt(e),e)+(4===Vt(e).getDay()),t,2)}function zn(e){return e.getDay()}function Vn(e,t){return un(Rt.count(Vt(e),e),t,2)}function Xn(e,t){return un(e.getFullYear()%100,t,2)}function Hn(e,t){return un(e.getFullYear()%1e4,t,4)}function qn(e){var t=e.getTimezoneOffset();return(t>0?"-":(t*=-1,"+"))+un(t/60|0,"0",2)+un(t%60,"0",2)}function Qn(e,t){return un(e.getUTCDate(),t,2)}function Zn(e,t){return un(e.getUTCHours(),t,2)}function Wn(e,t){return un(e.getUTCHours()%12||12,t,2)}function Kn(e,t){return un(1+Xt.count(Wt(e),e),t,3)}function Jn(e,t){return un(e.getUTCMilliseconds(),t,3)}function er(e,t){return Jn(e,t)+"000"}function tr(e,t){return un(e.getUTCMonth()+1,t,2)}function nr(e,t){return un(e.getUTCMinutes(),t,2)}function rr(e,t){return un(e.getUTCSeconds(),t,2)}function ar(e){var t=e.getUTCDay();return 0===t?7:t}function ir(e,t){return un(qt.count(Wt(e),e),t,2)}function fr(e,t){var n=e.getUTCDay();return e=n>=4||0===n?Zt(e):Zt.ceil(e),un(Zt.count(Wt(e),e)+(4===Wt(e).getUTCDay()),t,2)}function cr(e){return e.getUTCDay()}function or(e,t){return un(Qt.count(Wt(e),e),t,2)}function ur(e,t){return un(e.getUTCFullYear()%100,t,2)}function lr(e,t){return un(e.getUTCFullYear()%1e4,t,4)}function sr(){return"+0000"}function dr(){return"%"}function hr(e){return+e}function br(e){return Math.floor(+e/1e3)}!function(e){tn=function(e){var t=e.dateTime,n=e.date,r=e.time,a=e.periods,i=e.days,f=e.shortDays,c=e.months,o=e.shortMonths,u=sn(a),l=dn(a),s=sn(i),d=dn(i),h=sn(f),b=dn(f),p=sn(c),g=dn(c),m=sn(o),y=dn(o),v={a:function(e){return f[e.getDay()]},A:function(e){return i[e.getDay()]},b:function(e){return o[e.getMonth()]},B:function(e){return c[e.getMonth()]},c:null,d:Ln,e:Ln,f:Fn,H:Pn,I:Un,j:$n,L:Yn,m:Bn,M:In,p:function(e){return a[+(e.getHours()>=12)]},Q:hr,s:br,S:jn,u:On,U:Gn,V:Rn,w:zn,W:Vn,x:null,X:null,y:Xn,Y:Hn,Z:qn,"%":dr},w={a:function(e){return f[e.getUTCDay()]},A:function(e){return i[e.getUTCDay()]},b:function(e){return o[e.getUTCMonth()]},B:function(e){return c[e.getUTCMonth()]},c:null,d:Qn,e:Qn,f:er,H:Zn,I:Wn,j:Kn,L:Jn,m:tr,M:nr,p:function(e){return a[+(e.getUTCHours()>=12)]},Q:hr,s:br,S:rr,u:ar,U:ir,V:fr,w:cr,W:or,x:null,X:null,y:ur,Y:lr,Z:sr,"%":dr},x={a:function(e,t,n){var r=h.exec(t.slice(n));return r?(e.w=b[r[0].toLowerCase()],n+r[0].length):-1},A:function(e,t,n){var r=s.exec(t.slice(n));return r?(e.w=d[r[0].toLowerCase()],n+r[0].length):-1},b:function(e,t,n){var r=m.exec(t.slice(n));return r?(e.m=y[r[0].toLowerCase()],n+r[0].length):-1},B:function(e,t,n){var r=p.exec(t.slice(n));return r?(e.m=g[r[0].toLowerCase()],n+r[0].length):-1},c:function(e,n,r){return S(e,t,n,r)},d:_n,e:_n,f:Nn,H:Sn,I:Sn,j:Mn,L:Cn,m:xn,M:An,p:function(e,t,n){var r=u.exec(t.slice(n));return r?(e.p=l[r[0].toLowerCase()],n+r[0].length):-1},Q:En,s:Dn,S:Tn,u:bn,U:pn,V:gn,w:hn,W:mn,x:function(e,t,r){return S(e,n,t,r)},X:function(e,t,n){return S(e,r,t,n)},y:vn,Y:yn,Z:wn,"%":kn};function _(e,t){return function(n){var r,a,i,f=[],c=-1,o=0,u=e.length;for(n instanceof Date||(n=new Date(+n));++c<u;)37===e.charCodeAt(c)&&(f.push(e.slice(o,c)),null!=(a=an[r=e.charAt(++c)])?r=e.charAt(++c):a="e"===r?" ":"0",(i=t[r])&&(r=i(n,a)),f.push(r),o=c+1);return f.push(e.slice(o,c)),f.join("")}}function M(e,t){return function(n){var r,a,i=en(1900);if(S(i,e,n+="",0)!=n.length)return null;if("Q"in i)return new Date(i.Q);if("p"in i&&(i.H=i.H%12+12*i.p),"V"in i){if(i.V<1||i.V>53)return null;"w"in i||(i.w=1),"Z"in i?(r=(a=(r=Jt(en(i.y))).getUTCDay())>4||0===a?Qt.ceil(r):Qt(r),r=Xt.offset(r,7*(i.V-1)),i.y=r.getUTCFullYear(),i.m=r.getUTCMonth(),i.d=r.getUTCDate()+(i.w+6)%7):(r=(a=(r=t(en(i.y))).getDay())>4||0===a?Rt.ceil(r):Rt(r),r=jt.offset(r,7*(i.V-1)),i.y=r.getFullYear(),i.m=r.getMonth(),i.d=r.getDate()+(i.w+6)%7)}else("W"in i||"U"in i)&&("w"in i||(i.w="u"in i?i.u%7:"W"in i?1:0),a="Z"in i?Jt(en(i.y)).getUTCDay():t(en(i.y)).getDay(),i.m=0,i.d="W"in i?(i.w+6)%7+7*i.W-(a+5)%7:i.w+7*i.U-(a+6)%7);return"Z"in i?(i.H+=i.Z/100|0,i.M+=i.Z%100,Jt(i)):t(i)}}function S(e,t,n,r){for(var a,i,f=0,c=t.length,o=n.length;f<c;){if(r>=o)return-1;if(37===(a=t.charCodeAt(f++))){if(a=t.charAt(f++),!(i=x[a in an?t.charAt(f++):a])||(r=i(e,n,r))<0)return-1}else if(a!=n.charCodeAt(r++))return-1}return r}return v.x=_(n,v),v.X=_(r,v),v.c=_(t,v),w.x=_(n,w),w.X=_(r,w),w.c=_(t,w),{format:function(e){var t=_(e+="",v);return t.toString=function(){return e},t},parse:function(e){var t=M(e+="",Kt);return t.toString=function(){return e},t},utcFormat:function(e){var t=_(e+="",w);return t.toString=function(){return e},t},utcParse:function(e){var t=M(e,Jt);return t.toString=function(){return e},t}}}(e),nn=tn.utcFormat,rn=tn.utcParse}({dateTime:"%x, %X",date:"%-m/%-d/%Y",time:"%-I:%M:%S %p",periods:["AM","PM"],days:["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],shortDays:["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],months:["January","February","March","April","May","June","July","August","September","October","November","December"],shortMonths:["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"]});Date.prototype.toISOString||nn("%Y-%m-%dT%H:%M:%S.%LZ");+new Date("2000-01-01T00:00:00.000Z")||rn("%Y-%m-%dT%H:%M:%S.%LZ");class pr{constructor(e,t,n=1e6){this.data=e,this.center=t,this.window=n,this.scale=void 0,this.tooltip=void 0}render(e,t=1500,n=200,r=!1,a=!0,i="#0086af"){let f=[0,t],c=[this.center-this.window,this.center+this.window];this.scale=function e(){var t=pt(st,ze);return t.copy=function(){return bt(t,e())},Dt(t)}().rangeRound(f).domain(c);let o=e.append("g");o.append("rect").attr("x",0).attr("y",n/2).attr("width",t).attr("height",10).style("fill",i);const u=(e,t)=>{if(0==a)return 0;let n=5;if(t>0){let r=this.data[t-1];if(r.strand!=e.strand)return n;this.scale(e.start-r.start)+1<=10&&(n=t%2?n+60:n+30)}return n};o.selectAll(".minibrowser-feature").data(this.data).enter().append("rect").attr("class","minibrowser-feature").attr("x",e=>this.scale(e.start)).attr("y",(e,t)=>{let a=n/2,i=r?Math.abs(this.scale(e.start)-this.scale(e.end)+1):0;return"+"==e.strand?a-i-u(e,t):a}).attr("width",1).attr("height",(e,t)=>{return 10+u(e,t)+(r?Math.abs(this.scale(e.start)-this.scale(e.end)+1):0)}).style("fill","#eeeeee");if(0==a)return;o.selectAll(".minibrowser-feature-label").data(this.data).enter().append("text").attr("class",(e,t)=>".minibrowser-feature-label").attr("x",0).attr("y",0).style("font-size",e=>e.start==this.center?"12px":"9px").style("fill",e=>e.start==this.center?"red":"black").attr("transform",(e,t)=>{let a="+"==e.strad?this.scale(e.start):this.scale(e.start)-5,i=n/2,f="+"==e.strand?u(e,t):u(e,t)+5,c=r?Math.abs(this.scale(e.start)-this.scale(e.end)+1):0;return`translate(${a}, ${i="+"==e.strand?i-c-f:i+10+c+f}) rotate(${"+"==e.strand?-45:45})`}).text(e=>e.featureLabel)}}var gr="http://www.w3.org/1999/xhtml",mr={svg:"http://www.w3.org/2000/svg",xhtml:gr,xlink:"http://www.w3.org/1999/xlink",xml:"http://www.w3.org/XML/1998/namespace",xmlns:"http://www.w3.org/2000/xmlns/"},yr=function(e){var t=e+="",n=t.indexOf(":");return n>=0&&"xmlns"!==(t=e.slice(0,n))&&(e=e.slice(n+1)),mr.hasOwnProperty(t)?{space:mr[t],local:e}:e};var vr=function(e){var t=yr(e);return(t.local?function(e){return function(){return this.ownerDocument.createElementNS(e.space,e.local)}}:function(e){return function(){var t=this.ownerDocument,n=this.namespaceURI;return n===gr&&t.documentElement.namespaceURI===gr?t.createElement(e):t.createElementNS(n,e)}})(t)};function wr(){}var xr=function(e){return null==e?wr:function(){return this.querySelector(e)}};function _r(){return[]}var Mr=function(e){return null==e?_r:function(){return this.querySelectorAll(e)}},Sr=function(e){return function(){return this.matches(e)}};if("undefined"!=typeof document){var Ar=document.documentElement;if(!Ar.matches){var Tr=Ar.webkitMatchesSelector||Ar.msMatchesSelector||Ar.mozMatchesSelector||Ar.oMatchesSelector;Sr=function(e){return function(){return Tr.call(this,e)}}}}var Cr=Sr,Nr=function(e){return new Array(e.length)};function kr(e,t){this.ownerDocument=e.ownerDocument,this.namespaceURI=e.namespaceURI,this._next=null,this._parent=e,this.__data__=t}kr.prototype={constructor:kr,appendChild:function(e){return this._parent.insertBefore(e,this._next)},insertBefore:function(e,t){return this._parent.insertBefore(e,t)},querySelector:function(e){return this._parent.querySelector(e)},querySelectorAll:function(e){return this._parent.querySelectorAll(e)}};var Er="$";function Dr(e,t,n,r,a,i){for(var f,c=0,o=t.length,u=i.length;c<u;++c)(f=t[c])?(f.__data__=i[c],r[c]=f):n[c]=new kr(e,i[c]);for(;c<o;++c)(f=t[c])&&(a[c]=f)}function Lr(e,t,n,r,a,i,f){var c,o,u,l={},s=t.length,d=i.length,h=new Array(s);for(c=0;c<s;++c)(o=t[c])&&(h[c]=u=Er+f.call(o,o.__data__,c,t),u in l?a[c]=o:l[u]=o);for(c=0;c<d;++c)(o=l[u=Er+f.call(e,i[c],c,i)])?(r[c]=o,o.__data__=i[c],l[u]=null):n[c]=new kr(e,i[c]);for(c=0;c<s;++c)(o=t[c])&&l[h[c]]===o&&(a[c]=o)}function Pr(e,t){return e<t?-1:e>t?1:e>=t?0:NaN}var Ur=function(e){return e.ownerDocument&&e.ownerDocument.defaultView||e.document&&e||e.defaultView};function $r(e,t){return e.style.getPropertyValue(t)||Ur(e).getComputedStyle(e,null).getPropertyValue(t)}function Yr(e){return e.trim().split(/^|\s+/)}function Fr(e){return e.classList||new Br(e)}function Br(e){this._node=e,this._names=Yr(e.getAttribute("class")||"")}function Ir(e,t){for(var n=Fr(e),r=-1,a=t.length;++r<a;)n.add(t[r])}function jr(e,t){for(var n=Fr(e),r=-1,a=t.length;++r<a;)n.remove(t[r])}Br.prototype={add:function(e){this._names.indexOf(e)<0&&(this._names.push(e),this._node.setAttribute("class",this._names.join(" ")))},remove:function(e){var t=this._names.indexOf(e);t>=0&&(this._names.splice(t,1),this._node.setAttribute("class",this._names.join(" ")))},contains:function(e){return this._names.indexOf(e)>=0}};function Or(){this.textContent=""}function Gr(){this.innerHTML=""}function Rr(){this.nextSibling&&this.parentNode.appendChild(this)}function zr(){this.previousSibling&&this.parentNode.insertBefore(this,this.parentNode.firstChild)}function Vr(){return null}function Xr(){var e=this.parentNode;e&&e.removeChild(this)}function Hr(){return this.parentNode.insertBefore(this.cloneNode(!1),this.nextSibling)}function qr(){return this.parentNode.insertBefore(this.cloneNode(!0),this.nextSibling)}var Qr={},Zr=null;"undefined"!=typeof document&&("onmouseenter"in document.documentElement||(Qr={mouseenter:"mouseover",mouseleave:"mouseout"}));function Wr(e,t,n){return e=Kr(e,t,n),function(t){var n=t.relatedTarget;n&&(n===this||8&n.compareDocumentPosition(this))||e.call(this,t)}}function Kr(e,t,n){return function(r){var a=Zr;Zr=r;try{e.call(this,this.__data__,t,n)}finally{Zr=a}}}function Jr(e){return function(){var t=this.__on;if(t){for(var n,r=0,a=-1,i=t.length;r<i;++r)n=t[r],e.type&&n.type!==e.type||n.name!==e.name?t[++a]=n:this.removeEventListener(n.type,n.listener,n.capture);++a?t.length=a:delete this.__on}}}function ea(e,t,n){var r=Qr.hasOwnProperty(e.type)?Wr:Kr;return function(a,i,f){var c,o=this.__on,u=r(t,i,f);if(o)for(var l=0,s=o.length;l<s;++l)if((c=o[l]).type===e.type&&c.name===e.name)return this.removeEventListener(c.type,c.listener,c.capture),this.addEventListener(c.type,c.listener=u,c.capture=n),void(c.value=t);this.addEventListener(e.type,u,n),c={type:e.type,name:e.name,value:t,listener:u,capture:n},o?o.push(c):this.__on=[c]}}function ta(e,t,n){var r=Ur(e),a=r.CustomEvent;"function"==typeof a?a=new a(t,n):(a=r.document.createEvent("Event"),n?(a.initEvent(t,n.bubbles,n.cancelable),a.detail=n.detail):a.initEvent(t,!1,!1)),e.dispatchEvent(a)}var na=[null];function ra(e,t){this._groups=e,this._parents=t}function aa(){return new ra([[document.documentElement]],na)}ra.prototype=aa.prototype={constructor:ra,select:function(e){"function"!=typeof e&&(e=xr(e));for(var t=this._groups,n=t.length,r=new Array(n),a=0;a<n;++a)for(var i,f,c=t[a],o=c.length,u=r[a]=new Array(o),l=0;l<o;++l)(i=c[l])&&(f=e.call(i,i.__data__,l,c))&&("__data__"in i&&(f.__data__=i.__data__),u[l]=f);return new ra(r,this._parents)},selectAll:function(e){"function"!=typeof e&&(e=Mr(e));for(var t=this._groups,n=t.length,r=[],a=[],i=0;i<n;++i)for(var f,c=t[i],o=c.length,u=0;u<o;++u)(f=c[u])&&(r.push(e.call(f,f.__data__,u,c)),a.push(f));return new ra(r,a)},filter:function(e){"function"!=typeof e&&(e=Cr(e));for(var t=this._groups,n=t.length,r=new Array(n),a=0;a<n;++a)for(var i,f=t[a],c=f.length,o=r[a]=[],u=0;u<c;++u)(i=f[u])&&e.call(i,i.__data__,u,f)&&o.push(i);return new ra(r,this._parents)},data:function(e,t){if(!e)return b=new Array(this.size()),l=-1,this.each(function(e){b[++l]=e}),b;var n,r=t?Lr:Dr,a=this._parents,i=this._groups;"function"!=typeof e&&(n=e,e=function(){return n});for(var f=i.length,c=new Array(f),o=new Array(f),u=new Array(f),l=0;l<f;++l){var s=a[l],d=i[l],h=d.length,b=e.call(s,s&&s.__data__,l,a),p=b.length,g=o[l]=new Array(p),m=c[l]=new Array(p);r(s,d,g,m,u[l]=new Array(h),b,t);for(var y,v,w=0,x=0;w<p;++w)if(y=g[w]){for(w>=x&&(x=w+1);!(v=m[x])&&++x<p;);y._next=v||null}}return(c=new ra(c,a))._enter=o,c._exit=u,c},enter:function(){return new ra(this._enter||this._groups.map(Nr),this._parents)},exit:function(){return new ra(this._exit||this._groups.map(Nr),this._parents)},merge:function(e){for(var t=this._groups,n=e._groups,r=t.length,a=n.length,i=Math.min(r,a),f=new Array(r),c=0;c<i;++c)for(var o,u=t[c],l=n[c],s=u.length,d=f[c]=new Array(s),h=0;h<s;++h)(o=u[h]||l[h])&&(d[h]=o);for(;c<r;++c)f[c]=t[c];return new ra(f,this._parents)},order:function(){for(var e=this._groups,t=-1,n=e.length;++t<n;)for(var r,a=e[t],i=a.length-1,f=a[i];--i>=0;)(r=a[i])&&(f&&f!==r.nextSibling&&f.parentNode.insertBefore(r,f),f=r);return this},sort:function(e){function t(t,n){return t&&n?e(t.__data__,n.__data__):!t-!n}e||(e=Pr);for(var n=this._groups,r=n.length,a=new Array(r),i=0;i<r;++i){for(var f,c=n[i],o=c.length,u=a[i]=new Array(o),l=0;l<o;++l)(f=c[l])&&(u[l]=f);u.sort(t)}return new ra(a,this._parents).order()},call:function(){var e=arguments[0];return arguments[0]=this,e.apply(null,arguments),this},nodes:function(){var e=new Array(this.size()),t=-1;return this.each(function(){e[++t]=this}),e},node:function(){for(var e=this._groups,t=0,n=e.length;t<n;++t)for(var r=e[t],a=0,i=r.length;a<i;++a){var f=r[a];if(f)return f}return null},size:function(){var e=0;return this.each(function(){++e}),e},empty:function(){return!this.node()},each:function(e){for(var t=this._groups,n=0,r=t.length;n<r;++n)for(var a,i=t[n],f=0,c=i.length;f<c;++f)(a=i[f])&&e.call(a,a.__data__,f,i);return this},attr:function(e,t){var n=yr(e);if(arguments.length<2){var r=this.node();return n.local?r.getAttributeNS(n.space,n.local):r.getAttribute(n)}return this.each((null==t?n.local?function(e){return function(){this.removeAttributeNS(e.space,e.local)}}:function(e){return function(){this.removeAttribute(e)}}:"function"==typeof t?n.local?function(e,t){return function(){var n=t.apply(this,arguments);null==n?this.removeAttributeNS(e.space,e.local):this.setAttributeNS(e.space,e.local,n)}}:function(e,t){return function(){var n=t.apply(this,arguments);null==n?this.removeAttribute(e):this.setAttribute(e,n)}}:n.local?function(e,t){return function(){this.setAttributeNS(e.space,e.local,t)}}:function(e,t){return function(){this.setAttribute(e,t)}})(n,t))},style:function(e,t,n){return arguments.length>1?this.each((null==t?function(e){return function(){this.style.removeProperty(e)}}:"function"==typeof t?function(e,t,n){return function(){var r=t.apply(this,arguments);null==r?this.style.removeProperty(e):this.style.setProperty(e,r,n)}}:function(e,t,n){return function(){this.style.setProperty(e,t,n)}})(e,t,null==n?"":n)):$r(this.node(),e)},property:function(e,t){return arguments.length>1?this.each((null==t?function(e){return function(){delete this[e]}}:"function"==typeof t?function(e,t){return function(){var n=t.apply(this,arguments);null==n?delete this[e]:this[e]=n}}:function(e,t){return function(){this[e]=t}})(e,t)):this.node()[e]},classed:function(e,t){var n=Yr(e+"");if(arguments.length<2){for(var r=Fr(this.node()),a=-1,i=n.length;++a<i;)if(!r.contains(n[a]))return!1;return!0}return this.each(("function"==typeof t?function(e,t){return function(){(t.apply(this,arguments)?Ir:jr)(this,e)}}:t?function(e){return function(){Ir(this,e)}}:function(e){return function(){jr(this,e)}})(n,t))},text:function(e){return arguments.length?this.each(null==e?Or:("function"==typeof e?function(e){return function(){var t=e.apply(this,arguments);this.textContent=null==t?"":t}}:function(e){return function(){this.textContent=e}})(e)):this.node().textContent},html:function(e){return arguments.length?this.each(null==e?Gr:("function"==typeof e?function(e){return function(){var t=e.apply(this,arguments);this.innerHTML=null==t?"":t}}:function(e){return function(){this.innerHTML=e}})(e)):this.node().innerHTML},raise:function(){return this.each(Rr)},lower:function(){return this.each(zr)},append:function(e){var t="function"==typeof e?e:vr(e);return this.select(function(){return this.appendChild(t.apply(this,arguments))})},insert:function(e,t){var n="function"==typeof e?e:vr(e),r=null==t?Vr:"function"==typeof t?t:xr(t);return this.select(function(){return this.insertBefore(n.apply(this,arguments),r.apply(this,arguments)||null)})},remove:function(){return this.each(Xr)},clone:function(e){return this.select(e?qr:Hr)},datum:function(e){return arguments.length?this.property("__data__",e):this.node().__data__},on:function(e,t,n){var r,a,i=function(e){return e.trim().split(/^|\s+/).map(function(e){var t="",n=e.indexOf(".");return n>=0&&(t=e.slice(n+1),e=e.slice(0,n)),{type:e,name:t}})}(e+""),f=i.length;if(!(arguments.length<2)){for(c=t?ea:Jr,null==n&&(n=!1),r=0;r<f;++r)this.each(c(i[r],t,n));return this}var c=this.node().__on;if(c)for(var o,u=0,l=c.length;u<l;++u)for(r=0,o=c[u];r<f;++r)if((a=i[r]).type===o.type&&a.name===o.name)return o.value},dispatch:function(e,t){return this.each(("function"==typeof t?function(e,t){return function(){return ta(this,e,t.apply(this,arguments))}}:function(e,t){return function(){return ta(this,e,t)}})(e,t))}};var ia=function(e){return"string"==typeof e?new ra([[document.querySelector(e)]],[document.documentElement]):new ra([[e]],na)},fa=function(){for(var e,t=Zr;e=t.sourceEvent;)t=e;return t},ca=function(e){var t=fa();return t.changedTouches&&(t=t.changedTouches[0]),function(e,t){var n=e.ownerSVGElement||e;if(n.createSVGPoint){var r=n.createSVGPoint();return r.x=t.clientX,r.y=t.clientY,[(r=r.matrixTransform(e.getScreenCTM().inverse())).x,r.y]}var a=e.getBoundingClientRect();return[t.clientX-a.left-e.clientLeft,t.clientY-a.top-e.clientTop]}(e,t)};function oa(e){if(0==$(`#${e}`).length){let t=`Input Error: DOM ID ${e} is not found.`;throw console.warn(t),t}}function ua(e,t,n,r,a,i="relative"){return oa(e),void 0===a&&(a=`${e}-svg`),ia("#"+e).append("svg").attr("width",t).attr("height",n).attr("id",a).append("g").attr("transform",`translate(${r.left}, ${r.top})`)}function la(e={x:20,y:20,scaleFactor:1,diverging:!1,bubble:!1}){let t=y(1,e.x+1),n=y(1,e.y+1),r=[];return t.forEach(t=>{t="x"+t.toString(),n.forEach(n=>{n="y"+n.toString();let a=Math.random()*e.scaleFactor;a=e.diverging&&Math.random()<.5?-a:a,r.push({x:t,y:n,value:a,displayValue:parseFloat(a.toExponential()).toPrecision(3),r:e.bubble?30*Math.random():void 0})})}),r}var sa=function e(t){function n(e,n){var r,a;return e=null==e?0:+e,n=null==n?1:+n,function(){var i;if(null!=r)i=r,r=null;else do{r=2*t()-1,i=2*t()-1,a=r*r+i*i}while(!a||a>1);return e+n*i*Math.sqrt(-2*Math.log(a)/a)}}return n.source=e,n}(function(){return Math.random()}),da={value:function(){}};function ha(){for(var e,t=0,n=arguments.length,r={};t<n;++t){if(!(e=arguments[t]+"")||e in r)throw new Error("illegal type: "+e);r[e]=[]}return new ba(r)}function ba(e){this._=e}function pa(e,t){for(var n,r=0,a=e.length;r<a;++r)if((n=e[r]).name===t)return n.value}function ga(e,t,n){for(var r=0,a=e.length;r<a;++r)if(e[r].name===t){e[r]=da,e=e.slice(0,r).concat(e.slice(r+1));break}return null!=n&&e.push({name:t,value:n}),e}ba.prototype=ha.prototype={constructor:ba,on:function(e,t){var n,r,a=this._,i=(r=a,(e+"").trim().split(/^|\s+/).map(function(e){var t="",n=e.indexOf(".");if(n>=0&&(t=e.slice(n+1),e=e.slice(0,n)),e&&!r.hasOwnProperty(e))throw new Error("unknown type: "+e);return{type:e,name:t}})),f=-1,c=i.length;if(!(arguments.length<2)){if(null!=t&&"function"!=typeof t)throw new Error("invalid callback: "+t);for(;++f<c;)if(n=(e=i[f]).type)a[n]=ga(a[n],e.name,t);else if(null==t)for(n in a)a[n]=ga(a[n],e.name,null);return this}for(;++f<c;)if((n=(e=i[f]).type)&&(n=pa(a[n],e.name)))return n},copy:function(){var e={},t=this._;for(var n in t)e[n]=t[n].slice();return new ba(e)},call:function(e,t){if((n=arguments.length-2)>0)for(var n,r,a=new Array(n),i=0;i<n;++i)a[i]=arguments[i+2];if(!this._.hasOwnProperty(e))throw new Error("unknown type: "+e);for(i=0,n=(r=this._[e]).length;i<n;++i)r[i].value.apply(t,a)},apply:function(e,t,n){if(!this._.hasOwnProperty(e))throw new Error("unknown type: "+e);for(var r=this._[e],a=0,i=r.length;a<i;++a)r[a].value.apply(t,n)}};var ma,ya,va=0,wa=0,xa=0,_a=1e3,Ma=0,Sa=0,Aa=0,Ta="object"==typeof performance&&performance.now?performance:Date,Ca="object"==typeof window&&window.requestAnimationFrame?window.requestAnimationFrame.bind(window):function(e){setTimeout(e,17)};function Na(){return Sa||(Ca(ka),Sa=Ta.now()+Aa)}function ka(){Sa=0}function Ea(){this._call=this._time=this._next=null}function Da(e,t,n){var r=new Ea;return r.restart(e,t,n),r}function La(){Sa=(Ma=Ta.now())+Aa,va=wa=0;try{!function(){Na(),++va;for(var e,t=ma;t;)(e=Sa-t._time)>=0&&t._call.call(null,e),t=t._next;--va}()}finally{va=0,function(){var e,t,n=ma,r=1/0;for(;n;)n._call?(r>n._time&&(r=n._time),e=n,n=n._next):(t=n._next,n._next=null,n=e?e._next=t:ma=t);ya=e,Ua(r)}(),Sa=0}}function Pa(){var e=Ta.now(),t=e-Ma;t>_a&&(Aa-=t,Ma=e)}function Ua(e){va||(wa&&(wa=clearTimeout(wa)),e-Sa>24?(e<1/0&&(wa=setTimeout(La,e-Ta.now()-Aa)),xa&&(xa=clearInterval(xa))):(xa||(Ma=Ta.now(),xa=setInterval(Pa,_a)),va=1,Ca(La)))}Ea.prototype=Da.prototype={constructor:Ea,restart:function(e,t,n){if("function"!=typeof e)throw new TypeError("callback is not a function");n=(null==n?Na():+n)+(null==t?0:+t),this._next||ya===this||(ya?ya._next=this:ma=this,ya=this),this._call=e,this._time=n,Ua()},stop:function(){this._call&&(this._call=null,this._time=1/0,Ua())}};var $a=function(e,t,n){var r=new Ea;return t=null==t?0:+t,r.restart(function(n){r.stop(),e(n+t)},t,n),r},Ya=ha("start","end","interrupt"),Fa=[],Ba=0,Ia=1,ja=2,Oa=3,Ga=4,Ra=5,za=6,Va=function(e,t,n,r,a,i){var f=e.__transition;if(f){if(n in f)return}else e.__transition={};!function(e,t,n){var r,a=e.__transition;function i(o){var u,l,s,d;if(n.state!==Ia)return c();for(u in a)if((d=a[u]).name===n.name){if(d.state===Oa)return $a(i);d.state===Ga?(d.state=za,d.timer.stop(),d.on.call("interrupt",e,e.__data__,d.index,d.group),delete a[u]):+u<t&&(d.state=za,d.timer.stop(),delete a[u])}if($a(function(){n.state===Oa&&(n.state=Ga,n.timer.restart(f,n.delay,n.time),f(o))}),n.state=ja,n.on.call("start",e,e.__data__,n.index,n.group),n.state===ja){for(n.state=Oa,r=new Array(s=n.tween.length),u=0,l=-1;u<s;++u)(d=n.tween[u].value.call(e,e.__data__,n.index,n.group))&&(r[++l]=d);r.length=l+1}}function f(t){for(var a=t<n.duration?n.ease.call(null,t/n.duration):(n.timer.restart(c),n.state=Ra,1),i=-1,f=r.length;++i<f;)r[i].call(null,a);n.state===Ra&&(n.on.call("end",e,e.__data__,n.index,n.group),c())}function c(){for(var r in n.state=za,n.timer.stop(),delete a[t],a)return;delete e.__transition}a[t]=n,n.timer=Da(function(e){n.state=Ia,n.timer.restart(i,n.delay,n.time),n.delay<=e&&i(e-n.delay)},0,n.time)}(e,n,{name:t,index:r,group:a,on:Ya,tween:Fa,time:i.time,delay:i.delay,duration:i.duration,ease:i.ease,timer:null,state:Ba})};function Xa(e,t){var n=qa(e,t);if(n.state>Ba)throw new Error("too late; already scheduled");return n}function Ha(e,t){var n=qa(e,t);if(n.state>ja)throw new Error("too late; already started");return n}function qa(e,t){var n=e.__transition;if(!n||!(n=n[t]))throw new Error("transition not found");return n}var Qa=function(e,t){var n,r,a,i=e.__transition,f=!0;if(i){for(a in t=null==t?null:t+"",i)(n=i[a]).name===t?(r=n.state>ja&&n.state<Ra,n.state=za,n.timer.stop(),r&&n.on.call("interrupt",e,e.__data__,n.index,n.group),delete i[a]):f=!1;f&&delete e.__transition}};function Za(e,t,n){var r=e._id;return e.each(function(){var e=Ha(this,r);(e.value||(e.value={}))[t]=n.apply(this,arguments)}),function(e){return qa(e,r).value[t]}}var Wa=function(e,t){var n;return("number"==typeof t?ze:t instanceof ee?Oe:(n=ee(t))?(t=n,Oe):We)(e,t)};var Ka=aa.prototype.constructor;var Ja=0;function ei(e,t,n,r){this._groups=e,this._parents=t,this._name=n,this._id=r}function ti(){return++Ja}var ni=aa.prototype;ei.prototype=function(e){return aa().transition(e)}.prototype={constructor:ei,select:function(e){var t=this._name,n=this._id;"function"!=typeof e&&(e=xr(e));for(var r=this._groups,a=r.length,i=new Array(a),f=0;f<a;++f)for(var c,o,u=r[f],l=u.length,s=i[f]=new Array(l),d=0;d<l;++d)(c=u[d])&&(o=e.call(c,c.__data__,d,u))&&("__data__"in c&&(o.__data__=c.__data__),s[d]=o,Va(s[d],t,n,d,s,qa(c,n)));return new ei(i,this._parents,t,n)},selectAll:function(e){var t=this._name,n=this._id;"function"!=typeof e&&(e=Mr(e));for(var r=this._groups,a=r.length,i=[],f=[],c=0;c<a;++c)for(var o,u=r[c],l=u.length,s=0;s<l;++s)if(o=u[s]){for(var d,h=e.call(o,o.__data__,s,u),b=qa(o,n),p=0,g=h.length;p<g;++p)(d=h[p])&&Va(d,t,n,p,h,b);i.push(h),f.push(o)}return new ei(i,f,t,n)},filter:function(e){"function"!=typeof e&&(e=Cr(e));for(var t=this._groups,n=t.length,r=new Array(n),a=0;a<n;++a)for(var i,f=t[a],c=f.length,o=r[a]=[],u=0;u<c;++u)(i=f[u])&&e.call(i,i.__data__,u,f)&&o.push(i);return new ei(r,this._parents,this._name,this._id)},merge:function(e){if(e._id!==this._id)throw new Error;for(var t=this._groups,n=e._groups,r=t.length,a=n.length,i=Math.min(r,a),f=new Array(r),c=0;c<i;++c)for(var o,u=t[c],l=n[c],s=u.length,d=f[c]=new Array(s),h=0;h<s;++h)(o=u[h]||l[h])&&(d[h]=o);for(;c<r;++c)f[c]=t[c];return new ei(f,this._parents,this._name,this._id)},selection:function(){return new Ka(this._groups,this._parents)},transition:function(){for(var e=this._name,t=this._id,n=ti(),r=this._groups,a=r.length,i=0;i<a;++i)for(var f,c=r[i],o=c.length,u=0;u<o;++u)if(f=c[u]){var l=qa(f,t);Va(f,e,n,u,c,{time:l.time+l.delay+l.duration,delay:0,duration:l.duration,ease:l.ease})}return new ei(r,this._parents,e,n)},call:ni.call,nodes:ni.nodes,node:ni.node,size:ni.size,empty:ni.empty,each:ni.each,on:function(e,t){var n=this._id;return arguments.length<2?qa(this.node(),n).on.on(e):this.each(function(e,t,n){var r,a,i=function(e){return(e+"").trim().split(/^|\s+/).every(function(e){var t=e.indexOf(".");return t>=0&&(e=e.slice(0,t)),!e||"start"===e})}(t)?Xa:Ha;return function(){var f=i(this,e),c=f.on;c!==r&&(a=(r=c).copy()).on(t,n),f.on=a}}(n,e,t))},attr:function(e,t){var n=yr(e),r="transform"===n?it:Wa;return this.attrTween(e,"function"==typeof t?(n.local?function(e,t,n){var r,a,i;return function(){var f,c=n(this);if(null!=c)return(f=this.getAttributeNS(e.space,e.local))===c?null:f===r&&c===a?i:i=t(r=f,a=c);this.removeAttributeNS(e.space,e.local)}}:function(e,t,n){var r,a,i;return function(){var f,c=n(this);if(null!=c)return(f=this.getAttribute(e))===c?null:f===r&&c===a?i:i=t(r=f,a=c);this.removeAttribute(e)}})(n,r,Za(this,"attr."+e,t)):null==t?(n.local?function(e){return function(){this.removeAttributeNS(e.space,e.local)}}:function(e){return function(){this.removeAttribute(e)}})(n):(n.local?function(e,t,n){var r,a;return function(){var i=this.getAttributeNS(e.space,e.local);return i===n?null:i===r?a:a=t(r=i,n)}}:function(e,t,n){var r,a;return function(){var i=this.getAttribute(e);return i===n?null:i===r?a:a=t(r=i,n)}})(n,r,t+""))},attrTween:function(e,t){var n="attr."+e;if(arguments.length<2)return(n=this.tween(n))&&n._value;if(null==t)return this.tween(n,null);if("function"!=typeof t)throw new Error;var r=yr(e);return this.tween(n,(r.local?function(e,t){function n(){var n=this,r=t.apply(n,arguments);return r&&function(t){n.setAttributeNS(e.space,e.local,r(t))}}return n._value=t,n}:function(e,t){function n(){var n=this,r=t.apply(n,arguments);return r&&function(t){n.setAttribute(e,r(t))}}return n._value=t,n})(r,t))},style:function(e,t,n){var r="transform"==(e+="")?at:Wa;return null==t?this.styleTween(e,function(e,t){var n,r,a;return function(){var i=$r(this,e),f=(this.style.removeProperty(e),$r(this,e));return i===f?null:i===n&&f===r?a:a=t(n=i,r=f)}}(e,r)).on("end.style."+e,function(e){return function(){this.style.removeProperty(e)}}(e)):this.styleTween(e,"function"==typeof t?function(e,t,n){var r,a,i;return function(){var f=$r(this,e),c=n(this);return null==c&&(this.style.removeProperty(e),c=$r(this,e)),f===c?null:f===r&&c===a?i:i=t(r=f,a=c)}}(e,r,Za(this,"style."+e,t)):function(e,t,n){var r,a;return function(){var i=$r(this,e);return i===n?null:i===r?a:a=t(r=i,n)}}(e,r,t+""),n)},styleTween:function(e,t,n){var r="style."+(e+="");if(arguments.length<2)return(r=this.tween(r))&&r._value;if(null==t)return this.tween(r,null);if("function"!=typeof t)throw new Error;return this.tween(r,function(e,t,n){function r(){var r=this,a=t.apply(r,arguments);return a&&function(t){r.style.setProperty(e,a(t),n)}}return r._value=t,r}(e,t,null==n?"":n))},text:function(e){return this.tween("text","function"==typeof e?function(e){return function(){var t=e(this);this.textContent=null==t?"":t}}(Za(this,"text",e)):function(e){return function(){this.textContent=e}}(null==e?"":e+""))},remove:function(){return this.on("end.remove",(e=this._id,function(){var t=this.parentNode;for(var n in this.__transition)if(+n!==e)return;t&&t.removeChild(this)}));var e},tween:function(e,t){var n=this._id;if(e+="",arguments.length<2){for(var r,a=qa(this.node(),n).tween,i=0,f=a.length;i<f;++i)if((r=a[i]).name===e)return r.value;return null}return this.each((null==t?function(e,t){var n,r;return function(){var a=Ha(this,e),i=a.tween;if(i!==n)for(var f=0,c=(r=n=i).length;f<c;++f)if(r[f].name===t){(r=r.slice()).splice(f,1);break}a.tween=r}}:function(e,t,n){var r,a;if("function"!=typeof n)throw new Error;return function(){var i=Ha(this,e),f=i.tween;if(f!==r){a=(r=f).slice();for(var c={name:t,value:n},o=0,u=a.length;o<u;++o)if(a[o].name===t){a[o]=c;break}o===u&&a.push(c)}i.tween=a}})(n,e,t))},delay:function(e){var t=this._id;return arguments.length?this.each(("function"==typeof e?function(e,t){return function(){Xa(this,e).delay=+t.apply(this,arguments)}}:function(e,t){return t=+t,function(){Xa(this,e).delay=t}})(t,e)):qa(this.node(),t).delay},duration:function(e){var t=this._id;return arguments.length?this.each(("function"==typeof e?function(e,t){return function(){Ha(this,e).duration=+t.apply(this,arguments)}}:function(e,t){return t=+t,function(){Ha(this,e).duration=t}})(t,e)):qa(this.node(),t).duration},ease:function(e){var t=this._id;return arguments.length?this.each(function(e,t){if("function"!=typeof t)throw new Error;return function(){Ha(this,e).ease=t}}(t,e)):qa(this.node(),t).ease}};var ri={time:null,delay:0,duration:250,ease:function(e){return((e*=2)<=1?e*e*e:(e-=2)*e*e+2)/2}};function ai(e,t){for(var n;!(n=e.__transition)||!(n=n[t]);)if(!(e=e.parentNode))return ri.time=Na(),ri;return n}aa.prototype.interrupt=function(e){return this.each(function(){Qa(this,e)})},aa.prototype.transition=function(e){var t,n;e instanceof ei?(t=e._id,e=e._name):(t=ti(),(n=ri).time=Na(),e=null==e?null:e+"");for(var r=this._groups,a=r.length,i=0;i<a;++i)for(var f,c=r[i],o=c.length,u=0;u<o;++u)(f=c[u])&&Va(f,e,t,u,c,n||ai(f,t));return new ei(r,this._parents,e,t)};var ii=function(e){for(var t=e.length/6|0,n=new Array(t),r=0;r<t;)n[r]="#"+e.slice(6*r,6*++r);return n};ii("1f77b4ff7f0e2ca02cd627289467bd8c564be377c27f7f7fbcbd2217becf"),ii("7fc97fbeaed4fdc086ffff99386cb0f0027fbf5b17666666"),ii("1b9e77d95f027570b3e7298a66a61ee6ab02a6761d666666"),ii("a6cee31f78b4b2df8a33a02cfb9a99e31a1cfdbf6fff7f00cab2d66a3d9affff99b15928"),ii("fbb4aeb3cde3ccebc5decbe4fed9a6ffffcce5d8bdfddaecf2f2f2"),ii("b3e2cdfdcdaccbd5e8f4cae4e6f5c9fff2aef1e2cccccccc"),ii("e41a1c377eb84daf4a984ea3ff7f00ffff33a65628f781bf999999"),ii("66c2a5fc8d628da0cbe78ac3a6d854ffd92fe5c494b3b3b3"),ii("8dd3c7ffffb3bebadafb807280b1d3fdb462b3de69fccde5d9d9d9bc80bdccebc5ffed6f");var fi=function(e){return Re(e[e.length-1])};fi(new Array(3).concat("d8b365f5f5f55ab4ac","a6611adfc27d80cdc1018571","a6611adfc27df5f5f580cdc1018571","8c510ad8b365f6e8c3c7eae55ab4ac01665e","8c510ad8b365f6e8c3f5f5f5c7eae55ab4ac01665e","8c510abf812ddfc27df6e8c3c7eae580cdc135978f01665e","8c510abf812ddfc27df6e8c3f5f5f5c7eae580cdc135978f01665e","5430058c510abf812ddfc27df6e8c3c7eae580cdc135978f01665e003c30","5430058c510abf812ddfc27df6e8c3f5f5f5c7eae580cdc135978f01665e003c30").map(ii)),fi(new Array(3).concat("af8dc3f7f7f77fbf7b","7b3294c2a5cfa6dba0008837","7b3294c2a5cff7f7f7a6dba0008837","762a83af8dc3e7d4e8d9f0d37fbf7b1b7837","762a83af8dc3e7d4e8f7f7f7d9f0d37fbf7b1b7837","762a839970abc2a5cfe7d4e8d9f0d3a6dba05aae611b7837","762a839970abc2a5cfe7d4e8f7f7f7d9f0d3a6dba05aae611b7837","40004b762a839970abc2a5cfe7d4e8d9f0d3a6dba05aae611b783700441b","40004b762a839970abc2a5cfe7d4e8f7f7f7d9f0d3a6dba05aae611b783700441b").map(ii));var ci=fi(new Array(3).concat("e9a3c9f7f7f7a1d76a","d01c8bf1b6dab8e1864dac26","d01c8bf1b6daf7f7f7b8e1864dac26","c51b7de9a3c9fde0efe6f5d0a1d76a4d9221","c51b7de9a3c9fde0eff7f7f7e6f5d0a1d76a4d9221","c51b7dde77aef1b6dafde0efe6f5d0b8e1867fbc414d9221","c51b7dde77aef1b6dafde0eff7f7f7e6f5d0b8e1867fbc414d9221","8e0152c51b7dde77aef1b6dafde0efe6f5d0b8e1867fbc414d9221276419","8e0152c51b7dde77aef1b6dafde0eff7f7f7e6f5d0b8e1867fbc414d9221276419").map(ii)),oi=fi(new Array(3).concat("998ec3f7f7f7f1a340","5e3c99b2abd2fdb863e66101","5e3c99b2abd2f7f7f7fdb863e66101","542788998ec3d8daebfee0b6f1a340b35806","542788998ec3d8daebf7f7f7fee0b6f1a340b35806","5427888073acb2abd2d8daebfee0b6fdb863e08214b35806","5427888073acb2abd2d8daebf7f7f7fee0b6fdb863e08214b35806","2d004b5427888073acb2abd2d8daebfee0b6fdb863e08214b358067f3b08","2d004b5427888073acb2abd2d8daebf7f7f7fee0b6fdb863e08214b358067f3b08").map(ii)),ui=fi(new Array(3).concat("ef8a62f7f7f767a9cf","ca0020f4a58292c5de0571b0","ca0020f4a582f7f7f792c5de0571b0","b2182bef8a62fddbc7d1e5f067a9cf2166ac","b2182bef8a62fddbc7f7f7f7d1e5f067a9cf2166ac","b2182bd6604df4a582fddbc7d1e5f092c5de4393c32166ac","b2182bd6604df4a582fddbc7f7f7f7d1e5f092c5de4393c32166ac","67001fb2182bd6604df4a582fddbc7d1e5f092c5de4393c32166ac053061","67001fb2182bd6604df4a582fddbc7f7f7f7d1e5f092c5de4393c32166ac053061").map(ii)),li=fi(new Array(3).concat("ef8a62ffffff999999","ca0020f4a582bababa404040","ca0020f4a582ffffffbababa404040","b2182bef8a62fddbc7e0e0e09999994d4d4d","b2182bef8a62fddbc7ffffffe0e0e09999994d4d4d","b2182bd6604df4a582fddbc7e0e0e0bababa8787874d4d4d","b2182bd6604df4a582fddbc7ffffffe0e0e0bababa8787874d4d4d","67001fb2182bd6604df4a582fddbc7e0e0e0bababa8787874d4d4d1a1a1a","67001fb2182bd6604df4a582fddbc7ffffffe0e0e0bababa8787874d4d4d1a1a1a").map(ii)),si=fi(new Array(3).concat("fc8d59ffffbf91bfdb","d7191cfdae61abd9e92c7bb6","d7191cfdae61ffffbfabd9e92c7bb6","d73027fc8d59fee090e0f3f891bfdb4575b4","d73027fc8d59fee090ffffbfe0f3f891bfdb4575b4","d73027f46d43fdae61fee090e0f3f8abd9e974add14575b4","d73027f46d43fdae61fee090ffffbfe0f3f8abd9e974add14575b4","a50026d73027f46d43fdae61fee090e0f3f8abd9e974add14575b4313695","a50026d73027f46d43fdae61fee090ffffbfe0f3f8abd9e974add14575b4313695").map(ii));fi(new Array(3).concat("fc8d59ffffbf91cf60","d7191cfdae61a6d96a1a9641","d7191cfdae61ffffbfa6d96a1a9641","d73027fc8d59fee08bd9ef8b91cf601a9850","d73027fc8d59fee08bffffbfd9ef8b91cf601a9850","d73027f46d43fdae61fee08bd9ef8ba6d96a66bd631a9850","d73027f46d43fdae61fee08bffffbfd9ef8ba6d96a66bd631a9850","a50026d73027f46d43fdae61fee08bd9ef8ba6d96a66bd631a9850006837","a50026d73027f46d43fdae61fee08bffffbfd9ef8ba6d96a66bd631a9850006837").map(ii)),fi(new Array(3).concat("fc8d59ffffbf99d594","d7191cfdae61abdda42b83ba","d7191cfdae61ffffbfabdda42b83ba","d53e4ffc8d59fee08be6f59899d5943288bd","d53e4ffc8d59fee08bffffbfe6f59899d5943288bd","d53e4ff46d43fdae61fee08be6f598abdda466c2a53288bd","d53e4ff46d43fdae61fee08bffffbfe6f598abdda466c2a53288bd","9e0142d53e4ff46d43fdae61fee08be6f598abdda466c2a53288bd5e4fa2","9e0142d53e4ff46d43fdae61fee08bffffbfe6f598abdda466c2a53288bd5e4fa2").map(ii));var di=fi(new Array(3).concat("e5f5f999d8c92ca25f","edf8fbb2e2e266c2a4238b45","edf8fbb2e2e266c2a42ca25f006d2c","edf8fbccece699d8c966c2a42ca25f006d2c","edf8fbccece699d8c966c2a441ae76238b45005824","f7fcfde5f5f9ccece699d8c966c2a441ae76238b45005824","f7fcfde5f5f9ccece699d8c966c2a441ae76238b45006d2c00441b").map(ii));fi(new Array(3).concat("e0ecf49ebcda8856a7","edf8fbb3cde38c96c688419d","edf8fbb3cde38c96c68856a7810f7c","edf8fbbfd3e69ebcda8c96c68856a7810f7c","edf8fbbfd3e69ebcda8c96c68c6bb188419d6e016b","f7fcfde0ecf4bfd3e69ebcda8c96c68c6bb188419d6e016b","f7fcfde0ecf4bfd3e69ebcda8c96c68c6bb188419d810f7c4d004b").map(ii)),fi(new Array(3).concat("e0f3dba8ddb543a2ca","f0f9e8bae4bc7bccc42b8cbe","f0f9e8bae4bc7bccc443a2ca0868ac","f0f9e8ccebc5a8ddb57bccc443a2ca0868ac","f0f9e8ccebc5a8ddb57bccc44eb3d32b8cbe08589e","f7fcf0e0f3dbccebc5a8ddb57bccc44eb3d32b8cbe08589e","f7fcf0e0f3dbccebc5a8ddb57bccc44eb3d32b8cbe0868ac084081").map(ii));var hi=fi(new Array(3).concat("fee8c8fdbb84e34a33","fef0d9fdcc8afc8d59d7301f","fef0d9fdcc8afc8d59e34a33b30000","fef0d9fdd49efdbb84fc8d59e34a33b30000","fef0d9fdd49efdbb84fc8d59ef6548d7301f990000","fff7ecfee8c8fdd49efdbb84fc8d59ef6548d7301f990000","fff7ecfee8c8fdd49efdbb84fc8d59ef6548d7301fb300007f0000").map(ii));fi(new Array(3).concat("ece2f0a6bddb1c9099","f6eff7bdc9e167a9cf02818a","f6eff7bdc9e167a9cf1c9099016c59","f6eff7d0d1e6a6bddb67a9cf1c9099016c59","f6eff7d0d1e6a6bddb67a9cf3690c002818a016450","fff7fbece2f0d0d1e6a6bddb67a9cf3690c002818a016450","fff7fbece2f0d0d1e6a6bddb67a9cf3690c002818a016c59014636").map(ii));var bi=fi(new Array(3).concat("ece7f2a6bddb2b8cbe","f1eef6bdc9e174a9cf0570b0","f1eef6bdc9e174a9cf2b8cbe045a8d","f1eef6d0d1e6a6bddb74a9cf2b8cbe045a8d","f1eef6d0d1e6a6bddb74a9cf3690c00570b0034e7b","fff7fbece7f2d0d1e6a6bddb74a9cf3690c00570b0034e7b","fff7fbece7f2d0d1e6a6bddb74a9cf3690c00570b0045a8d023858").map(ii));fi(new Array(3).concat("e7e1efc994c7dd1c77","f1eef6d7b5d8df65b0ce1256","f1eef6d7b5d8df65b0dd1c77980043","f1eef6d4b9dac994c7df65b0dd1c77980043","f1eef6d4b9dac994c7df65b0e7298ace125691003f","f7f4f9e7e1efd4b9dac994c7df65b0e7298ace125691003f","f7f4f9e7e1efd4b9dac994c7df65b0e7298ace125698004367001f").map(ii)),fi(new Array(3).concat("fde0ddfa9fb5c51b8a","feebe2fbb4b9f768a1ae017e","feebe2fbb4b9f768a1c51b8a7a0177","feebe2fcc5c0fa9fb5f768a1c51b8a7a0177","feebe2fcc5c0fa9fb5f768a1dd3497ae017e7a0177","fff7f3fde0ddfcc5c0fa9fb5f768a1dd3497ae017e7a0177","fff7f3fde0ddfcc5c0fa9fb5f768a1dd3497ae017e7a017749006a").map(ii));var pi=fi(new Array(3).concat("edf8b17fcdbb2c7fb8","ffffcca1dab441b6c4225ea8","ffffcca1dab441b6c42c7fb8253494","ffffccc7e9b47fcdbb41b6c42c7fb8253494","ffffccc7e9b47fcdbb41b6c41d91c0225ea80c2c84","ffffd9edf8b1c7e9b47fcdbb41b6c41d91c0225ea80c2c84","ffffd9edf8b1c7e9b47fcdbb41b6c41d91c0225ea8253494081d58").map(ii));fi(new Array(3).concat("f7fcb9addd8e31a354","ffffccc2e69978c679238443","ffffccc2e69978c67931a354006837","ffffccd9f0a3addd8e78c67931a354006837","ffffccd9f0a3addd8e78c67941ab5d238443005a32","ffffe5f7fcb9d9f0a3addd8e78c67941ab5d238443005a32","ffffe5f7fcb9d9f0a3addd8e78c67941ab5d238443006837004529").map(ii)),fi(new Array(3).concat("fff7bcfec44fd95f0e","ffffd4fed98efe9929cc4c02","ffffd4fed98efe9929d95f0e993404","ffffd4fee391fec44ffe9929d95f0e993404","ffffd4fee391fec44ffe9929ec7014cc4c028c2d04","ffffe5fff7bcfee391fec44ffe9929ec7014cc4c028c2d04","ffffe5fff7bcfee391fec44ffe9929ec7014cc4c02993404662506").map(ii)),fi(new Array(3).concat("ffeda0feb24cf03b20","ffffb2fecc5cfd8d3ce31a1c","ffffb2fecc5cfd8d3cf03b20bd0026","ffffb2fed976feb24cfd8d3cf03b20bd0026","ffffb2fed976feb24cfd8d3cfc4e2ae31a1cb10026","ffffccffeda0fed976feb24cfd8d3cfc4e2ae31a1cb10026","ffffccffeda0fed976feb24cfd8d3cfc4e2ae31a1cbd0026800026").map(ii));var gi=fi(new Array(3).concat("deebf79ecae13182bd","eff3ffbdd7e76baed62171b5","eff3ffbdd7e76baed63182bd08519c","eff3ffc6dbef9ecae16baed63182bd08519c","eff3ffc6dbef9ecae16baed64292c62171b5084594","f7fbffdeebf7c6dbef9ecae16baed64292c62171b5084594","f7fbffdeebf7c6dbef9ecae16baed64292c62171b508519c08306b").map(ii)),mi=fi(new Array(3).concat("e5f5e0a1d99b31a354","edf8e9bae4b374c476238b45","edf8e9bae4b374c47631a354006d2c","edf8e9c7e9c0a1d99b74c47631a354006d2c","edf8e9c7e9c0a1d99b74c47641ab5d238b45005a32","f7fcf5e5f5e0c7e9c0a1d99b74c47641ab5d238b45005a32","f7fcf5e5f5e0c7e9c0a1d99b74c47641ab5d238b45006d2c00441b").map(ii)),yi=fi(new Array(3).concat("f0f0f0bdbdbd636363","f7f7f7cccccc969696525252","f7f7f7cccccc969696636363252525","f7f7f7d9d9d9bdbdbd969696636363252525","f7f7f7d9d9d9bdbdbd969696737373525252252525","fffffff0f0f0d9d9d9bdbdbd969696737373525252252525","fffffff0f0f0d9d9d9bdbdbd969696737373525252252525000000").map(ii)),vi=fi(new Array(3).concat("efedf5bcbddc756bb1","f2f0f7cbc9e29e9ac86a51a3","f2f0f7cbc9e29e9ac8756bb154278f","f2f0f7dadaebbcbddc9e9ac8756bb154278f","f2f0f7dadaebbcbddc9e9ac8807dba6a51a34a1486","fcfbfdefedf5dadaebbcbddc9e9ac8807dba6a51a34a1486","fcfbfdefedf5dadaebbcbddc9e9ac8807dba6a51a354278f3f007d").map(ii)),wi=fi(new Array(3).concat("fee0d2fc9272de2d26","fee5d9fcae91fb6a4acb181d","fee5d9fcae91fb6a4ade2d26a50f15","fee5d9fcbba1fc9272fb6a4ade2d26a50f15","fee5d9fcbba1fc9272fb6a4aef3b2ccb181d99000d","fff5f0fee0d2fcbba1fc9272fb6a4aef3b2ccb181d99000d","fff5f0fee0d2fcbba1fc9272fb6a4aef3b2ccb181da50f1567000d").map(ii)),xi=fi(new Array(3).concat("fee6cefdae6be6550d","feeddefdbe85fd8d3cd94701","feeddefdbe85fd8d3ce6550da63603","feeddefdd0a2fdae6bfd8d3ce6550da63603","feeddefdd0a2fdae6bfd8d3cf16913d948018c2d04","fff5ebfee6cefdd0a2fdae6bfd8d3cf16913d948018c2d04","fff5ebfee6cefdd0a2fdae6bfd8d3cf16913d94801a636037f2704").map(ii));ct(Ue(300,.5,0),Ue(-240,.5,1));ct(Ue(-100,.75,.35),Ue(80,1.5,.8)),ct(Ue(260,.75,.35),Ue(80,1.5,.8)),Ue(),ae();function _i(e){var t=e.length;return function(n){return e[Math.max(0,Math.min(t-1,Math.floor(n*t)))]}}_i(ii("44015444025645045745055946075a46085c460a5d460b5e470d60470e6147106347116447136548146748166848176948186a481a6c481b6d481c6e481d6f481f70482071482173482374482475482576482677482878482979472a7a472c7a472d7b472e7c472f7d46307e46327e46337f463480453581453781453882443983443a83443b84433d84433e85423f854240864241864142874144874045884046883f47883f48893e49893e4a893e4c8a3d4d8a3d4e8a3c4f8a3c508b3b518b3b528b3a538b3a548c39558c39568c38588c38598c375a8c375b8d365c8d365d8d355e8d355f8d34608d34618d33628d33638d32648e32658e31668e31678e31688e30698e306a8e2f6b8e2f6c8e2e6d8e2e6e8e2e6f8e2d708e2d718e2c718e2c728e2c738e2b748e2b758e2a768e2a778e2a788e29798e297a8e297b8e287c8e287d8e277e8e277f8e27808e26818e26828e26828e25838e25848e25858e24868e24878e23888e23898e238a8d228b8d228c8d228d8d218e8d218f8d21908d21918c20928c20928c20938c1f948c1f958b1f968b1f978b1f988b1f998a1f9a8a1e9b8a1e9c891e9d891f9e891f9f881fa0881fa1881fa1871fa28720a38620a48621a58521a68522a78522a88423a98324aa8325ab8225ac8226ad8127ad8128ae8029af7f2ab07f2cb17e2db27d2eb37c2fb47c31b57b32b67a34b67935b77937b87838b9773aba763bbb753dbc743fbc7340bd7242be7144bf7046c06f48c16e4ac16d4cc26c4ec36b50c46a52c56954c56856c66758c7655ac8645cc8635ec96260ca6063cb5f65cb5e67cc5c69cd5b6ccd5a6ece5870cf5773d05675d05477d1537ad1517cd2507fd34e81d34d84d44b86d54989d5488bd6468ed64590d74393d74195d84098d83e9bd93c9dd93ba0da39a2da37a5db36a8db34aadc32addc30b0dd2fb2dd2db5de2bb8de29bade28bddf26c0df25c2df23c5e021c8e020cae11fcde11dd0e11cd2e21bd5e21ad8e219dae319dde318dfe318e2e418e5e419e7e419eae51aece51befe51cf1e51df4e61ef6e620f8e621fbe723fde725"));_i(ii("00000401000501010601010802010902020b02020d03030f03031204041405041606051806051a07061c08071e0907200a08220b09240c09260d0a290e0b2b100b2d110c2f120d31130d34140e36150e38160f3b180f3d19103f1a10421c10441d11471e114920114b21114e22115024125325125527125829115a2a115c2c115f2d11612f116331116533106734106936106b38106c390f6e3b0f703d0f713f0f72400f74420f75440f764510774710784910784a10794c117a4e117b4f127b51127c52137c54137d56147d57157e59157e5a167e5c167f5d177f5f187f601880621980641a80651a80671b80681c816a1c816b1d816d1d816e1e81701f81721f817320817521817621817822817922827b23827c23827e24828025828125818326818426818627818827818928818b29818c29818e2a81902a81912b81932b80942c80962c80982d80992d809b2e7f9c2e7f9e2f7fa02f7fa1307ea3307ea5317ea6317da8327daa337dab337cad347cae347bb0357bb2357bb3367ab5367ab73779b83779ba3878bc3978bd3977bf3a77c03a76c23b75c43c75c53c74c73d73c83e73ca3e72cc3f71cd4071cf4070d0416fd2426fd3436ed5446dd6456cd8456cd9466bdb476adc4869de4968df4a68e04c67e24d66e34e65e44f64e55064e75263e85362e95462ea5661eb5760ec5860ed5a5fee5b5eef5d5ef05f5ef1605df2625df2645cf3655cf4675cf4695cf56b5cf66c5cf66e5cf7705cf7725cf8745cf8765cf9785df9795df97b5dfa7d5efa7f5efa815ffb835ffb8560fb8761fc8961fc8a62fc8c63fc8e64fc9065fd9266fd9467fd9668fd9869fd9a6afd9b6bfe9d6cfe9f6dfea16efea36ffea571fea772fea973feaa74feac76feae77feb078feb27afeb47bfeb67cfeb77efeb97ffebb81febd82febf84fec185fec287fec488fec68afec88cfeca8dfecc8ffecd90fecf92fed194fed395fed597fed799fed89afdda9cfddc9efddea0fde0a1fde2a3fde3a5fde5a7fde7a9fde9aafdebacfcecaefceeb0fcf0b2fcf2b4fcf4b6fcf6b8fcf7b9fcf9bbfcfbbdfcfdbf")),_i(ii("00000401000501010601010802010a02020c02020e03021004031204031405041706041907051b08051d09061f0a07220b07240c08260d08290e092b10092d110a30120a32140b34150b37160b39180c3c190c3e1b0c411c0c431e0c451f0c48210c4a230c4c240c4f260c51280b53290b552b0b572d0b592f0a5b310a5c320a5e340a5f3609613809623909633b09643d09653e0966400a67420a68440a68450a69470b6a490b6a4a0c6b4c0c6b4d0d6c4f0d6c510e6c520e6d540f6d550f6d57106e59106e5a116e5c126e5d126e5f136e61136e62146e64156e65156e67166e69166e6a176e6c186e6d186e6f196e71196e721a6e741a6e751b6e771c6d781c6d7a1d6d7c1d6d7d1e6d7f1e6c801f6c82206c84206b85216b87216b88226a8a226a8c23698d23698f24699025689225689326679526679727669827669a28659b29649d29649f2a63a02a63a22b62a32c61a52c60a62d60a82e5fa92e5eab2f5ead305dae305cb0315bb1325ab3325ab43359b63458b73557b93556ba3655bc3754bd3853bf3952c03a51c13a50c33b4fc43c4ec63d4dc73e4cc83f4bca404acb4149cc4248ce4347cf4446d04545d24644d34743d44842d54a41d74b3fd84c3ed94d3dda4e3cdb503bdd513ade5238df5337e05536e15635e25734e35933e45a31e55c30e65d2fe75e2ee8602de9612bea632aeb6429eb6628ec6726ed6925ee6a24ef6c23ef6e21f06f20f1711ff1731df2741cf3761bf37819f47918f57b17f57d15f67e14f68013f78212f78410f8850ff8870ef8890cf98b0bf98c0af98e09fa9008fa9207fa9407fb9606fb9706fb9906fb9b06fb9d07fc9f07fca108fca309fca50afca60cfca80dfcaa0ffcac11fcae12fcb014fcb216fcb418fbb61afbb81dfbba1ffbbc21fbbe23fac026fac228fac42afac62df9c72ff9c932f9cb35f8cd37f8cf3af7d13df7d340f6d543f6d746f5d949f5db4cf4dd4ff4df53f4e156f3e35af3e55df2e661f2e865f2ea69f1ec6df1ed71f1ef75f1f179f2f27df2f482f3f586f3f68af4f88ef5f992f6fa96f8fb9af9fc9dfafda1fcffa4")),_i(ii("0d088710078813078916078a19068c1b068d1d068e20068f2206902406912605912805922a05932c05942e05952f059631059733059735049837049938049a3a049a3c049b3e049c3f049c41049d43039e44039e46039f48039f4903a04b03a14c02a14e02a25002a25102a35302a35502a45601a45801a45901a55b01a55c01a65e01a66001a66100a76300a76400a76600a76700a86900a86a00a86c00a86e00a86f00a87100a87201a87401a87501a87701a87801a87a02a87b02a87d03a87e03a88004a88104a78305a78405a78606a68707a68808a68a09a58b0aa58d0ba58e0ca48f0da4910ea3920fa39410a29511a19613a19814a099159f9a169f9c179e9d189d9e199da01a9ca11b9ba21d9aa31e9aa51f99a62098a72197a82296aa2395ab2494ac2694ad2793ae2892b02991b12a90b22b8fb32c8eb42e8db52f8cb6308bb7318ab83289ba3388bb3488bc3587bd3786be3885bf3984c03a83c13b82c23c81c33d80c43e7fc5407ec6417dc7427cc8437bc9447aca457acb4679cc4778cc4977cd4a76ce4b75cf4c74d04d73d14e72d24f71d35171d45270d5536fd5546ed6556dd7566cd8576bd9586ada5a6ada5b69db5c68dc5d67dd5e66de5f65de6164df6263e06363e16462e26561e26660e3685fe4695ee56a5de56b5de66c5ce76e5be76f5ae87059e97158e97257ea7457eb7556eb7655ec7754ed7953ed7a52ee7b51ef7c51ef7e50f07f4ff0804ef1814df1834cf2844bf3854bf3874af48849f48948f58b47f58c46f68d45f68f44f79044f79143f79342f89441f89540f9973ff9983ef99a3efa9b3dfa9c3cfa9e3bfb9f3afba139fba238fca338fca537fca636fca835fca934fdab33fdac33fdae32fdaf31fdb130fdb22ffdb42ffdb52efeb72dfeb82cfeba2cfebb2bfebd2afebe2afec029fdc229fdc328fdc527fdc627fdc827fdca26fdcb26fccd25fcce25fcd025fcd225fbd324fbd524fbd724fad824fada24f9dc24f9dd25f8df25f8e125f7e225f7e425f6e626f6e826f5e926f5eb27f4ed27f3ee27f3f027f2f227f1f426f1f525f0f724f0f921"));function Mi(e,t="YlGnBu",n,r,a=!1){r=void 0===r?S(e):r,n=void 0===n?A(e):n;const i=function e(t){var n=0,r=1,a=1,i=!1;function f(e){var r=(e-n)*a;return t(i?Math.max(0,Math.min(1,r)):r)}return f.domain=function(e){return arguments.length?(n=+e[0],r=+e[1],a=n===r?0:1/(r-n),f):[n,r]},f.clamp=function(e){return arguments.length?(i=!!e,f):i},f.interpolator=function(e){return arguments.length?(t=e,f):t},f.copy=function(){return e(t).domain([n,r]).clamp(i)},Dt(f)}(function(e){const t={BuGn:di,OrRd:hi,PuBu:bi,YlGnBu:pi,Blues:gi,Oranges:xi,Greens:mi,Purples:vi,Reds:wi,Greys:yi,Grays:yi,RdBu:ui,RdGy:li,PiYG:ci,PuOr:oi,RdYlBu:si};if(!t.hasOwnProperty(e)){const t="Unrecognized color: "+e;throw alert(t),t}return t[e]}(t));return a?i.domain([r,n]):i.domain([n,r]),i}class Si{constructor(e,t=!1,n=30,r=-40,a=100){this.id=e,this.verbose=t,this.offsetX=n,this.offsetY=r,this.duration=a}show(e){this.verbose&&console.log(e),this.edit(e),this.move(),ia("#"+this.id).style("display","inline").transition().duration(this.duration).style("opacity",1)}hide(){ia("#"+this.id).transition().duration(this.duration).style("opacity",0),this.edit("")}move(e=Zr.pageX,t=Zr.pageY){this.verbose&&(console.log(e),console.log(t)),e+=this.offsetX,t=t+this.offsetY<0?10:t+this.offsetY;ia("#"+this.id).style("left",`${e}px`).style("top",`${t}px`)}edit(e){ia("#"+this.id).html(e)}}function Ai(e){return e<0?-1:1}function Ti(e,t,n){var r=e._x1-e._x0,a=t-e._x1,i=(e._y1-e._y0)/(r||a<0&&-0),f=(n-e._y1)/(a||r<0&&-0),c=(i*a+f*r)/(r+a);return(Ai(i)+Ai(f))*Math.min(Math.abs(i),Math.abs(f),.5*Math.abs(c))||0}function Ci(e,t){var n=e._x1-e._x0;return n?(3*(e._y1-e._y0)/n-t)/2:t}function Ni(e,t,n){var r=e._x0,a=e._y0,i=e._x1,f=e._y1,c=(i-r)/3;e._context.bezierCurveTo(r+c,a+c*t,i-c,f-c*n,i,f)}function ki(e){this._context=e}function Ei(e){this._context=e}ki.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._x0=this._x1=this._y0=this._y1=this._t0=NaN,this._point=0},lineEnd:function(){switch(this._point){case 2:this._context.lineTo(this._x1,this._y1);break;case 3:Ni(this,this._t0,Ci(this,this._t0))}(this._line||0!==this._line&&1===this._point)&&this._context.closePath(),this._line=1-this._line},point:function(e,t){var n=NaN;if(t=+t,(e=+e)!==this._x1||t!==this._y1){switch(this._point){case 0:this._point=1,this._line?this._context.lineTo(e,t):this._context.moveTo(e,t);break;case 1:this._point=2;break;case 2:this._point=3,Ni(this,Ci(this,n=Ti(this,e,t)),n);break;default:Ni(this,this._t0,n=Ti(this,e,t))}this._x0=this._x1,this._x1=e,this._y0=this._y1,this._y1=t,this._t0=n}}},(function(e){this._context=new Ei(e)}.prototype=Object.create(ki.prototype)).point=function(e,t){ki.prototype.point.call(this,t,e)},Ei.prototype={moveTo:function(e,t){this._context.moveTo(t,e)},closePath:function(){this._context.closePath()},lineTo:function(e,t){this._context.lineTo(t,e)},bezierCurveTo:function(e,t,n,r,a,i){this._context.bezierCurveTo(t,e,r,n,i,a)}};var Di=function(){Zr.preventDefault(),Zr.stopImmediatePropagation()},Li=function(e){var t=e.document.documentElement,n=ia(e).on("dragstart.drag",Di,!0);"onselectstart"in t?n.on("selectstart.drag",Di,!0):(t.__noselect=t.style.MozUserSelect,t.style.MozUserSelect="none")};var Pi=function(e){return function(){return e}},Ui=function(e,t,n){this.target=e,this.type=t,this.selection=n};function $i(){Zr.stopImmediatePropagation()}var Yi=function(){Zr.preventDefault(),Zr.stopImmediatePropagation()},Fi={name:"drag"},Bi={name:"space"},Ii={name:"handle"},ji={name:"center"},Oi={name:"x",handles:["e","w"].map(qi),input:function(e,t){return e&&[[e[0],t[0][1]],[e[1],t[1][1]]]},output:function(e){return e&&[e[0][0],e[1][0]]}},Gi={name:"y",handles:["n","s"].map(qi),input:function(e,t){return e&&[[t[0][0],e[0]],[t[1][0],e[1]]]},output:function(e){return e&&[e[0][1],e[1][1]]}},Ri=(["n","e","s","w","nw","ne","se","sw"].map(qi),{overlay:"crosshair",selection:"move",n:"ns-resize",e:"ew-resize",s:"ns-resize",w:"ew-resize",nw:"nwse-resize",ne:"nesw-resize",se:"nwse-resize",sw:"nesw-resize"}),zi={e:"w",w:"e",nw:"ne",ne:"nw",se:"sw",sw:"se"},Vi={n:"s",s:"n",nw:"sw",ne:"se",se:"ne",sw:"nw"},Xi={overlay:1,selection:1,n:null,e:1,s:null,w:-1,nw:-1,ne:1,se:1,sw:-1},Hi={overlay:1,selection:1,n:-1,e:null,s:1,w:null,nw:-1,ne:-1,se:1,sw:1};function qi(e){return{type:e}}function Qi(){return!Zr.button}function Zi(){var e=this.ownerSVGElement||this;return[[0,0],[e.width.baseVal.value,e.height.baseVal.value]]}function Wi(e){for(;!e.__brush;)if(!(e=e.parentNode))return;return e.__brush}function Ki(e){return e[0][0]===e[1][0]||e[0][1]===e[1][1]}function Ji(){return function(e){var t,n=Zi,r=Qi,a=ha(f,"start","brush","end"),i=6;function f(t){var n=t.property("__brush",s).selectAll(".overlay").data([qi("overlay")]);n.enter().append("rect").attr("class","overlay").attr("pointer-events","all").attr("cursor",Ri.overlay).merge(n).each(function(){var e=Wi(this).extent;ia(this).attr("x",e[0][0]).attr("y",e[0][1]).attr("width",e[1][0]-e[0][0]).attr("height",e[1][1]-e[0][1])}),t.selectAll(".selection").data([qi("selection")]).enter().append("rect").attr("class","selection").attr("cursor",Ri.selection).attr("fill","#777").attr("fill-opacity",.3).attr("stroke","#fff").attr("shape-rendering","crispEdges");var r=t.selectAll(".handle").data(e.handles,function(e){return e.type});r.exit().remove(),r.enter().append("rect").attr("class",function(e){return"handle handle--"+e.type}).attr("cursor",function(e){return Ri[e.type]}),t.each(c).attr("fill","none").attr("pointer-events","all").style("-webkit-tap-highlight-color","rgba(0,0,0,0)").on("mousedown.brush touchstart.brush",l)}function c(){var e=ia(this),t=Wi(this).selection;t?(e.selectAll(".selection").style("display",null).attr("x",t[0][0]).attr("y",t[0][1]).attr("width",t[1][0]-t[0][0]).attr("height",t[1][1]-t[0][1]),e.selectAll(".handle").style("display",null).attr("x",function(e){return"e"===e.type[e.type.length-1]?t[1][0]-i/2:t[0][0]-i/2}).attr("y",function(e){return"s"===e.type[0]?t[1][1]-i/2:t[0][1]-i/2}).attr("width",function(e){return"n"===e.type||"s"===e.type?t[1][0]-t[0][0]+i:i}).attr("height",function(e){return"e"===e.type||"w"===e.type?t[1][1]-t[0][1]+i:i})):e.selectAll(".selection,.handle").style("display","none").attr("x",null).attr("y",null).attr("width",null).attr("height",null)}function o(e,t){return e.__brush.emitter||new u(e,t)}function u(e,t){this.that=e,this.args=t,this.state=e.__brush,this.active=0}function l(){if(Zr.touches){if(Zr.changedTouches.length<Zr.touches.length)return Yi()}else if(t)return;if(r.apply(this,arguments)){var n,a,i,f,u,l,s,d,h,b,p,g,m,y=this,v=Zr.target.__data__.type,w="selection"===(Zr.metaKey?v="overlay":v)?Fi:Zr.altKey?ji:Ii,x=e===Gi?null:Xi[v],_=e===Oi?null:Hi[v],M=Wi(y),S=M.extent,A=M.selection,T=S[0][0],C=S[0][1],N=S[1][0],k=S[1][1],E=x&&_&&Zr.shiftKey,D=ca(y),L=D,P=o(y,arguments).beforestart();"overlay"===v?M.selection=A=[[n=e===Gi?T:D[0],i=e===Oi?C:D[1]],[u=e===Gi?N:n,s=e===Oi?k:i]]:(n=A[0][0],i=A[0][1],u=A[1][0],s=A[1][1]),a=n,f=i,l=u,d=s;var U=ia(y).attr("pointer-events","none"),$=U.selectAll(".overlay").attr("cursor",Ri[v]);if(Zr.touches)U.on("touchmove.brush",F,!0).on("touchend.brush touchcancel.brush",I,!0);else{var Y=ia(Zr.view).on("keydown.brush",function(){switch(Zr.keyCode){case 16:E=x&&_;break;case 18:w===Ii&&(x&&(u=l-h*x,n=a+h*x),_&&(s=d-b*_,i=f+b*_),w=ji,B());break;case 32:w!==Ii&&w!==ji||(x<0?u=l-h:x>0&&(n=a-h),_<0?s=d-b:_>0&&(i=f-b),w=Bi,$.attr("cursor",Ri.selection),B());break;default:return}Yi()},!0).on("keyup.brush",function(){switch(Zr.keyCode){case 16:E&&(g=m=E=!1,B());break;case 18:w===ji&&(x<0?u=l:x>0&&(n=a),_<0?s=d:_>0&&(i=f),w=Ii,B());break;case 32:w===Bi&&(Zr.altKey?(x&&(u=l-h*x,n=a+h*x),_&&(s=d-b*_,i=f+b*_),w=ji):(x<0?u=l:x>0&&(n=a),_<0?s=d:_>0&&(i=f),w=Ii),$.attr("cursor",Ri[v]),B());break;default:return}Yi()},!0).on("mousemove.brush",F,!0).on("mouseup.brush",I,!0);Li(Zr.view)}$i(),Qa(y),c.call(y),P.start()}function F(){var e=ca(y);!E||g||m||(Math.abs(e[0]-L[0])>Math.abs(e[1]-L[1])?m=!0:g=!0),L=e,p=!0,Yi(),B()}function B(){var e;switch(h=L[0]-D[0],b=L[1]-D[1],w){case Bi:case Fi:x&&(h=Math.max(T-n,Math.min(N-u,h)),a=n+h,l=u+h),_&&(b=Math.max(C-i,Math.min(k-s,b)),f=i+b,d=s+b);break;case Ii:x<0?(h=Math.max(T-n,Math.min(N-n,h)),a=n+h,l=u):x>0&&(h=Math.max(T-u,Math.min(N-u,h)),a=n,l=u+h),_<0?(b=Math.max(C-i,Math.min(k-i,b)),f=i+b,d=s):_>0&&(b=Math.max(C-s,Math.min(k-s,b)),f=i,d=s+b);break;case ji:x&&(a=Math.max(T,Math.min(N,n-h*x)),l=Math.max(T,Math.min(N,u+h*x))),_&&(f=Math.max(C,Math.min(k,i-b*_)),d=Math.max(C,Math.min(k,s+b*_)))}l<a&&(x*=-1,e=n,n=u,u=e,e=a,a=l,l=e,v in zi&&$.attr("cursor",Ri[v=zi[v]])),d<f&&(_*=-1,e=i,i=s,s=e,e=f,f=d,d=e,v in Vi&&$.attr("cursor",Ri[v=Vi[v]])),M.selection&&(A=M.selection),g&&(a=A[0][0],l=A[1][0]),m&&(f=A[0][1],d=A[1][1]),A[0][0]===a&&A[0][1]===f&&A[1][0]===l&&A[1][1]===d||(M.selection=[[a,f],[l,d]],c.call(y),P.brush())}function I(){if($i(),Zr.touches){if(Zr.touches.length)return;t&&clearTimeout(t),t=setTimeout(function(){t=null},500),U.on("touchmove.brush touchend.brush touchcancel.brush",null)}else!function(e,t){var n=e.document.documentElement,r=ia(e).on("dragstart.drag",null);t&&(r.on("click.drag",Di,!0),setTimeout(function(){r.on("click.drag",null)},0)),"onselectstart"in n?r.on("selectstart.drag",null):(n.style.MozUserSelect=n.__noselect,delete n.__noselect)}(Zr.view,p),Y.on("keydown.brush keyup.brush mousemove.brush mouseup.brush",null);U.attr("pointer-events","all"),$.attr("cursor",Ri.overlay),M.selection&&(A=M.selection),Ki(A)&&(M.selection=null,c.call(y)),P.end()}}function s(){var t=this.__brush||{selection:null};return t.extent=n.apply(this,arguments),t.dim=e,t}return f.move=function(t,n){t.selection?t.on("start.brush",function(){o(this,arguments).beforestart().start()}).on("interrupt.brush end.brush",function(){o(this,arguments).end()}).tween("brush",function(){var t=this,r=t.__brush,a=o(t,arguments),i=r.selection,f=e.input("function"==typeof n?n.apply(this,arguments):n,r.extent),u=Ke(i,f);function l(e){r.selection=1===e&&Ki(f)?null:u(e),c.call(t),a.brush()}return i&&f?l:l(1)}):t.each(function(){var t=arguments,r=this.__brush,a=e.input("function"==typeof n?n.apply(this,t):n,r.extent),i=o(this,t).beforestart();Qa(this),r.selection=null==a||Ki(a)?null:a,c.call(this),i.start().brush().end()})},u.prototype={beforestart:function(){return 1==++this.active&&(this.state.emitter=this,this.starting=!0),this},start:function(){return this.starting&&(this.starting=!1,this.emit("start")),this},brush:function(){return this.emit("brush"),this},end:function(){return 0==--this.active&&(delete this.state.emitter,this.emit("end")),this},emit:function(t){!function(e,t,n,r){var a=Zr;e.sourceEvent=Zr,Zr=e;try{t.apply(n,r)}finally{Zr=a}}(new Ui(f,t,e.output(this.state.selection)),a.apply,a,[t,this.that,this.args])}},f.extent=function(e){return arguments.length?(n="function"==typeof e?e:Pi([[+e[0][0],+e[0][1]],[+e[1][0],+e[1][1]]]),f):n},f.filter=function(e){return arguments.length?(r="function"==typeof e?e:Pi(!!e),f):r},f.handleSize=function(e){return arguments.length?(i=+e,f):i},f.on=function(){var e=a.on.apply(a,arguments);return e===a?f:e},f}(Oi)}class ef{constructor(e,t=!0,n=10,r="Reds"){this.data=e,this.useLog=t,this.logBase=n,this.colorScheme=r,this.xScale=void 0,this.yScale=void 0,this.colorScale=void 0,this.bubbleScale=void 0,this.toolbar=void 0,this.tooltip=void 0}addTooltip(e){let t=$(`#${e}`),n=e+"-tooltip";0==$(`#${n}`).length&&$("<div/>").attr("id",n).appendTo(t),this.tooltip=new Si(n),ia(`#${n}`).classed("bubblemap-tooltip",!0)}drawCanvas(e,t={w:1e3,h:600,top:20,left:20},n,r={column:{show:!0,angle:30,adjust:0,location:"bottom",textAlign:"left"},row:{show:!0,angle:0,adjust:0,location:"left",textAlign:"right"}}){this._setScales(t,n);let a=e.node().getContext("2d");a.fillStyle="#ffffff",a.rect(0,0,e.attr("width"),e.attr("height")),a.fill(),this.data.forEach(e=>{a.beginPath(),a.fillStyle=this.colorScale(e.value),a.arc(this.xScale(e.x)+this.xScale.bandwidth()/2,this.yScale(e.y),this.bubbleScale(e.r),0,2*Math.PI),a.fill(),a.closePath()});let i=r.column,f=r.row;f.show&&(a.save(),a.textAlign=i.textAlign,a.fillStyle="black",a.font="10px Open Sans",this.yScale.domain().forEach(e=>{a.fillText(e,this.xScale.range()[0]-f.adjust,this.yScale(e)+2)}),a.restore()),i.show&&this.xScale.domain().forEach(e=>{a.save(),a.fillStyle="black",a.font="10px Open Sans",a.textAlign=i.textAlign,a.translate(this.xScale(e)+this.xScale.bandwidth()/2-3,this.yScale.range()[1]+i.adjust),a.rotate(0==i.angle?0:Math.PI/(180/i.angle)),a.fillText(e,0,0),a.restore()})}drawCombo(e,t,n={w:1e3,h:600,top:0,left:0},r,a=!0,i={column:{show:!0,angle:30,adjust:0,location:"bottom",textAlign:"left"},row:{show:!0,angle:0,adjust:0,location:"left",textAlign:"right"}}){let f={w:n.w,h:n.h2,top:n.top,left:n.left};this.drawSvg(t,f,r,50,i);let c=e.append("g").attr("clip-path","url(#clip)");if(this._setMiniScales(n,r),c.selectAll(".mini-map-cell").data(this.data,e=>e.value).enter().append("circle").attr("class","mini-map-cell").attr("row",e=>`x${this.xScaleMini.domain().indexOf(e.x)}`).attr("col",e=>`y${this.yScaleMini.domain().indexOf(e.y)}`).attr("cx",e=>this.xScaleMini(e.x)+this.xScaleMini.bandwidth()/2).attr("cy",e=>this.yScaleMini(e.y)).attr("r",e=>this.bubbleScaleMini(e.r)).style("fill",e=>this.colorScale(e.value)),a){let r=Ji().extent([[0,0],[n.w,n.h]]).on("brush",()=>{this._brushed(t,i)});e.append("g").attr("class","brush").call(r).call(r.move,[0,50*this.xScaleMini.bandwidth()])}}drawSvg(e,t={w:1e3,h:600,top:0,left:0},n,r=50,a={column:{show:!0,angle:30,adjust:0,location:"bottom",textAlign:"left"},row:{show:!0,angle:0,adjust:0,location:"left",textAlign:"right"}}){this._setScales(t,n,r);let i=this.tooltip;e.append("g").attr("clip-path","url(#clip)").selectAll(".bubble-map-cell").data(this.data,e=>e.value).enter().append("circle").attr("class","bubble-map-cell").attr("row",e=>`x${this.xScale.domain().indexOf(e.x)}`).attr("col",e=>`y${this.yScale.domain().indexOf(e.y)}`).attr("cx",e=>this.xScale(e.x)+this.xScale.bandwidth()/2).attr("cy",e=>this.yScale(e.y)+this.yScale.bandwidth()/2).attr("r",e=>this.bubbleScale(e.r)).style("fill",e=>this.colorScale(e.value)).on("mouseover",function(t){let n=ia(this),r=n.attr("row"),a=n.attr("col");e.selectAll(".bubble-map-xlabel").filter(`.${r}`).classed("highlighted",!0),e.selectAll(".bubble-map-ylabel").filter(`.${a}`).classed("highlighted",!0),n.classed("highlighted",!0);let f=void 0===t.displayValue?parseFloat(t.value.toExponential()).toPrecision(4):t.displayValue,c=void 0===t.rDisplayValue?t.r.toPrecision(4):t.rDisplayValue,o=void 0===t.displayX?t.x:t.displayX,u=void 0===t.displayY?t.y:t.displayY;i.show(`Column: ${o} <br/> Row: ${u}<br/> Value: ${f}<br/> Size: ${c}`)}).on("mouseout",function(){e.selectAll("*").classed("highlighted",!1),i.hide()});let f=a.column,c=a.row;if(f.show){let t={};N().key(e=>e.x).entries(this.data).forEach(e=>{t[e.key]=e.values[0].displayX});e.selectAll(".bubble-map-xlabel").data(this.xScale.domain()).enter().append("text").attr("class",(e,t)=>`bubble-map-xlabel x${t}`).attr("x",0).attr("y",0).attr("text-anchor","left"==f.textAlign?"start":"end").style("cursor","default").style("font-size",()=>{return`${Math.floor(this.xScale.bandwidth()/2)>12?12:Math.floor(this.xScale.bandwidth()/2)}px`}).attr("transform",e=>{return`translate(${this.xScale(e)+this.xScale.bandwidth()/3}, ${this.yScale.range()[1]+f.adjust}) rotate(${f.angle})`}).text(e=>t[e]||e)}if(c.show){let t={};N().key(e=>e.y).entries(this.data).forEach(e=>{t[e.key]=e.values[0].displayY});e.selectAll(".bubble-map-ylabel").data(this.yScale.domain()).enter().append("text").attr("class",(e,t)=>`bubble-map-ylabel y${t}`).attr("x",0).attr("y",0).attr("text-anchor","left"==c.textAlign?"start":"end").style("cursor","default").style("font-size",()=>{return`${Math.floor(this.yScale.bandwidth()/1.5)>14?14:Math.floor(this.yScale.bandwidth()/1.5)<10?10:Math.floor(this.yScale.bandwidth()/1.5)}px`}).attr("transform",e=>{return`translate(${this.xScale.range()[0]-c.adjust}, ${this.yScale(e)+this.yScale.bandwidth()/1.5}) rotate(${c.angle})`}).text(e=>t[e]||e)}}drawColorLegend(e,t={x:0,y:0},n=5,r=""){!function(e,t,n,r,a,i=10,f=10,c={h:10,w:40},o="h",u=!1){let l=[];if(u){let e=[...Array(i+1).keys()],t=n.domain()[1]/i;l=(l=e.map(e=>e*t)).concat(e.filter(e=>0!=e).map(e=>0-e*t)).sort((e,t)=>e<t?-1:e>t?1:e>=t?0:NaN)}else{let e=[...Array(i+1).keys()],t=n.domain()[1]/i;l=e.map(e=>e*t)}const s=t.append("g").attr("transform",`translate(${r.x}, ${r.y})`).selectAll(".legend").data(l).enter().append("g").classed("legend",!0);"h"==o?(t.append("text").attr("class","color-legend").text(e).attr("x",-10).attr("text-anchor","end").attr("y",c.h).attr("transform",`translate(${r.x}, ${r.y})`),s.append("rect").attr("x",(e,t)=>c.w*t).attr("y",5).attr("width",c.w).attr("height",c.h).style("fill",n),s.append("text").attr("class","color-legend").text(e=>a?Math.pow(f,e).toPrecision(2):e.toPrecision(2)).attr("x",(e,t)=>c.w*t).attr("y",0)):(t.append("text").attr("class","color-legend").text(e).attr("x",5).attr("text-anchor","start").attr("y",0).attr("transform",`translate(${r.x}, ${r.y+c.h*l.length})rotate(90)`),s.append("rect").attr("x",0).attr("y",(e,t)=>c.h*t).attr("width",c.w).attr("height",c.h).style("fill",n),s.append("text").attr("class","color-legend").text(e=>a?(Math.pow(f,e)-1).toPrecision(2):e.toPrecision(2)).attr("x",15).attr("y",(e,t)=>c.h*t+c.h/2))}(r,e,this.colorScale,t,this.useLog,n,this.logBase,{h:10,w:40},"h",!0)}drawBubbleLegend(e,t={x:0,y:0,title:"Bubble legend"},n=5,r=""){e.selectAll(".bmap-bubble-legend").remove();let a=[...Array(n+1).keys()],i=(this.bubbleScale.domain()[1]-this.bubbleScale.domain()[0])/n,f=a.map(e=>this.bubbleScale.domain()[0]+e*i),c=e.append("g").attr("class","bmap-bubble-legend").attr("transform",`translate(${t.x}, ${t.y})`);c.append("text").attr("class","color-legend").text(t.title).attr("x",-10).attr("text-anchor","end").attr("y",10);let o=c.selectAll(".legend").data(f).enter().append("g").classed("legend",!0);o.append("circle").attr("cx",(e,t)=>40*t).attr("cy",10).attr("r",e=>this.bubbleScale(e)).style("fill","black"),o.append("text").attr("class","color-legend").text(e=>this.useLog?Math.pow(base,e).toPrecision(2):e.toPrecision(2)).attr("x",(e,t)=>40*t-5).attr("y",0)}_brushed(e,t){let n=Zr.selection,r=Math.round(n[0]/this.xScaleMini.step()),a=Math.round(n[1]/this.xScaleMini.step());this.xScale.domain(this.xScaleMini.domain().slice(r,a));let i=this._setBubbleMax();this.bubbleScale=this._setBubbleScale({max:i,min:2}),e.selectAll(".bubble-map-cell").attr("cx",e=>{let t=this.xScale(e.x);return void 0===t?this.xScale.bandwidth()/2:t+this.xScale.bandwidth()/2}).attr("r",e=>{return void 0===this.xScale(e.x)?0:this.bubbleScale(e.r)}),e.selectAll(".bubble-map-xlabel").attr("transform",e=>{return`translate(${this.xScale(e)+5||0}, ${this.yScale.range()[1]+t.column.adjust}) rotate(${t.column.angle})`}).style("display",e=>{return void 0===this.xScale(e)?"none":"block"})}_setMiniScales(e={w:1e3,h:600,top:20,left:20},t){if(void 0===this.xScaleMini&&(this.xScaleMini=this._setXScaleMini(e)),void 0===this.yScaleMini&&(this.yScaleMini=this._setYScaleMini(e)),void 0===this.colorScale&&(this.colorScale=this._setColorScale(t)),void 0===this.bubbleScaleMini){let e=this._setBubbleMax(!0);this.bubbleScaleMini=this._setBubbleScale({max:e,min:1})}}_setScales(e={w:1e3,h:600,top:20,left:20},t){if(void 0===this.xScale&&(this.xScale=this._setXScale(e)),void 0===this.yScale&&(this.yScale=this._setYScale(e)),void 0===this.colorScale&&(this.colorScale=this._setColorScale(t)),void 0===this.bubbleScale){let e=this._setBubbleMax();this.bubbleScale=this._setBubbleScale({max:e,min:2})}}_parseXList(){return N().key(e=>e.x).entries(this.data).map(e=>e.key).sort((e,t)=>e<t?-1:e>t?1:e>=t?0:NaN)}_parseYList(){return N().key(e=>e.y).entries(this.data).map(e=>e.key).sort((e,t)=>e<t?-1:e>t?1:e>=t?0:NaN)}_setXScaleMini(e={w:1e3,left:20}){let t=this._parseXList();return this._setXScale(e,t)}_setXScale(e={w:1e3,left:20},t){return t=void 0===t?this._parseXList():t,B().domain(t).range([e.left,e.left+e.w]).padding(.05)}_setYScaleMini(e={h:600,top:20}){let t=this._parseYList();return this._setYScale(e,t)}_setYScale(e={h:600,top:20},t){return t=void 0===t?this._parseYList():t,B().domain(t).range([e.top,e.top+e.h]).padding(.05)}_setColorScale(e){let t=this.useLog;return Mi(void 0===e?this.data.map(e=>t?this._log(e.value):e.value):e,this.colorScheme,void 0,void 0,!0)}_setBubbleMax(e=!1,t=2,n=10){let r=e?this.xScaleMini:this.xScale,a=e?this.yScaleMini:this.yScale,i=S([r.bandwidth(),a.bandwidth()])/t;return n<i?n:i}_setBubbleScale(e={max:10,min:0}){return Pt().domain([3,S(this.data.map(e=>e.r))]).range([e.min,e.max])}_log(e){return Math.log(Number(e+1))/Math.log(this.logBase)}}const tf={id:"gtexVizBubblemap",data:{heatmap:la({x:50,y:10,scaleFactor:1e3}),dendroHeatmap:{rowTree:"(((TP53:0.17,SLK:0.17):1.18,NDRG4:1.34):1.33,ACTN3:2.67);",colTree:"(((Adipose Visceral Omentum:0.06,Adipose Subcutaneous:0.06):0.00,Bladder:0.06):0.16,Adrenal Gland:0.22);",heatmap:[{y:"SLK",value:35.505,x:"Adipose Subcutaneous",unit:"TPM"},{y:"SLK",value:29.28,x:"Adipose Visceral Omentum",unit:"TPM"},{y:"SLK",value:17.405,x:"Adrenal Gland",unit:"TPM"},{y:"SLK",value:53.29,x:"Bladder",unit:"TPM"},{y:"NDRG4",value:12.035,x:"Adipose Subcutaneous",unit:"TPM"},{y:"NDRG4",value:6.531000000000001,x:"Adipose Visceral Omentum",unit:"TPM"},{y:"NDRG4",value:134.8,x:"Adrenal Gland",unit:"TPM"},{y:"NDRG4",value:7.1160000000000005,x:"Bladder",unit:"TPM"},{y:"TP53",value:29.935,x:"Adipose Subcutaneous",unit:"TPM"},{y:"TP53",value:23.55,x:"Adipose Visceral Omentum",unit:"TPM"},{y:"TP53",value:18.515,x:"Adrenal Gland",unit:"TPM"},{y:"TP53",value:40.51,x:"Bladder",unit:"TPM"},{y:"ACTN3",value:.33145,x:"Adipose Subcutaneous",unit:"TPM"},{y:"ACTN3",value:.3317,x:"Adipose Visceral Omentum",unit:"TPM"},{y:"ACTN3",value:.100005,x:"Adrenal Gland",unit:"TPM"},{y:"ACTN3",value:.48100000000000004,x:"Bladder",unit:"TPM"}]},groupedViolinPlot:[{group:"Group 1",label:"Gene 1",values:y(0,2e3).map(sa(2,1))},{group:"Group 1",label:"Gene 2",values:y(0,2e3).map(sa(5,1))},{group:"Group 1",label:"Gene 3",values:y(0,2e3).map(sa(10,1))},{group:"Group 2",label:"Gene 1",values:y(0,2e3).map(sa(5,1))},{group:"Group 2",label:"Gene 2",values:y(0,2e3).map(sa(3,1))},{group:"Group 2",label:"Gene 3",values:y(0,2e3).map(sa(1,1))},{group:"Group 3",label:"Gene 1",values:y(0,2e3).map(sa(2,1))},{group:"Group 3",label:"Gene 2",values:y(0,2e3).map(sa(3,1))},{group:"Group 3",label:"Gene 3",values:y(0,2e3).map(sa(5,1))}],transcriptTracks:{exons:{"ENST00000311595.9":[{chrom:"17",chromEnd:77071172,exonId:"ENSE00002713933.1",exonNumber:"1",chromStart:77071151,strand:"+"},{chrom:"17",chromEnd:77073579,exonId:"ENSE00003672628.1",exonNumber:"2",chromStart:77073512,strand:"+"},{chrom:"17",chromEnd:77073946,exonId:"ENSE00003475281.1",exonNumber:"3",chromStart:77073745,strand:"+"},{chrom:"17",chromEnd:77075719,exonId:"ENSE00001111713.1",exonNumber:"4",chromStart:77075571,strand:"+"},{chrom:"17",chromEnd:77076446,exonId:"ENSE00003651250.1",exonNumber:"5",chromStart:77076289,strand:"+"},{chrom:"17",chromEnd:77077155,exonId:"ENSE00003607773.1",exonNumber:"6",chromStart:77077007,strand:"+"},{chrom:"17",chromEnd:77078612,exonId:"ENSE00002720924.1",exonNumber:"7",chromStart:77077980,strand:"+"}]},transcripts:[{chromosome:"17",end:77078612,gencodeId:"ENSG00000167280.12",geneSymbol:"ENGASE",start:77071151,strand:"+",transcriptId:"ENST00000311595.9"}]},bubbleMap:la({x:50,y:10,scaleFactor:1,diverging:!0,bubble:!0}),ldPlot:la({x:2,y:2,scaleFactor:1})}.bubbleMap,width:1200,height:400,marginTop:100,marginRight:100,marginBottom:30,marginLeft:30,labels:{column:{show:!0,height:100,angle:90,adjust:10,location:"bottom",textAlign:"left"},row:{show:!0,width:150,angle:0,adjust:0,location:"left",textAlign:"right"}},useLog:!1,logBase:10,colorScheme:"RdBu",colorScaleDomain:[-.75,.75],useCanvas:!1};function nf(e=tf){let t={left:e.showLabels?e.marginLeft+e.rowLabelWidth:e.marginLeft,top:e.marginTop,right:e.marginRight,bottom:e.showLabels?e.marginBottom+e.columnLabelHeight:e.marginBottom},n=e.width-(e.labels.row.width+e.marginLeft+e.marginRight),r=e.height-(e.labels.column.height+e.marginTop+e.marginBottom);if(e.useCanvas){let a=new ef(e.data,e.useLog,e.logBase,e.colorScheme);a.addTooltip(canvasId);let i=function(e,t,n,r,a,i="absolute"){return oa(e),void 0===a&&(a=`${e}-canvas`),ia(`#${e}`).append("canvas").attr("id",a).attr("width",t).attr("height",n).style("position",i)}(e.id,e.width,e.height);a.drawCanvas(i,{w:n,h:r,top:t.top,left:t.left},e.colorScaleDomain,e.labels)}else{let a=new ef(e.data,e.useLog,e.logBase,e.colorScheme);a.addTooltip(e.id);let i=ua(e.id,e.width,e.height,t);a.drawSvg(i,{w:n,h:r,top:0,left:0},e.colorScaleDomain,0,e.labels),a.drawColorLegend(i,{x:0,y:-40},3,"NES"),a.drawBubbleLegend(i,{x:500,y:-40,title:"-log10(p-value)"},5,"-log10(p-value)")}}const rf={id:"demo",data:void 0,width:1800,height:300,marginLeft:10,marginRight:10,marginTop:20,marginBottom:0,showLabels:!0,trackColor:"#848484",url:"../tempData/ACTN3.neighbor.genes.csv",center:66546395,dataParser:e=>(e.start=parseInt(e.start),e.end=parseInt(e.end),e.featureLabel=e.geneSymbol,e.featureType=e.geneType,e),dataFilter:e=>"protein coding"==e.featureType||"lincRNA"==e.featureType},af={id:"eQTL-browser",data:void 0,width:1800,height:20,marginLeft:10,marginRight:10,marginTop:0,marginBottom:0,url:"/tempData/ACTN3.eqtls.csv",center:66546395,showLabels:!1,trackColor:"#58c9d7",dataParser:e=>(e.chr=e.chromosome,e.start=parseInt(e.pos),e.end=e.start,e.featureType="variant",e.featureLabel=e.snpId||e.variantId,e.strand="+",e),dataFilter:e=>e},ff={id:"sQTL-browser",data:void 0,width:1800,height:20,marginLeft:10,marginRight:10,marginTop:0,marginBottom:0,url:"/tempData/ACTN3.sqtls.csv",center:66546395,showLabels:!1,trackColor:"#00aed7",dataParser:e=>(e.chr=e.chromosome,e.start=parseInt(e.pos),e.end=e.start,e.featureType="variant",e.featureLabel=e.snpId||e.variantId,e.strand="+",e),dataFilter:e=>e},cf={id:"QTL-map",width:1800,height:150,marginTop:0,marginRight:0,marginBottom:0,marginLeft:100,colorScheme:"RdBu",colorScaleDomain:[-.75,.75],useLog:!1,logBase:void 0,divSpinner:"spinner",divDashboard:"bmap-dashboard",divInfo:"bmap-filter-info",divGeneInfo:"bmap-gene-info",divModal:"bmap-modal",data:[],urls:["/tempData/ACTN3.eqtls.csv","/tempData/ACTN3.sqtls.csv"],dataType:["eQTL","sQTL"],labels:{column:{show:!1,height:100,angle:90,adjust:10,location:"bottom",textAlign:"left"},row:{show:!0,width:150,angle:0,adjust:0,location:"left",textAlign:"right"}},useCanvas:!1};return e.demoConfig=rf,e.eqtlConfig=af,e.sqtlConfig=ff,e.qtlMapConfig=cf,e.renderQtlMap=function(e,t=cf){const n=t.urls.map(e=>h(e));Promise.all(n).then(function(e){e.forEach((e,n)=>{let r=t.dataType[n];console.log(r),e.forEach(e=>{e.x=e.variantId,e.y=e.geneSymbol+"-"+r,e.value=parseFloat(e.nes),e.displayValue=e.value.toPrecision(3),e.r=-Math.log10(parseInt(e.pValue)),e.rDisplayValue=parseFloat(e.r.toExponential()).toPrecision(3),t.data.push(e)})}),console.log(t.data),nf(t)}).catch(function(e){console.error(e)})},e.renderBrowserTrack=function(e,t=rf){oa(t.id);let n=t.width-(t.marginLeft+t.marginRight),r=t.height-(t.marginTop+t.marginBottom),a={top:t.marginTop,right:t.marginRight,bottom:t.marginBottom,left:t.marginLeft},i=ua(t.id,t.width,t.height,a);h(t.url).then(e=>{t.data=e.map(t.dataParser).filter(t.dataFilter),t.data.sort((e,t)=>parseInt(e.start)-parseInt(t.start)),new pr(t.data,t.center).render(i,n,r,!1,t.showLabels,t.trackColor)}).catch(e=>{console.error(e)})},e}({});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
